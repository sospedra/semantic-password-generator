{"version":3,"sources":["js/elements.ts","js/clipboard.ts","../../../node_modules/compromise/builds/compromise.mjs","../src/index.mjs","../../../node_modules/node-libs-browser/node_modules/punycode/punycode.js","../../../node_modules/ent/reversed.json","../../../node_modules/ent/encode.js","../../../node_modules/ent/entities.json","../../../node_modules/ent/decode.js","../../../node_modules/ent/index.js","../../../node_modules/semantic-password-generator/src/request.ts","../../../node_modules/lodash.random/index.js","../../../node_modules/lodash.isnumber/index.js","../../../node_modules/lodash.identity/index.js","../../../node_modules/semantic-password-generator/src/password.ts","../../../node_modules/semantic-password-generator/src/transform/normalize.ts","../../../node_modules/semantic-password-generator/src/transform/length.ts","../../../node_modules/semantic-password-generator/src/shall.ts","../../../node_modules/semantic-password-generator/src/transform/leet.ts","../../../node_modules/semantic-password-generator/src/transform/case.ts","../../../node_modules/semantic-password-generator/src/transform/random.ts","../../../node_modules/semantic-password-generator/src/transform/symbols.ts","../../../node_modules/semantic-password-generator/src/generator.ts","../../../node_modules/semantic-password-generator/src/index.ts","js/generator.ts","js/index.ts"],"names":["src","_typeof","obj","Symbol","iterator","constructor","prototype","_classCallCheck","instance","Constructor","TypeError","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","protoProps","staticProps","_inherits","subClass","superClass","create","value","_setPrototypeOf","_getPrototypeOf","o","setPrototypeOf","getPrototypeOf","__proto__","p","_isNativeReflectConstruct","Reflect","construct","sham","Proxy","Date","toString","call","e","_assertThisInitialized","self","ReferenceError","_possibleConstructorReturn","_createSuper","Derived","hasNativeReflectConstruct","Super","result","NewTarget","arguments","apply","_slicedToArray","arr","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","Array","isArray","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","err","minLen","_arrayLikeToArray","n","slice","name","from","test","len","arr2","chars","split","makeId","str","text","Math","floor","random","_id","compact","a","b","c","d","f","g","h","I","j","k","l","m","q","r","s","t","u","v","w","x","y","z","unicode","keys","forEach","killUnicode","join","unicode_1","periodAcronym","oneLetterAcronym","noPeriodAcronym","lowerCaseAcronym","isAcronym","isAcronym_1","hasSlash","clean","original","toLowerCase","trim","replace","clean_1","reduced","reduce","startings","endings","hasSlash$1","hasApostrophe","hasAcronym","minusNumber","parseTerm","pre","post","found","after","parsed","word","alias","parse","createCommonjsModule","fn","basedir","module","path","exports","require","base","commonjsRequire","Error","_01Case","titleCase","upperCase","toUpperCase","toTitleCase","isUpperCase","isTitleCase","_02Punctuation","startQuote","endQuote","hasPost","punct","indexOf","hasPre","hasQuote","hasQuotation","hasComma","hasPeriod","hasExclamation","hasQuestionMark","hasEllipses","hasSemicolon","hasHyphen","hyphen","hasDash","hasContraction","Boolean","implicit","addPunctuation","wrapMatch","doesMatch","reg","index","id","anything","start","end","hasOwnProperty","soft","root","tag","tags","method","regex","oneOf","choices","operator","every","some","_doesMatch","negative","boring","doesMatch_1","isAcronym_1$1","isImplicit","isKnown","setRoot","world","transform","transforms","Plural","toSingular","Verb","Negative","Infinitive","tense","PastTense","Gerund","PresentTense","Participle","Actor","toInfinitive","_03Misc","hasSpace","textOut","options","showPre","showPost","before","normal","titlecase","ProperNoun","Acronym","lowercase","acronyms","whitespace","last","punctuation","abbreviations","Abbreviation","_04Text","boringTags","Auxiliary","Possessive","rankTags","term","tagSet","sort","lineage","isA","_bestTag","jsonDefault","offset","bestTag","json","assign","_05Json","methods","isClientSide","window","document","padEnd","width","logTag","reason","console","log","logUntag","charAt","substr","fns","addTag","tagset","isVerbose","down","unTag","notA","addTags","add","lowerCase","titleCase$1","untagAll","unTag_1","canBe","enemies","canBe_1","tag_1","tagSafe","unTag_1$1","canBe_1$1","Term","String","prev","clone","Term_1","terms","cache","pool","get","error","isShallow","_this","buildFrom","newTerms","map","lastTerm","hasId","wantId","_terms","lastId","concat","wordCount","filter","fullSentence","_01Utils","trimEnd","isFirst","isLast","isFull","_02Text","_03Change","endOfSentence","combinePost","match","addWhitespace","beforeTerms","newTerm","stitchIn","lastBefore","lastNew","afterId","beforeId","unique","list","appendPhrase","newPhrase","doc","toStretch","docs","parents","parent","shouldChange","append","hasSpace$1","addWhitespace$1","stitchIn$1","main","unique$1","joinPhrase","starterId","prepend","shrinkAll","deleteLength","phrase","find","deletePhrase","set","_delete","append_1","prepend_1","_delete$1","firstLength","tmp","splitOn","findIndex","_04Insert","json$1","res","_05Json$1","lookAhead","regs","all","getAfter","lookBehind","getBefore","_06Lookahead","methods$1","failFast","optional","_02FailFast","getGreedy","until","count","max","min","greedyTo","nextReg","getOrCreateGroup","namedGroups","namedGroupId","startIndex","group","tryHere","previousGroupId","isNamedGroup","named","hasNeeds","remain","greedy","startAt","_g","skipto","_03TryMatch","postProcess","matches","atEnd","_ref","_04PostProcess","hasMinMax","andSign","captureName","RegExp","titleCase$2","stripStart","stripEnd","stripBoth","parseToken","groupType","exec","Number","parseToken_1","isNamed","capture","fillGroups","tokens","convert","current","useOneOf","token","postProcess$1","postProcess_1","isArray$1","byParentheses","byWords","words","byArray","fromDoc","ids","syntax","input","syntax_1","matchAll","matchOne","minLength","_tryMatch","_tryMatch2","groups","_tryMatch3","_tryMatch4","_match","_groups","_01MatchAll","notMatch","not","match_1","justOne","has","not$1","_this2","canBe$1","_this3","results","previous","can","Phrase","aliases","Phrase_1","Pool","Pool_1","linkTerms","_linkTerms","initSplit","hasSomething","isAcronym$1","hasEllipse","newLine","hasLetter","startWhitespace","naiive_split","lines","isSentence","abbrevs","txt","lastWord","splitSentences","sentences","chunks","splits","_i2","ws","_01Sentences","wordlike","isBoundary","naiiveSplit","isSlash","notWord","combineSlashes","splitHyphens","hyphens","whichDash","isArray$2","splitWords","carry","_02Words","isArray$3","fromText","phrases","_01Tokenizer","fromJSON","fromJSON_1","_version","_data","entity","nouns","Noun","Singular","Person","FirstName","MaleName","FemaleName","LastName","NickName","Honorific","Place","Country","City","Region","Address","Organization","SportsTeam","School","Company","Uncountable","Pronoun","Activity","Unit","Demonym","verbs","FutureTense","Copula","Modal","PerfectTense","Pluperfect","PhrasalVerb","Particle","values","Value","Ordinal","Cardinal","RomanNumeral","TextValue","NumericValue","Money","Percent","misc","Adjective","Comparable","Comparative","Superlative","NumberRange","Adverb","Month","WeekDay","Time","Determiner","Conjunction","Preposition","QuestionWord","Currency","Expression","Url","PhoneNumber","HashTag","AtMention","Emoji","Emoticon","Email","Condition","colorMap","addColors","color","_color","unique$2","inferIsA","_isA","unique$3","inferNotA","_notA","inferLineage","_lineage","validate","inferTags","inference","addIn","build","seq","toAlphaCode","_o","fromCharCode","fromAlphaCode","_t","charCodeAt","encoding","symbols","nodes","symCount","syms","indexFromRef","toArray","unpack","unpack_1","unpack_1$1","_o2","efrtUnpack_min","addWord","lex","addMore","lexicon","hasCompound","plural","toPlural","conj","conjugate","_conj","adjectives","_tags","_w","_conj2","_tags2","_w2","_plural","addWords","addIrregulars","irregulars","_loop","inf","forms","addIrregulars_1","misc$1","g8","vh1","q1","q2","q3","q4","plurals","addendum","alga","alumna","alumnus","analysis","antenna","appendix","avocado","axis","bacillus","barracks","beau","bus","cactus","chateau","child","circus","clothes","corpus","criterion","curriculum","database","deer","diagnosis","echo","embargo","epoch","foot","formula","fungus","genus","goose","halo","hippopotamus","larva","leaf","libretto","loaf","man","matrix","memorandum","modulus","mosquito","mouse","move","nebula","nucleus","octopus","opus","ovum","ox","parenthesis","person","phenomenon","prognosis","quiz","radius","referendum","rodeo","sex","shoe","sombrero","stimulus","stomach","syllabus","synopsis","tableau","thesis","thief","tooth","tornado","tuxedo","vertebra","mapping","prt","perf","pst","fut","pres","pluperf","conjugations","act","ache","age","aim","arise","babysit","ban","be","beat","become","begin","being","bend","bet","bind","bite","bleed","blow","boil","brake","breed","bring","broadcast","budget","burn","burst","buy","choose","cling","come","compete","cost","creep","cut","deal","develop","die","dig","dive","draw","dream","drink","drive","drop","eat","edit","egg","fall","feed","feel","fight","flee","fling","fly","forbid","forget","forgive","free","freeze","give","go","grow","hang","have","hear","hide","hit","hold","hurt","ice","imply","is","keep","kneel","know","lay","lead","leap","leave","lend","lie","light","loose","lose","make","mean","meet","miss","pay","prove","puke","put","quit","read","ride","ring","rise","rub","run","say","seat","see","seek","sell","send","sew","shake","shave","shed","shine","shoot","show","shut","sing","sink","sit","ski","slay","sleep","slide","smash","sneak","speak","speed","spend","spill","spin","spit","spread","spring","stand","steal","stick","sting","stink","stream","strew","strike","suit","sware","swear","sweep","swim","swing","take","teach","tear","tell","think","thrive","tie","undergo","understand","upset","wait","wake","wear","weave","wed","weep","win","wind","withdraw","wring","write","_final","full","conjugations_1","endsWith","repl","pr","pa","gr","ar","suffixes","posMap","doTransform","pos","checkSuffix","_01Suffixes","hasY","generic","_02Generic","conjugate_1","do_rules","dont_rules","nice","late","hard","inner","outer","far","worse","bad","good","big","large","to_superlative","toSuperlative","do_rules$1","dont_rules$1","irregulars$1","grey","gray","green","yellow","red","well","sad","transforms$1","to_comparative","toComparative","fns$1","conjugate$1","sup","comp","suffixes$1","_rules","addE","trySuffix","pluralize","_rules$1","invertObj","invert","toSingular_1","rules","to","_transform","guessVerb","_guess","guessTense","three","two","irregs","rule","toInfinitive_1","irregulars$2","transforms$2","_isVerbose","World","unpackWords","getByTag","bool","taggers","compounds","postProcessors","clone$1","JSON","stringify","w2","World_1","_01Utils$1","addParent","reverse","doShallow","ts","wordcount","_02Accessors","first","eq","firstTerms","firstTerm","lastTerms","termList","num","allGroups","_groups$j","getGroups","_loop2","getOneName","sentence","cacheRequired","needTags","needWords","failFast$1","_cache","_cacheRequired","checkCache","_03Match","ifNo","lookAfter","lookBefore","befores","hasAfter","hasBefore","tagTerms","safe","tagList","_setTag","tag$1","why","tagSafe$1","unTag$1","canBe$2","_04Tag","detachParent","sub","_this4","_this5","_05Loops","tokenize","buildTree","val","more","rest","fastLookup","_lookup","_06Lookup","lookup","isObj","byVal","lookUp","cache$1","uncache","_07Cache","titleCase$3","replaceWith","keepTags","newPhrases","merge","keepCase","tmpDoc","tagger","oldTags","replace$1","_replace","_01Replace","_02Insert","insertAfter","insertAt","insertBefore","arg","toRemove","remove","shouldTrim","text$1","showFull","trimPre","trimPost","_01Text","termOffsets","elapsed","offsets","calcOffset","_offset","_02Json","jsonDefaults","setOptions","frequency","freq","already","data","_debug","reset","css","blue","magenta","cyan","black","cli","logClientSide","tagString","topk","_topk","debug_1","out","_03Out","debug","methods$2","alpha","left","right","byFreq","counts","sortSequential","order","alphabetical","seqNames","sequence","sequential","chron","chronological","unique$4","_01Sort","isPunct","quotes","methods$3","termArr","quotations","adverbs","_methods","defaults","emoji","contractions","parentheses","possessives","honorifics","mapping$1","medium","heavy","normalize","strip","contraction","expand","unwrap","possessive","_02Normalize","_03Split","foundEm","parts","splitAfter","splitBefore","segment","eachTerm","toCamelCase","_04Case","_05Whitespace","hyphenate","dehyphenate","deHyphenate","toQuotations","toQuotation","toParentheses","removed","increase","_06Join","postPunct","setContraction","suffix","contract","_07Contract","methods$4","methods$5","emojis","atmentions","atMentions","phoneNumbers","money","places","organizations","clauses","entities","yup","people","things","topics","_simple","underOver","tryMultiple","checkLexicon","foundWords","noPrefix","_01Lexicon","apostrophes","perSec","checkPunctuation","endChar","_02Punctuation$1","startsWith","romanNumeral","romanNumValid","checkRegex","_03Prefixes","Adj","Inf","Pres","Sing","Past","Exp","Last","endsWith$1","Adj$1","Inf$1","Pres$1","Sing$1","Past$1","Avb","Plrl","Actor$1","Vb","Noun$1","Last$1","suffixMap","ea","ia","ic","ly","oed","ued","xed","azy","ped","ffy","ify","ing","ize","lar","mum","nes","nny","oid","ous","que","rmy","rol","sis","zes","amed","aped","ched","lked","nded","cted","dged","akis","cede","chuk","czyk","ects","ends","enko","ette","fies","fore","gate","gone","ices","ints","ions","less","llen","made","nsen","oses","ould","sson","tage","teen","tion","tive","tors","vice","tized","urned","eased","ances","bound","ettes","fully","ishes","ities","marek","nssen","ology","ports","rough","tches","tieth","tures","wards","where","auskas","keeper","logist","teenth","opoulos","borough","sdottir","endRegexs","_char","knownSuffixes","checkRegex$1","_04Suffixes","emoticons","emojiReg","isCommaEmoji","raw","isEmoticon","tagEmoji","_05Emoji","steps","lookups","_01Init","afterThisWord","it","there","because","but","who","his","when","you","very","old","never","beforeThisWord","me","only","him","were","took","himself","went","jr","afterThisPOS","beforeThisPOS","markov","beforeThisPos","afterThisPos","afterKeys","beforeKeys","checkNeighbours","foundTag","_tag","nextTerm","_tag2","_foundTag","_tag3","_01Neighbours","titleCase$4","hasNumber","checkCase","_02Case","hasPrefix","prefix","checkPrefix","stem","_03Stem","isPlural","isSingular","isPlural_1","noPlurals","notPlural","notSingular","checkPlural","_04Plurals","orgWords","maybeOrg","Comma","tagOrgs","_05Organizations","oneLetterAcronym$1","periodSeperated","oneLetterWord","A","isAcronym$2","checkAcronym","_06Acronyms","step","neighbours","fallbacks","_02Fallbacks","hasNegative","irregulars$3","wont","cant","cannot","dont","dun","doAint","noun","checkNegative","_01Negative","easy","ll","ve","re","checkApostrophe","_02Simple","irregulars$4","wanna","gonna","im","alot","ive","imma","whered","whend","howd","whatd","dunno","brb","gtg","irl","tbh","imo","til","rn","twas","checkIrregulars","_03Irregulars","hasApostropheS","banList","that","isPossessive","twoTerm","isHas","checkPossessive","_04Possessive","hasPerfect","useDid","how","what","checkPerfect","_05PerfectTense","isRange","checkRange","_06Ranges","contraction$1","french","qu","checkFrench","_07French","isNumber","createPhrase","_03Contractions","hasWord","hasTag","miscCorrection","notIf","fixMisc","unique$5","_unique","_01Misc","dates","list$1","_02Dates","_03Noun","adjectives$1","list$2","_04Adjective","_05Adverb","_06Value","verbs$1","list$3","_07Verbs","list$4","_08Place","_09Org","nouns$1","months","list$5","_10People","cacheRequired$1","allLists","lists","newM","enumerated","required","matches_1","hasEvery","chances","runner","allChances","worthIt","runner_1","corrections","_04Correction","_02Tagger","addMethod","Doc","Abbreviations","_Doc","_super","stripPeriods","addMethod$1","Acronyms","addMethod$2","commas","conjunctions","condition","tooLong","Clauses","addMethod$3","Contractions","contracted","isTitlecase","expanded","isExpanded","isContracted","addMethod$4","beforeLast","conjunction","hasOxford","Lists","items","needsComma","nounList","adjList","verbList","noPlural","hasPlural","hasPlural_1","irregulars$5","hour","heir","heirloom","honest","honour","honor","uber","an_acronyms","a_regexs","makeArticle","firstLetter","getArticle","isPlural$1","isSingular$1","_rules$2","endS","isPlural$2","isPlural_1$1","exceptions","he","she","they","we","her","their","our","my","your","toPossessive","toPossessive_1","parse$1","parse_1","methods$6","article","agree","an","adj","methods_1","addMethod$5","Nouns","open","close","addMethod$6","Parentheses","addMethod$7","Possessives","pairs","hasOpen","addMethod$8","Quotations","want","toInfinitive$1","verb","toInfinitive_1$1","findNoun","vb","isPlural$3","auxiliary","isPlural_1$2","toNegative","_inf","_inf2","toNegative_1","parseVerb","adverb","particle","adverbAfter","parse$2","toBe","isI","isNegative","toBe_1","conjugate$2","infinitive","space","_space","conjugate_1$1","methods$7","advb","toPastTense","toPresentTense","_this6","toFutureTense","_this7","_this8","toGerund","_this9","isPositive","_this10","toPositive","addMethod$9","Verbs","negate","addMethod$a","People","subclass","extend","addFn","Subset","methods$8","selections","aliases$1","untag","and","onlyIf","Doc_1","smallTagger","tiny","worldInstance","nlp","verbose","version","load","url","Promise","resolve","reject","request","XMLHttpRequest","headers","response","ok","status","statusText","responseURL","responseText","blob","Blob","entries","const","onload","getAllResponseHeaders","onerror","withCredentials","credentials","setRequestHeader","body"],"mappings":"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GA,EAAIq7B,GAASp7B,OAAQD,IAC/Bq7B,IAA6B,IAA7BA,GAASr7B,GAAG,GAAGsE,KAAKM,GAEfA,OADPA,EAAMA,EAAI8C,QAAQ2zB,GAASr7B,GAAG,GAAIq7B,GAASr7B,GAAG,IAK3C4E,OAAAA,GAGL42B,GAAepuB,GAGfquB,GAAQ,CACV7tB,WAAY,CAAC,CACXtC,IAAK,QACLowB,GAAI,MACH,CACDpwB,IAAK,iBACLowB,GAAI,WAEN7tB,MAAO,CAAC,CACNvC,IAAK,WACLowB,GAAI,OAEN/tB,aAAc,CAAC,CACbrC,IAAK,cACLowB,GAAI,OACH,CACDpwB,IAAK,eACLowB,GAAI,MACH,CACDpwB,IAAK,cACLowB,GAAI,MACH,CACDpwB,IAAK,0BACLowB,GAAI,OACH,CACDpwB,IAAK,2CACLowB,GAAI,MACH,CACDpwB,IAAK,UACLowB,GAAI,MACH,CACDpwB,IAAK,UACLowB,GAAI,MACH,CACDpwB,IAAK,eACLowB,GAAI,OACH,CACDpwB,IAAK,UACLowB,GAAI,MACH,CACDpwB,IAAK,UACLowB,GAAI,MACH,CACDpwB,IAAK,WACLowB,GAAI,OACH,CACDpwB,IAAK,OACLowB,GAAI,MACH,CACDpwB,IAAK,MACLowB,GAAI,KAENhuB,OAAQ,CAAC,CAEPpC,IAAK,wBACLowB,GAAI,QACH,CAEDpwB,IAAK,kBACLowB,GAAI,MACH,CACDpwB,IAAK,mBACLowB,GAAI,OACH,CACDpwB,IAAK,iBACLowB,GAAI,OACH,CAEDpwB,IAAK,qBACLowB,GAAI,MACH,CAEDpwB,IAAK,eACLowB,GAAI,MAEN,CAEEpwB,IAAK,WACLowB,GAAI,OACH,CAEDpwB,IAAK,mBACLowB,GAAI,OACH,CAEDpwB,IAAK,kBACLowB,GAAI,OACH,CAEDpwB,IAAK,wBACLowB,GAAI,OACH,CAEDpwB,IAAK,kBAELowB,GAAI,OACH,CAEDpwB,IAAK,aAELowB,GAAI,OAMN,CAEEpwB,IAAK,YACLowB,GAAI,OAENjuB,UAAW,CAAC,CACVnC,IAAK,UACLowB,GAAI,MACH,CACDpwB,IAAK,mBACLowB,GAAI,QACH,CACDpwB,IAAK,kBACLowB,GAAI,MACH,CACDpwB,IAAK,cACLowB,GAAI,QACH,CACDpwB,IAAK,iBACLowB,GAAI,QACH,CACDpwB,IAAK,cACLowB,GAAI,OACH,CACDpwB,IAAK,eACLowB,GAAI,MACH,CACDpwB,IAAK,WACLowB,GAAI,MACH,CACDpwB,IAAK,SACLowB,GAAI,KACH,CACDpwB,IAAK,SACLowB,GAAI,KACH,CACDpwB,IAAK,aACLowB,GAAI,OACH,CACDpwB,IAAK,aACLowB,GAAI,QACH,CACDpwB,IAAK,0BACLowB,GAAI,QACH,CACDpwB,IAAK,kBACLowB,GAAI,OACH,CACDpwB,IAAK,yFACLowB,GAAI,QACH,CACDpwB,IAAK,YACLowB,GAAI,OACH,CACDpwB,IAAK,YACLowB,GAAI,MACH,CACDpwB,IAAK,WACLowB,GAAI,OACH,CACDpwB,IAAK,WACLowB,GAAI,MACH,CACDpwB,IAAK,oBACLowB,GAAI,OACH,CACDpwB,IAAK,YACLowB,GAAI,OACH,CACDpwB,IAAK,WACLowB,GAAI,OACH,CACDpwB,IAAK,YACLowB,GAAI,MACH,CACDpwB,IAAK,mBACLowB,GAAI,MACH,CAEDpwB,IAAK,wBACLowB,GAAI,OACH,CACDpwB,IAAK,aACLowB,GAAI,QACH,CACDpwB,IAAK,YACLowB,GAAI,SAGJC,GAAaF,GAEbG,GAAY,CACdluB,OAAQ,CAAC,OACTG,MAAO,CAAC,QACRN,WAAY,CAAC,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,MAAO,MAAO,MAAO,MAC9SE,UAAW,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,MAC1CE,aAAc,CAAC,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,MAAO,KAAM,KAAM,OASjPkuB,GANJD,GAAYt7B,OAAOoG,KAAKk1B,IAAW/zB,OAAO,SAAUpC,EAAGG,GAI9CH,OAHPm2B,GAAUh2B,GAAGe,QAAQ,SAAUxB,GACtBM,OAAAA,EAAEN,GAAKS,IAETH,GACN,IAKCq2B,GAAa,SAAoBl3B,GAC/Bm3B,IAAAA,EAAQn3B,EAAIkM,OAAOlM,EAAI3E,OAAS,GAEhC47B,IAAiC,IAAjCA,GAAOjwB,eAAemwB,GACjBF,OAAAA,GAAOE,GAGZC,IAAAA,EAAMp3B,EAAIkM,OAAOlM,EAAI3E,OAAS,GAE9B47B,OAA+B,IAA/BA,GAAOjwB,eAAeowB,GACjBH,GAAOG,GAKJ,MAFFp3B,EAAIkM,OAAOlM,EAAI3E,OAAS,GAGzB,eAGF,MAGL6N,GAAe,SAAsBlJ,EAAKoI,EAAOQ,GAC/C,IAAC5I,EACI,MAAA,GAILoI,IAAoC,IAApCA,EAAMmO,MAAMvP,eAAehH,GAIxB,IAHDq3B,IAAAA,EAASjvB,EAAM0a,WAAWhG,MAC1Bhb,EAAOpG,OAAOoG,KAAKu1B,GAEdj8B,EAAI,EAAGA,EAAI0G,EAAKzG,OAAQD,IAG1B,IAFD6nB,IAAAA,EAAQvnB,OAAOoG,KAAKu1B,EAAOv1B,EAAK1G,KAE3BmB,EAAI,EAAGA,EAAI0mB,EAAM5nB,OAAQkB,IAC5ByD,GAAAA,IAAQq3B,EAAOv1B,EAAK1G,IAAI6nB,EAAM1mB,IACzBuF,OAAAA,EAAK1G,GAShBwN,IAFJA,EAAQA,GAASsuB,GAAWl3B,KAEf+2B,GAAWnuB,GACjB,IAAA,IAAI7J,EAAK,EAAGA,EAAKg4B,GAAWnuB,GAAOvN,OAAQ0D,IAAM,CAChDu4B,IAAAA,EAAOP,GAAWnuB,GAAO7J,GAEzBu4B,IAAuB,IAAvBA,EAAK5wB,IAAIhH,KAAKM,GAETA,OAAAA,EAAI8C,QAAQw0B,EAAK5wB,IAAK4wB,EAAKR,IAKjC92B,OAAAA,GAGLu3B,GAAiBruB,GAEjBsuB,GAAe,CACjBlc,MAAOoI,GACP5G,MAAOqW,IAGLsE,GAAe,CACjBtV,UAAWgS,GACX9R,WAAYA,GACZJ,SAAUA,GACVzZ,WAAYouB,GACZ1tB,aAAcquB,IAEZG,IAAa,EAGbC,GAAqB,WACdA,SAAAA,IACP98B,EAAgB,KAAM88B,GAGtBj8B,OAAOC,eAAe,KAAM,QAAS,CACnCJ,YAAY,EACZa,MAAO+mB,GACP1nB,UAAU,IAEZC,OAAOC,eAAe,KAAM,cAAe,CACzCJ,YAAY,EACZa,MAAO,GACPX,UAAU,IAEZC,OAAOC,eAAe,KAAM,aAAc,CACxCJ,YAAY,EACZa,MAAOo7B,GACP/7B,UAAU,IAEZC,OAAOC,eAAe,KAAM,OAAQ,CAClCJ,YAAY,EACZa,MAAOV,OAAO0P,OAAO,GAAIhE,IACzB3L,UAAU,IAEZC,OAAOC,eAAe,KAAM,aAAc,CACxCJ,YAAY,EACZa,MAAOq7B,GACPh8B,UAAU,IAEZC,OAAOC,eAAe,KAAM,UAAW,CACrCJ,YAAY,EACZa,MAAO,GACPX,UAAU,IAGPm8B,KAAAA,YAAYxc,IAEZyH,KAAAA,gBAELnnB,OAAOC,eAAe,KAAM,QAAS,CACnCJ,YAAY,EACZa,MAAO,CACL+N,cAAe,KAAK0tB,SAAS,mBAiH5BF,OA1GP97B,EAAa87B,EAAO,CAAC,CACnB/7B,IAAK,UACLQ,MAAO,SAAiB07B,GAEf,OADPJ,GAAaI,EACN,OAER,CACDl8B,IAAK,YACLQ,MAAO,WACEs7B,OAAAA,KAIR,CACD97B,IAAK,WACLQ,MAAO,SAAkB+K,GAKlB,IAJDya,IAAAA,EAAM,KAAKrL,MACXnE,EAAM,GACNmE,EAAQ7a,OAAOoG,KAAK8f,GAEfxmB,EAAI,EAAGA,EAAImb,EAAMlb,OAAQD,IACH,iBAAlBwmB,EAAIrL,EAAMnb,IACfwmB,EAAIrL,EAAMnb,MAAQ+L,IACpBiL,EAAImE,EAAMnb,KAAM,GAETwmB,EAAIrL,EAAMnb,IAAIuM,KAAK,SAAUrG,GAC/BA,OAAAA,IAAM6F,MAEbiL,EAAImE,EAAMnb,KAAM,GAIbgX,OAAAA,IAIR,CACDxW,IAAK,cACLQ,MAAO,SAAqBwlB,GAGrB,IAFDxa,IAAAA,EAAO1L,OAAOoG,KAAK8f,GAEdxmB,EAAI,EAAGA,EAAIgM,EAAK/L,OAAQD,IAG1B,IAFDmb,IAAAA,EAAQ7a,OAAOoG,KAAK4f,GAAeE,EAAIxa,EAAKhM,MAEvCqG,EAAI,EAAGA,EAAI8U,EAAMlb,OAAQoG,IAChCmhB,GAASjB,QAAQpL,EAAM9U,GAAI2F,EAAKhM,GAAI,KAAKmb,OAEzCqM,GAASf,QAAQtL,EAAM9U,GAAI2F,EAAKhM,GAAI,QAMzC,CACDQ,IAAK,WACLQ,MAAO,SAAoB5B,GAGpB,IAFDsH,IAAAA,EAAOpG,OAAOoG,KAAKtH,GAEdY,EAAI,EAAGA,EAAI0G,EAAKzG,OAAQD,IAAK,CAChC0I,IAAAA,EAAOhC,EAAK1G,GAAGwH,cACnBggB,GAASjB,QAAQ7d,EAAMtJ,EAAIsH,EAAK1G,IAAK,KAAKmb,OAE1CqM,GAASf,QAAQ/d,EAAMtJ,EAAIsH,EAAK1G,IAAK,SAGxC,CACDQ,IAAK,gBACLQ,MAAO,WAGE,OAFP8mB,GAAgB,MAET,OAIR,CACDtnB,IAAK,UACLQ,MAAO,SAAiBgL,GAKf,OAJPA,EAAO1L,OAAO0P,OAAO,GAAIhE,GACpBA,KAAAA,KAAO1L,OAAO0P,OAAO,KAAKhE,KAAMA,GAEhCA,KAAAA,KAAOiZ,GAAU,KAAKjZ,MACpB,OAIR,CACDxL,IAAK,cACLQ,MAAO,SAAqB8H,GAEnB,OADF6zB,KAAAA,QAAQ74B,KAAKgF,GACX,OAIR,CACDtI,IAAK,QACLQ,MAAO,WACE,MAAA,CACLma,MAAO7a,OAAOoG,KAAK,KAAKyU,OAAOlb,OAC/BqoB,QAAShoB,OAAOoG,KAAK,KAAKghB,WAAWxH,OAAOjgB,OAC5CstB,aAAcjtB,OAAOoG,KAAK,KAAKghB,WAAWhG,OAAOzhB,OACjD28B,UAAWt8B,OAAOoG,KAAK,KAAKigB,aAAa1mB,OACzC48B,eAAgB,KAAKF,QAAQ18B,YAK5Bs8B,EA5JgB,GAgKrBO,GAAU,SAAe19B,GACpB29B,OAAAA,KAAKn0B,MAAMm0B,KAAKC,UAAU59B,KAKnCm9B,GAAM/8B,UAAU8S,MAAQ,WAClB2qB,IAAAA,EAAK,IAAIV,GAUNU,OARPA,EAAG9hB,MAAQ7a,OAAO0P,OAAO,GAAI,KAAKmL,OAClC8hB,EAAGtW,YAAcrmB,OAAO0P,OAAO,GAAI,KAAK2W,aAExCsW,EAAGvV,WAAaoV,GAAQ,KAAKpV,YAC7BuV,EAAGjxB,KAAO8wB,GAAQ,KAAK9wB,MAEvBixB,EAAG/vB,WAAa,KAAKA,WACrB+vB,EAAGN,QAAU,KAAKA,QACXM,GAGT,IAAIC,GAAUX,GAEVY,GAAat0B,EAAqB,SAAUG,EAAQE,GAEtDA,EAAQkO,IAAM,WACL,OAAA,KAAKhC,UAAU,IAAM,MAK9BlM,EAAQmM,OAAS,WACX,OAAA,KAAKhR,KACA,KAAKA,KAGP,MAKT6E,EAAQkM,QAAU,SAAUlR,GACtBpB,IAAAA,EAAM,GAYN,OAVY,SAASs6B,EAAUnoB,GAC7BA,EAAI5Q,OACNvB,EAAIgB,KAAKmR,EAAI5Q,MACb+4B,EAAUnoB,EAAI5Q,OAIlB+4B,CAAU,MACVt6B,EAAMA,EAAIu6B,UAEO,iBAANn5B,EACFpB,EAAIoB,GAGNpB,GAKToG,EAAQoJ,MAAQ,SAAUgrB,GACpBxoB,IAAAA,EAAO,KAAKA,KAAK7B,IAAI,SAAUsqB,GAC1BA,OAAAA,EAAGjrB,MAAMgrB,KAGX3mB,OADG,KAAK5D,UAAU+B,IAM3B5L,EAAQsK,UAAY,WACX,OAAA,KAAKsB,KAAKjN,OAAO,SAAUkQ,EAAOxW,GAEhCwW,OADPA,GAASxW,EAAEiS,aAEV,IAGLtK,EAAQs0B,UAAYt0B,EAAQsK,YAU1BiqB,GAAe50B,EAAqB,SAAUG,EAAQE,GAExDA,EAAQw0B,MAAQ,SAAUx5B,GACpBA,YAAMT,IAANS,EACK,KAAKyO,IAAI,GAGX,KAAKxO,MAAM,EAAGD,IAKvBgF,EAAQ2F,KAAO,SAAU3K,GACnBA,QAAMT,IAANS,EACK,OAAA,KAAKyO,IAAI,KAAKmC,KAAK7U,OAAS,GAGjC0L,IAAAA,EAAM,KAAKmJ,KAAK7U,OACb,OAAA,KAAKkE,MAAMwH,EAAMzH,EAAGyH,IAK7BzC,EAAQ/E,MAAQ,SAAUuH,EAAOC,GAC3BmJ,IAAAA,EAAO,KAAKA,KAAK3Q,MAAMuH,EAAOC,GAC3B,OAAA,KAAKoH,UAAU+B,IAKxB5L,EAAQy0B,GAAK,SAAUz5B,GACjB3C,IAAAA,EAAI,KAAKuT,KAAK5Q,GAEd3C,YAAMkC,IAANlC,EACK,KAAKwR,UAAU,IAGjB,KAAKA,UAAU,CAACxR,KAGzB2H,EAAQyJ,IAAMzJ,EAAQy0B,GAGtBz0B,EAAQ00B,WAAa,WACZ,OAAA,KAAKxpB,MAAM,OAGpBlL,EAAQ20B,UAAY30B,EAAQ00B,WAG5B10B,EAAQ40B,UAAY,WACX,OAAA,KAAK1pB,MAAM,OAGpBlL,EAAQgK,SAAWhK,EAAQ40B,UAG3B50B,EAAQ60B,SAAW,SAAUC,GAGtB,IAFDl7B,IAAAA,EAAM,GAED9C,EAAI,EAAGA,EAAI,KAAK8U,KAAK7U,OAAQD,IAG/B,IAFDwS,IAAAA,EAAQ,KAAKsC,KAAK9U,GAAGwS,QAEhBrR,EAAI,EAAGA,EAAIqR,EAAMvS,OAAQkB,IAG5B68B,GAFJl7B,EAAIgB,KAAK0O,EAAMrR,SAEHsC,IAARu6B,QAAkCv6B,IAAbX,EAAIk7B,GACpBl7B,OAAAA,EAAIk7B,GAKVl7B,OAAAA,GAkEToG,EAAQ6S,OAAS,SAAUjc,GACrBA,YAAW2D,IAAX3D,EA9DU,SAAmBmV,GAwB5B,IAvBD+B,IAAAA,EAAM,GACNinB,EAAY,GAEZtW,EAAQ,SAAe3nB,GAMpB,IALDkW,IAAAA,EAASjB,EAAIH,KAAK9U,GAClB+b,EAASzb,OAAOoG,KAAKwP,EAAO6F,QAAQ9I,IAAI,SAAUrN,GAC7CsQ,OAAAA,EAAO6F,OAAOnW,KAGdD,EAAI,EAAGA,EAAIoW,EAAO9b,OAAQ0F,IAAK,CAClCu4B,IAAAA,EAAYniB,EAAOpW,GACnB6S,EAAQ0lB,EAAU1lB,MAClB9M,EAAQwyB,EAAUxyB,MAClBzL,EAASi+B,EAAUj+B,OAElBg+B,EAAUzlB,KACbylB,EAAUzlB,GAAS,IAGrBylB,EAAUzlB,GAAO1U,KAAKoS,EAAOnD,UAAUrH,EAAOzL,MAIzCD,EAAI,EAAGA,EAAIiV,EAAIH,KAAK7U,OAAQD,IACnC2nB,EAAM3nB,GAKH,IAFD0G,IAAAA,EAAOpG,OAAOoG,KAAKu3B,GAEdt6B,EAAK,EAAGA,EAAK+C,EAAKzG,OAAQ0D,IAAM,CACnCnD,IAAAA,EAAMkG,EAAK/C,GACfqT,EAAIxW,GAAOyU,EAAIlC,UAAUkrB,EAAUz9B,IAG9BwW,OAAAA,EA4BEmnB,CAAU,OAGG,iBAAXr+B,IACTA,EAASsS,OAAOtS,IA7BH,SAAoBmV,EAAK7Q,GAcnC,IAbDtB,IAAAA,EAAM,GAENs7B,EAAS,SAAgBp+B,GACvBkW,IAAAA,EAASjB,EAAIH,KAAK9U,GAClB0G,EAAOpG,OAAOoG,KAAKwP,EAAO6F,SAC9BrV,EAAOA,EAAK+M,OAAO,SAAUjI,GACpB0K,OAAAA,EAAO6F,OAAOvQ,GAAIgN,QAAUpU,KAEhCuC,QAAQ,SAAU6E,GACrB1I,EAAIgB,KAAKoS,EAAOnD,UAAUmD,EAAO6F,OAAOvQ,GAAIE,MAAOwK,EAAO6F,OAAOvQ,GAAIvL,YAIhED,EAAI,EAAGA,EAAIiV,EAAIH,KAAK7U,OAAQD,IACnCo+B,EAAOp+B,GAGFiV,OAAAA,EAAIlC,UAAUjQ,GAcdu7B,CAAW,KAAMv+B,IAAW,KAAKiT,UAAU,MAGpD7J,EAAQsP,MAAQtP,EAAQ6S,OAGxB7S,EAAQoV,UAAY,SAAUpa,GACxBpB,IAAAA,EAAM,GAKN,OAJCgS,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1BuB,EAAIgB,KAAKvC,EAAEmS,kBAGI,iBAANxP,EACF,KAAK6O,UAAU,CAACjQ,EAAIoB,KAGtB,KAAK6O,UAAUjQ,IAGxBoG,EAAQo1B,SAAWp1B,EAAQoV,YAIzBigB,GAAgB,SAAuBjzB,GACrCkzB,IAAAA,EAAW,GACXC,EAAY,GAcT,OAbPnzB,EAAI3E,QAAQ,SAAUvH,IACC,IAAjBA,EAAIuY,WAAsC,IAAjBvY,EAAIqN,gBAIjBhJ,IAAZrE,EAAI2M,KACNyyB,EAAS16B,KAAK1E,EAAI2M,UAGHtI,IAAbrE,EAAIsJ,MACN+1B,EAAU36B,KAAK1E,EAAIsJ,SAGhB,CACLsD,KAAMwyB,EACNrjB,MAAOsjB,IAIPC,GAAa,SAAkBzpB,EAAKkC,GAClClC,GAAAA,EAAI0pB,SAA6B,IAAnB1pB,EAAI0pB,OAAOtoB,IAAc,CAMpC,IALDuoB,IAAAA,EAAiBL,GAAcpnB,GAC/BgE,EAAQyjB,EAAezjB,MACvBnP,EAAO4yB,EAAe5yB,KAGjBhM,EAAI,EAAGA,EAAImb,EAAMlb,OAAQD,IAC5BiV,QAA+BxR,IAA/BwR,EAAI0pB,OAAOxjB,MAAMA,EAAMnb,IAClB,OAAA,EAKN,IAAA,IAAI2D,EAAK,EAAGA,EAAKqI,EAAK/L,OAAQ0D,IAC7BsR,QAA8BxR,IAA9BwR,EAAI0pB,OAAO3yB,KAAKA,EAAKrI,IAChB,OAAA,EAKN,OAAA,GAGLk7B,GAAaH,GAEbI,GAAWj2B,EAAqB,SAAUG,EAAQE,GAEpDA,EAAQkL,MAAQ,SAAU9I,EAAKlH,GAEzB+S,IAAAA,EAAOsE,GAASnQ,GAEhB6L,GAAgB,IAAhBA,EAAKlX,OACA,OAAA,KAAK8S,UAAU,IAIpB8rB,IAA2B,IAA3BA,GAAW,KAAM1nB,GACZ,OAAA,KAAKpE,UAAU,IAIpBsG,IAAAA,EAAU,KAAKvE,KAAKjN,OAAO,SAAU/E,EAAKvB,GACrCuB,OAAAA,EAAIyQ,OAAOhS,EAAE6S,MAAM+C,KACzB,IAEC/S,OAAAA,MAAAA,GAAgD,KAATA,EAClC,KAAK2O,UAAUsG,GAAS0C,OAAO3X,GAGjC,KAAK2O,UAAUsG,IAKxBnQ,EAAQoT,IAAM,SAAUhR,GAElB6L,IAAAA,EAAOsE,GAASnQ,GAEhB6L,GAAgB,IAAhBA,EAAKlX,SAA2C,IAA3B4+B,GAAW,KAAM1nB,GACjC,OAAA,KAILkC,IAAAA,EAAU,KAAKvE,KAAKjN,OAAO,SAAU/E,EAAKvB,GACrCuB,OAAAA,EAAIyQ,OAAOhS,EAAE+a,IAAInF,KACvB,IACI,OAAA,KAAKpE,UAAUsG,IAKxBnQ,EAAQyS,SAAW,SAAUrQ,GACvB6L,IAAAA,EAAOsE,GAASnQ,GAEhBuzB,IAA2B,IAA3BA,GAAW,KAAM1nB,GACZ,OAAA,KAAKpE,UAAU,IAGnB,IAAA,IAAI/S,EAAI,EAAGA,EAAI,KAAK8U,KAAK7U,OAAQD,IAAK,CACrCoU,IAAAA,EAAQ,KAAKU,KAAK9U,GAAGoU,MAAM+C,GAAM,GAC9B,OAAA,KAAKpE,UAAUqB,GAGjB,OAAA,KAAKrB,UAAU,KAKxB7J,EAAO,GAAS,SAAUoC,GACpB6L,IAAAA,EAAOsE,GAASnQ,GAEhBuzB,IAA2B,IAA3BA,GAAW,KAAM1nB,GACZ,OAAA,KAAKpE,UAAU,IAGpBxK,IAAAA,EAAQ,KAAKuM,KAAKrB,OAAO,SAAUlS,GAC9BA,OAAgB,IAAhBA,EAAEkb,IAAItF,KAER,OAAA,KAAKpE,UAAUxK,IAKxBW,EAAQ61B,KAAO,SAAUzzB,GACnB6L,IAAAA,EAAOsE,GAASnQ,GAChB/C,EAAQ,KAAKuM,KAAKrB,OAAO,SAAUlS,GAC9BA,OAAgB,IAAhBA,EAAEkb,IAAItF,KAER,OAAA,KAAKpE,UAAUxK,IAKxBW,EAAQuT,IAAM,SAAUnR,GAClB6L,IAAAA,EAAOsE,GAASnQ,GAEhBuzB,OAA2B,IAA3BA,GAAW,KAAM1nB,IAId,KAAKrC,KAAKvI,KAAK,SAAUhL,GACvBA,OAAgB,IAAhBA,EAAEkb,IAAItF,MAMjBjO,EAAQgO,UAAY,SAAU5L,GAEvBA,IACHA,EAAM,MAGJ6L,IAAAA,EAAOsE,GAASnQ,GAChB+N,EAAU,GAOP,OANFvE,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1B8X,EAAUA,EAAQ9F,OAAOhS,EAAE2V,UAAUC,MAEvCkC,EAAUA,EAAQ5F,OAAO,SAAUlS,GAC1BA,OAAAA,IAEF,KAAKwR,UAAUsG,IAGxBnQ,EAAQ81B,UAAY91B,EAAQgO,UAG5BhO,EAAQoO,WAAa,SAAUhM,GAExBA,IACHA,EAAM,MAGJ6L,IAAAA,EAAOsE,GAASnQ,GAChB+N,EAAU,GAOP,OANFvE,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1B8X,EAAUA,EAAQ9F,OAAOhS,EAAE+V,WAAWH,MAExCkC,EAAUA,EAAQ5F,OAAO,SAAUlS,GAC1BA,OAAAA,IAEF,KAAKwR,UAAUsG,IAGxBnQ,EAAQ+1B,WAAa/1B,EAAQoO,WAG7BpO,EAAQmF,OAAS,SAAU/C,GACrB6L,IAAAA,EAAOsE,GAASnQ,GAGhB4zB,EADU,KAAA,GAAW/nB,GAAMrC,KACT7B,IAAI,SAAU1R,GAC9B+Z,IAAAA,EAAM/Z,EAAEiR,QAAQS,IAAI,SAAU/M,GACzBA,OAAAA,EAAEsF,KAGP1F,EAAIvE,EAAE6S,MAAM+C,GAAM,GAClB5L,EAAQ+P,EAAInR,QAAQrE,EAAE4F,OAEtBH,OAAU,IAAVA,IAA0B,IAAXA,EACV,KAGFhK,EAAEwR,UAAUxR,EAAEmK,MAAOH,KAKvB,OAHP2zB,EAAUA,EAAQzrB,OAAO,SAAUlS,GAC1BA,OAAM,OAANA,IAEF,KAAKwR,UAAUmsB,IAKxBh2B,EAAQV,MAAQ,SAAU8C,GACpB6L,IAAAA,EAAOsE,GAASnQ,GAGhB4zB,EADU,KAAA,GAAW/nB,GAAMrC,KACT7B,IAAI,SAAU1R,GAC9BiR,IAAAA,EAAQjR,EAAEiR,QACV8I,EAAM9I,EAAMS,IAAI,SAAU/M,GACrBA,OAAAA,EAAEsF,KAGP1F,EAAIvE,EAAE6S,MAAM+C,GAAM,GAClB5L,EAAQ+P,EAAInR,QAAQrE,EAAE4F,OAEtBH,IAAW,IAAXA,IAAiBiH,EAAMjH,EAAQzF,EAAE7F,QAC5B,OAAA,KAILuL,IAAAA,EAAKgH,EAAMjH,EAAQzF,EAAE7F,QAAQuL,GAC7BjH,EAAMhD,EAAEtB,OAASsL,EAAQzF,EAAE7F,OACxBsB,OAAAA,EAAEwR,UAAUvH,EAAIjH,KAKlB,OAHP26B,EAAUA,EAAQzrB,OAAO,SAAUlS,GAC1BA,OAAM,OAANA,IAEF,KAAKwR,UAAUmsB,IAKxBh2B,EAAQi2B,SAAW,SAAU7zB,GACpB,OAAA,KAAKmI,OAAO,SAAUwB,GACpBA,OAAAA,EAAI+pB,UAAU1zB,GAAK/C,SAM9BW,EAAQk2B,UAAY,SAAU9zB,GACrB,OAAA,KAAKmI,OAAO,SAAUwB,GACpBA,OAAAA,EAAIgqB,WAAW3zB,GAAK/C,WAM7B82B,GAAW,SAAkBtzB,EAAKkJ,EAAKqqB,EAAM7uB,GAC3C8uB,IAAAA,EAAU,GAEK,iBAARxzB,IACTwzB,EAAUxzB,EAAIrH,MAAM,MAItBuQ,EAAIH,KAAKnO,QAAQ,SAAUpF,GACrBiR,IAAAA,EAAQjR,EAAEiR,SAED,IAAT8sB,IACF9sB,EAAQA,EAAMiB,OAAO,SAAUvN,GACtBA,OAAAA,EAAE0L,MAAM7F,EAAKkJ,EAAIjI,UAI5BwF,EAAM7L,QAAQ,SAAUT,EAAGlG,GAErBu/B,EAAQt/B,OAAS,EACfs/B,EAAQv/B,IAAqB,MAAfu/B,EAAQv/B,IACxBkG,EAAE6F,IAAIwzB,EAAQv/B,GAAIyQ,EAAQwE,EAAIjI,OAIhC9G,EAAE6F,IAAIA,EAAK0E,EAAQwE,EAAIjI,YAO3BwyB,GAAUH,GAIVI,GAAQ,SAAazzB,EAAM0zB,GACzB,OAAC1zB,GAILwzB,GAAQxzB,EAAM,MAAM,EAAO0zB,GACpB,MAJE,MASPC,GAAY,SAAiB3zB,EAAM0zB,GACjC,OAAC1zB,GAILwzB,GAAQxzB,EAAM,MAAM,EAAM0zB,GACnB,MAJE,MASPE,GAAU,SAAe5zB,EAAM0zB,GAC7B5sB,IAAAA,EAAQ,KAOL,OALFgC,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1BA,EAAEiR,QAAQ7L,QAAQ,SAAUT,GACnBA,OAAAA,EAAEkL,MAAMpF,EAAM0zB,EAAK5sB,EAAM9F,WAG7B,MAKL6yB,GAAU,SAAe9zB,GACvB,IAACA,EACI,OAAA,KAGLiB,IAAAA,EAAQ,KAAKA,MACbqM,EAAU,KAAKvE,KAAKjN,OAAO,SAAU/E,EAAKvB,GACrCuB,OAAAA,EAAIyQ,OAAOhS,EAAEqQ,MAAM7F,EAAKiB,KAC9B,IACI,OAAA,KAAK+F,UAAUsG,IAGpBymB,GAAS,CACX/zB,IAAK0zB,GACLztB,QAAS2tB,GACTvuB,MAAOwuB,GACPhuB,MAAOiuB,IAIL5sB,GAAM,SAAanK,GACjBgK,IAAAA,EAAQ,KAER,IAAChK,EACI,OAAA,KAGLgM,IAAAA,EAAO,KAAKA,KAAK7B,IAAI,SAAU1R,EAAGvB,GAChCiV,IAAAA,EAAMnC,EAAMC,UAAU,CAACxR,IAE3B0T,EAAI5Q,KAAO,KAEP2S,IAAAA,EAAMlO,EAAGmM,EAAKjV,GAEdgX,OAAAA,GAAOA,EAAIlC,MAAQkC,EAAIlC,KAAK,GACvBkC,EAAIlC,KAAK,GAGXkC,IAOLlC,OAAgB,KAJpBA,EAAOA,EAAKrB,OAAO,SAAUnN,GACpBA,OAAAA,KAGArG,OACA,KAAK8S,UAAU+B,GAIC,WAArB3V,EAAQ2V,EAAK,KAAoC,WAAhBA,EAAK,GAAGpF,IACpCoF,EAGF,KAAK/B,UAAU+B,IAKpBnO,GAAU,SAAiBmC,EAAIi3B,GAC7BpjB,IAAAA,EAAS,KAET,OAAC7T,GAIAgM,KAAAA,KAAKnO,QAAQ,SAAUpF,EAAGvB,GACzBggC,IAAAA,EAAMrjB,EAAO5J,UAAU,CAACxR,KAGP,IAAjBw+B,IACFC,EAAI37B,KAAO,MAGbyE,EAAGk3B,EAAKhgC,KAEH,MAbE,MAkBPyT,GAAS,SAAgB3K,GACvB+T,IAAAA,EAAS,KAET,IAAC/T,EACI,OAAA,KAGLgM,IAAAA,EAAO,KAAKA,KAAKrB,OAAO,SAAUlS,EAAGvB,GACnCiV,IAAAA,EAAM4H,EAAO9J,UAAU,CAACxR,IAIrBuH,OAFPmM,EAAI5Q,KAAO,KAEJyE,EAAGmM,EAAKjV,KAEV,OAAA,KAAK+S,UAAU+B,IAKpBqB,GAAO,SAAcrN,GACnBm3B,IAAAA,EAAS,KAET,IAACn3B,EACI,OAAA,KAGLoN,IAAAA,EAAS,KAAKpB,KAAKqB,KAAK,SAAU5U,EAAGvB,GACnCiV,IAAAA,EAAMgrB,EAAOltB,UAAU,CAACxR,IAIrBuH,OAFPmM,EAAI5Q,KAAO,KAEJyE,EAAGmM,EAAKjV,KAGbkW,OAAAA,EACK,KAAKnD,UAAU,CAACmD,SADrBA,GASF3J,GAAO,SAAczD,GACnBo3B,IAAAA,EAAS,KAET,OAACp3B,EAIE,KAAKgM,KAAKvI,KAAK,SAAUhL,EAAGvB,GAC7BiV,IAAAA,EAAMirB,EAAOntB,UAAU,CAACxR,IAIrBuH,OAFPmM,EAAI5Q,KAAO,KAEJyE,EAAGmM,EAAKjV,KARR,MAcPgF,GAAS,SAAgBd,GACvB,IAAC,KAAKqE,MACD,OAAA,KAGLvC,IAAAA,EAAIlB,KAAKC,MAAMD,KAAKE,SAAW,KAAK8P,KAAK7U,QAEzCiE,QAAMT,IAANS,EAAiB,CACf4Q,IAAAA,EAAO,CAAC,KAAKA,KAAK9O,IACf,OAAA,KAAK+M,UAAU+B,GASjB,OALH9O,EAAI9B,EAAI,KAAKjE,SAEf+F,GADAA,EAAI,KAAK/F,OAASiE,GACV,EAAI,EAAI8B,GAGX,KAAK7B,MAAM6B,EAAGA,EAAI9B,IAavBi8B,GAAW,CACbltB,IAAKA,GACLtM,QAASA,GACT8M,OAAQA,GACR0C,KAAMA,GACN5J,KAAMA,GACNvH,OAAQA,IAINo7B,GAAW,SAAkBx7B,GACxBA,OAAAA,EAAIF,MAAM,UAKf27B,GAAY,SAAmBtC,GAC7B7b,IAAAA,EAASvf,UAAU1C,OAAS,QAAsBwD,IAAjBd,UAAU,GAAmBA,UAAU,GAAK,GAC7EmJ,EAAO,GA6BJA,OA3BPiyB,EAASp3B,QAAQ,SAAU/B,EAAK5E,GAC1BsgC,IAAAA,GAAM,OAEQ78B,IAAdye,EAAOliB,KACTsgC,EAAMpe,EAAOliB,IAKf4E,GADAA,GAAOA,GAAO,IAAI4C,eACRE,QAAQ,YAAa,IAC3B5E,IAAAA,EAAMs9B,GAASx7B,GAAKqO,IAAI,SAAUhN,GAC7BA,OAAAA,EAAEwB,SAEXqE,EAAKhJ,EAAI,IAAMgJ,EAAKhJ,EAAI,KAAO,GAEZ,IAAfA,EAAI7C,OACN6L,EAAKhJ,EAAI,IAAI9B,MAAQs/B,GAErBx0B,EAAKhJ,EAAI,IAAIy9B,KAAOz0B,EAAKhJ,EAAI,IAAIy9B,MAAQ,GACzCz0B,EAAKhJ,EAAI,IAAIy9B,KAAKz8B,KAAK,CACrB08B,KAAM19B,EAAIqB,MAAM,GAChBnD,MAAOs/B,OAMNx0B,GAGL20B,GAAa,SAAoB1C,EAAU7b,EAAQjN,GAoDhD,IAnDDnJ,IAAAA,EAAOu0B,GAAUtC,EAAU7b,GAC3B3Z,EAAQ,GAERof,EAAQ,SAAe3nB,GA2CpB,IA1CDuB,IAAAA,EAAI0T,EAAIH,KAAK9U,GAEbmb,EADQ5Z,EAAEiR,QACIS,IAAI,SAAU/M,GACvBA,OAAAA,EAAE0B,UAGPw2B,EAAS,SAAgB/3B,QACJ5C,IAAnBqI,EAAKqP,EAAM9U,WAEe5C,IAAxBqI,EAAKqP,EAAM9U,IAAIk6B,MACjBz0B,EAAKqP,EAAM9U,IAAIk6B,KAAK55B,QAAQ,SAAU45B,QAEA98B,IAAhC0X,EAAM9U,EAAIk6B,EAAKC,KAAKvgC,WASN,IAJFsgC,EAAKC,KAAKl0B,MAAM,SAAU5D,EAAM1C,GACvC0C,OAAAA,IAASyS,EAAM9U,EAAIL,EAAI,MAI9BuC,EAAMzE,KAAK,CACT0H,GAAIjK,EAAEiR,QAAQnM,GAAGmF,GACjBxK,MAAOu/B,EAAKv/B,MACZf,OAAQsgC,EAAKC,KAAKvgC,OAAS,YAONwD,IAAzBqI,EAAKqP,EAAM9U,IAAIrF,OACjBuH,EAAMzE,KAAK,CACT0H,GAAIjK,EAAEiR,QAAQnM,GAAGmF,GACjBxK,MAAO8K,EAAKqP,EAAM9U,IAAIrF,MACtBf,OAAQ,MAMPoG,EAAI,EAAGA,EAAI8U,EAAMlb,OAAQoG,IAChC+3B,EAAO/3B,IAIFrG,EAAI,EAAGA,EAAIiV,EAAIH,KAAK7U,OAAQD,IACnC2nB,EAAM3nB,GAGDuI,OAAAA,GAGLm4B,GAAUD,GAEVE,GAAY93B,EAAqB,SAAUG,EAAQE,GAcrDA,EAAQ03B,OAAS,SAAU99B,GACrBgQ,IAP2B1T,EAO3B0T,EAAQ,KAERoP,EAAS,GAET2e,GAX2BzhC,EAWV0D,IAViC,oBAAxCxC,OAAOd,UAAUsC,SAASC,KAAK3C,IAY/B,IAAVyhC,IACF/9B,EAAMxC,OAAOoG,KAAK5D,GAAKmQ,IAAI,SAAUrN,GAE5BA,OADPsc,EAAOpe,KAAKhB,EAAI8C,IACTA,KAKQ,iBAAR9C,IACTA,EAAM,CAACA,KAIe,IAApB,KAAK67B,OAAOtoB,KACT5D,KAAAA,QAGHlK,IAAAA,EAAQm4B,GAAQ59B,EAAKof,EAAQ,MAC7B3gB,EAAI,KAAKuT,KAAK,GAEd+rB,IAAU,IAAVA,EAAgB,CACdC,IAAAA,EAAQ,GAQLA,OAPPv4B,EAAM5B,QAAQ,SAAUxF,GACtB2/B,EAAM3/B,EAAEH,OAAS8/B,EAAM3/B,EAAEH,QAAU,GACnC8/B,EAAM3/B,EAAEH,OAAO8C,KAAKvC,EAAEwR,UAAU5R,EAAEqK,GAAIrK,EAAElB,WAE1CK,OAAOoG,KAAKo6B,GAAOn6B,QAAQ,SAAUf,GACnCk7B,EAAMl7B,GAAKkN,EAAMC,UAAU+tB,EAAMl7B,MAE5Bk7B,EAOF,OAHPv4B,EAAQA,EAAM0K,IAAI,SAAU9R,GACnBI,OAAAA,EAAEwR,UAAU5R,EAAEqK,GAAIrK,EAAElB,UAEtB,KAAK8S,UAAUxK,IAGxBW,EAAQ63B,OAAS73B,EAAQ03B,SAIvBI,GAAU,SAAe9yB,GACvB4E,IAAAA,EAAQ,KAEZ5E,EAAUA,GAAW,GACjBiN,IAAAA,EAAQ,GACRnP,EAAO,GA2BJ,OA1BF2yB,KAAAA,OAAOxjB,MAAQA,EACfwjB,KAAAA,OAAO3yB,KAAOA,EACd2yB,KAAAA,OAAOtoB,KAAM,EACbvB,KAAAA,KAAKnO,QAAQ,SAAUpF,EAAGvB,GAC7BuB,EAAEkR,MAAQlR,EAAEkR,OAAS,GAETlR,EAAEiR,QAER7L,QAAQ,SAAUT,GAClBiV,EAAMjV,EAAE0B,WAAauT,EAAMvP,eAAe1F,EAAE0B,WAIhDuT,EAAMjV,EAAE0B,SAAWuT,EAAMjV,EAAE0B,UAAY,GACvCuT,EAAMjV,EAAE0B,SAAS9D,KAAK9D,GACtBM,OAAOoG,KAAKR,EAAE8F,MAAMrF,QAAQ,SAAUoF,GACpCC,EAAKD,GAAOC,EAAKD,IAAQ,GACzBC,EAAKD,GAAKjI,KAAK9D,KAGbkO,EAAQpC,OACV5F,EAAE6G,QAAQ+F,EAAM9F,OAChBmO,EAAMjV,EAAE4F,OAAQ,QAIf,MAKLm1B,GAAU,WAYL,OAXFtC,KAAAA,OAAS,GACT7pB,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1BA,EAAEkR,MAAQ,KAGP2C,KAAAA,UAAUzO,QAAQ,SAAUsO,GAC/BA,EAAI0pB,OAAS,GACb1pB,EAAIH,KAAKnO,QAAQ,SAAUpF,GACzBA,EAAEkR,MAAQ,OAGP,MAGLyuB,GAAW,CACbzuB,MAAOuuB,GACPC,QAASA,IAGPE,GAAc,SAAmBv8B,GAC5BA,OAAAA,EAAIiM,OAAO,GAAGnH,cAAgB9E,EAAIkM,OAAO,IAK9CswB,GAAc,SAAqB15B,GACjCoL,IAAAA,EAAQ,KAER5E,EAAUvL,UAAU1C,OAAS,QAAsBwD,IAAjBd,UAAU,GAAmBA,UAAU,GAAK,GAE9E,OAAC+E,IAKW,IAAZwG,IACFA,EAAU,CACRmzB,UAAU,KAIE,IAAZnzB,IACFA,EAAU,CACRmzB,UAAU,IAIdnzB,EAAUA,GAAW,GAEhB+yB,KAAAA,UAEAnsB,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBia,IAMA8lB,EANA9lB,EAAQ9T,EAQR8T,GANmB,mBAAZ9T,IACT8T,EAAQ9T,EAAQnG,IAKdia,GAA4B,WAAnBrc,EAAQqc,IAAqC,QAAdA,EAAM9L,IAChD4xB,EAAa9lB,EAAM1G,KAEnBhC,EAAMJ,OAAO6uB,MAAM/lB,EAAM9I,YACpB,CAAA,GAAqB,iBAAV8I,EAYX,QAVoB,IAArBtN,EAAQszB,UAAsBjgC,EAAEiR,MAAM,GAAG3I,gBAC3C2R,EAAQ2lB,GAAY3lB,IAGtB8lB,EAAa1hB,GAAapE,EAAO1I,EAAM9F,MAAO8F,EAAMJ,QAEhD+uB,IAAAA,EAAS3uB,EAAMC,UAAUuuB,GAE7BG,EAAOC,SACPJ,EAAaG,EAAO3sB,KAMlB5G,IAAqB,IAArBA,EAAQmzB,SAAmB,CACzBM,IAAAA,EAAUpgC,EAAEwO,KAAK,CACnByC,MAAO,CACLxG,MAAM,KAEPwG,MACH8uB,EAAW,GAAG9uB,QAAQ7L,QAAQ,SAAUT,EAAGlG,GACrC2hC,EAAQ3hC,IACVkG,EAAE8L,QAAQ2vB,EAAQ3hC,GAAGgM,KAAM,UAAW8G,EAAM9F,SAKlDzL,EAAEmG,QAAQ45B,EAAW,GAAIxuB,KAEpB,MAjEE,KAAA,UAsEP8uB,GAAY,SAAiBxtB,EAAOytB,EAAU3zB,GAE5C2zB,YAAap+B,IAAbo+B,EACK,KAAKT,YAAYhtB,EAAOlG,IAG5BkG,KAAAA,MAAMA,GAAOgtB,YAAYS,EAAU3zB,GACjC,OAGL4zB,GAAa,CACfV,YAAaA,GACb15B,QAASk6B,IAGPG,GAAYl5B,EAAqB,SAAUG,EAAQE,GAErDA,EAAQqM,OAAS,SAAU3Q,GACrBkO,IAAAA,EAAQ,KAER,OAAClO,GAKAq8B,KAAAA,UAEAnsB,KAAAA,KAAKnO,QAAQ,SAAUpF,GAEtB2U,IAAAA,EAAS0J,GAAahb,EAAKkO,EAAM9F,MAAO8F,EAAMJ,QAAQ,GAG7CI,EAAMC,UAAU,CAACmD,IAEvBwrB,SAEPngC,EAAEgU,OAAOW,EAAQpD,KAEZ,MAjBE,MAoBX5J,EAAQ84B,YAAc94B,EAAQqM,OAC9BrM,EAAQ+4B,SAAW/4B,EAAQqM,OAG3BrM,EAAQ6M,QAAU,SAAUnR,GACtB+X,IAAAA,EAAS,KAET,OAAC/X,GAKAq8B,KAAAA,UAEAnsB,KAAAA,KAAKnO,QAAQ,SAAUpF,GAEtB2U,IAAAA,EAAS0J,GAAahb,EAAK+X,EAAO3P,MAAO2P,EAAOjK,QAAQ,GAG/CiK,EAAO5J,UAAU,CAACmD,IAExBwrB,SAEPngC,EAAEwU,QAAQG,EAAQyG,KAEb,MAjBE,MAoBXzT,EAAQg5B,aAAeh5B,EAAQ6M,QAG/B7M,EAAQqK,OAAS,WAEV0tB,KAAAA,UAGA,IAFDnsB,IAAAA,EAAO,KAAKA,KAAK3Q,MAAM,GAElBnE,EAAI,EAAGA,EAAI2C,UAAU1C,OAAQD,IAAK,CACrCmiC,IAAAA,EAAMx/B,UAAU3C,GAEhB,GAAe,iBAARmiC,EAAkB,CACvBr/B,IAAAA,EAAM8c,GAAauiB,EAAK,KAAKn1B,OAEjC8H,EAAOA,EAAKvB,OAAOzQ,OACE,QAAZq/B,EAAIzyB,IACboF,EAAOA,EAAKvB,OAAO4uB,EAAIrtB,MACF,WAAZqtB,EAAIzyB,KACboF,EAAKhR,KAAKq+B,GAIP,OAAA,KAAKpvB,UAAU+B,IAKxB5L,EAAO,OAAa,SAAUkL,GACxByI,IAAAA,EAAS,KAGRokB,KAAAA,UACDmB,IAAAA,EAAW,KASR,OAPHhuB,IACFguB,EAAW,KAAKhuB,MAAMA,IAGxBguB,EAASttB,KAAKnO,QAAQ,SAAUuP,GACvBA,OAAAA,EAAM,OAAW2G,KAEnB,MAIT3T,EAAQm5B,OAASn5B,EAAO,SAGtBo5B,GAAa,CACfh7B,OAAO,EACPM,SAAS,EACTkE,MAAM,GAIJy2B,GAAS,SAAcr0B,GACrB4E,IAAAA,EAAQ,KAEZ5E,EAAUA,GAAW,GAEjBs0B,IAAAA,GAAW,EAEe,IAA1B,KAAKptB,UAAUnV,SACjBuiC,GAAW,IAIG,SAAZt0B,GAA2C,WAArB/O,EAAQ+O,IAAyBA,EAAQpC,OAC5DgJ,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1BA,EAAEiR,QAAQ7L,QAAQ,SAAUT,GACX,OAAXA,EAAE4F,MACJ5F,EAAE6G,QAAQ+F,EAAM9F,WAMpBmR,IAAAA,EAAM,KAAKrJ,KAAKjN,OAAO,SAAUjD,EAAKrD,EAAGvB,GACvCyiC,IAAAA,GAAWD,GAAkB,IAANxiC,EACvB0iC,GAAYF,GAAYxiC,IAAM8S,EAAMgC,KAAK7U,OAAS,EAC/C2E,OAAAA,EAAMrD,EAAEsD,KAAKqJ,EAASu0B,EAASC,IACrC,IAMIvkB,OAJqB,IAAxBmkB,GAAWp0B,KAAyC,IAApBA,EAAQtG,UAAsC,IAAlBsG,EAAQ5G,QAAmC,IAAjB4G,EAAQpC,OAChGqS,EAAMA,EAAI1W,QAGL0W,GAGLwkB,GAAU,CACZ99B,KAAM09B,IAIJK,GAAc,SAAqB3tB,GACjC4tB,IAAAA,EAAU,EACVt3B,EAAQ,EACRu3B,EAAU,GAUPA,OATP7tB,EAAI8oB,WAAWp3B,QAAQ,SAAU2I,GAC/BwzB,EAAQxzB,EAAK9D,IAAM,CACjBD,MAAOA,EACPG,MAAOm3B,EAAUvzB,EAAKjH,IAAIpI,OAC1BA,OAAQqP,EAAKzK,KAAK5E,QAEpB4iC,GAAWvzB,EAAKjH,IAAIpI,OAASqP,EAAKzK,KAAK5E,OAASqP,EAAKhH,KAAKrI,OAC1DsL,GAAS,IAEJu3B,GAGLC,GAAa,SAAoB9tB,EAAKxS,EAAQyL,GAE5C40B,IAAAA,EAAUF,GAAY3tB,EAAImC,QAE1BlJ,EAAQsE,MAAMjH,OAAS2C,EAAQ3C,QACjC9I,EAAOkE,QAAQ,SAAUxF,GACvBA,EAAEqR,MAAM7L,QAAQ,SAAUT,GACxBA,EAAEqF,MAAQu3B,EAAQ58B,EAAEsF,IAAID,QAE1BpK,EAAEoK,MAAQpK,EAAEqR,MAAM,GAAGjH,SAKrB2C,EAAQsE,MAAM3C,QAAU3B,EAAQ2B,SAClCpN,EAAOkE,QAAQ,SAAUxF,GACvBA,EAAEqR,MAAM7L,QAAQ,SAAUT,GACxBA,EAAE2J,OAASizB,EAAQ58B,EAAEsF,KAAO,KAQ9BrK,EAAE0O,OAAS1O,EAAEqR,MAAM,GAAG3C,OACtB1O,EAAE0O,OAAO5P,OAASkB,EAAE0D,KAAK5E,UAK3B+iC,GAAUD,GAEVE,GAAUp6B,EAAqB,SAAUG,EAAQE,GAC/Cg6B,IAAAA,EAAe,CACjBr+B,MAAM,EACN2N,OAAO,EACP/K,MAAM,GA+BRyB,EAAQ6G,KAAO,WACT+C,IAAAA,EAAQ,KAER5E,EAAUvL,UAAU1C,OAAS,QAAsBwD,IAAjBd,UAAU,GAAmBA,UAAU,GAAK,GAG9E,GAAmB,iBAAZuL,GAAwB,KAAK4G,KAAK5G,GACpC,OAAA,KAAK4G,KAAK5G,GAAS6B,KAAKmzB,IAKZ,KAFrBh1B,EAtCe,SAAoBA,GAuB5BA,OAtBPA,EAAU5N,OAAO0P,OAAO,GAAIkzB,EAAch1B,IAE9B2G,SACV3G,EAAQtG,SAAU,GAIhBsG,EAAQ2B,SACV3B,EAAQrJ,MAAO,EAEVqJ,EAAQsE,QAA2B,IAAlBtE,EAAQsE,QAC5BtE,EAAQsE,MAAQ,IAGlBtE,EAAQsE,MAAM3C,QAAS,IAGrB3B,EAAQ3C,OAAS2C,EAAQsE,MAAMjH,SACjC2C,EAAQsE,OAA0B,IAAlBtE,EAAQsE,MAAiB,GAAKtE,EAAQsE,MACtDtE,EAAQsE,MAAMhH,IAAK,GAGd0C,EAeGi1B,CAAWj1B,IAETpC,MACLgJ,KAAAA,KAAKnO,QAAQ,SAAUpF,GAC1BA,EAAEiR,QAAQ7L,QAAQ,SAAUT,GACX,OAAXA,EAAE4F,MACJ5F,EAAE6G,QAAQ+F,EAAM9F,WAMpBvK,IAAAA,EAAS,KAAKqS,KAAK7B,IAAI,SAAU1R,GAC5BA,OAAAA,EAAEwO,KAAK7B,EAAS4E,EAAM9F,SAQ3BkB,IALAA,EAAQsE,MAAM3C,QAAU3B,EAAQ2B,QAAU3B,EAAQsE,MAAMjH,OAAS2C,EAAQ3C,QAC3Ey3B,GAAQ,KAAMvgC,EAAQyL,GAIpBA,EAAQk1B,WAAal1B,EAAQm1B,MAAQn1B,EAAQ6J,MAAO,CAClD3Y,IAAAA,EAAM,GACL0V,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBqD,IAAAA,EAAMrD,EAAEsD,KAAK,WACjBzF,EAAIwF,GAAOxF,EAAIwF,IAAQ,EACvBxF,EAAIwF,IAAQ,IAETkQ,KAAAA,KAAKnO,QAAQ,SAAUpF,EAAGvB,GAC7ByC,EAAOzC,GAAG+X,MAAQ3Y,EAAImC,EAAEsD,KAAK,cAK7BqJ,GAAAA,EAAQ2G,OAAQ,CACdyuB,IAAAA,EAAU,GACd7gC,EAASA,EAAOgR,OAAO,SAAUtS,GAC3BmiC,OAAuB,IAAvBA,EAAQniC,EAAEyG,WAId07B,EAAQniC,EAAEyG,UAAW,GACd,KAIJnF,OAAAA,GAITyG,EAAQq6B,KAAOr6B,EAAQ6G,OAGrByzB,GAAS36B,EAAqB,SAAUG,GAEtCy6B,IAEAnzB,EAAS,SAAgB1L,EAAK2L,GAGzB3L,IAFPA,EAAMA,EAAI9C,WAEH8C,EAAI3E,OAASsQ,GAClB3L,GAAO,IAGFA,OAAAA,GAQL8+B,IAAAA,EAAM,CACRtJ,MAAO,UACPE,IAAK,UACLqJ,KAAM,UACNC,QAAS,UACTC,KAAM,UACNxJ,OAAQ,UACRyJ,MAAO,WAkCLC,EAAM,CACR3J,MAAO,SAAex1B,GACb,MAAA,QAAaA,EA5DZ,QA8DV01B,IAAK,SAAa11B,GACT,MAAA,QAAaA,EA/DZ,QAiEV++B,KAAM,SAAc/+B,GACX,MAAA,QAAaA,EAlEZ,QAoEVg/B,QAAS,SAAiBh/B,GACjB,MAAA,QAAaA,EArEZ,QAuEVi/B,KAAM,SAAcj/B,GACX,MAAA,QAAaA,EAxEZ,QA0EVy1B,OAAQ,SAAgBz1B,GACf,MAAA,QAAaA,EA3EZ,QA6EVk/B,MAAO,SAAel/B,GACb,MAAA,QAAaA,EA9EZ,SA+HZoE,EAAOE,QAhCK,SAAe+L,GACrB9E,MAnFqB,oBAAXC,QAA0BA,OAAOC,UAc7B,SAAuB4E,GACrChE,IAAAA,EAASgE,EAAIjI,MAAMhB,KACvBiJ,EAAIH,KAAKnO,QAAQ,SAAUpF,GACzBmP,QAAQC,IAAI,QAAUpP,EAAEsD,OAAS,IAAK,mBAC1BtD,EAAEiR,QACR7L,QAAQ,SAAUT,GAClB8F,IAAAA,EAAO1L,OAAOoG,KAAKR,EAAE8F,MACrBnH,EAAOqB,EAAErB,MAAQ,IAEjBqB,EAAEgF,WACJrG,EAAO,IAAMqB,EAAEgF,SAAW,KAGxBxC,IAAAA,EAAO,IAAM7D,EAAO,IACxB6D,EAAO4H,EAAO5H,EAAM,GAChBH,IAAAA,EAAQyD,EAAKmK,KAAK,SAAUpK,GACvBkF,OAAAA,EAAOlF,IAAQkF,EAAOlF,GAAKsY,QAEhCA,EAAQ,YAERpT,EAAO1I,KACT8b,EAAQpT,EAAO1I,GAAO8b,MACtBA,EAAQqf,EAAIrf,IAGd3T,QAAQC,IAAI,MAAM4C,OAAO7K,EAAM,WAAW6K,OAAOvH,EAAKnF,KAAK,OAAQ,UAAU0M,OAAO8Q,GAAS,YAAa,UA6C5G2f,CAAc/uB,GACPA,IAGTvE,QAAQC,IAAIozB,EAAIJ,KAAK,UACrB1uB,EAAIH,KAAKnO,QAAQ,SAAUpF,GACzBmP,QAAQC,IAAIozB,EAAIJ,KAAK,YACTpiC,EAAEiR,QACR7L,QAAQ,SAAUT,GAClB8F,IAAAA,EAAO1L,OAAOoG,KAAKR,EAAE8F,MACrBnH,EAAOqB,EAAErB,MAAQ,IAEjBqB,EAAEgF,WACJrG,EAAO,IAAMqB,EAAEgF,SAAW,KAOxBxC,IAAAA,EAAO,KAHT7D,EAAOk/B,EAAI1J,OAAOx1B,IAGI,IACxB6D,EAAO4H,EAAO5H,EAAM,IAChB9D,IAAAA,EAAMm/B,EAAIJ,KAAK,QAAUj7B,EAAO,OArC1B,SAAmBsD,EAAMgB,GAShChB,OARPA,EAAOA,EAAKiH,IAAI,SAAUlH,GACpB,IAACiB,EAAMhB,KAAKJ,eAAeG,GACtBA,OAAAA,EAGL1G,IAAAA,EAAI2H,EAAMhB,KAAKD,GAAKsY,OAAS,OAC1B0f,OAAAA,EAAI1+B,GAAG0G,MAEJlF,KAAK,MA4BgCo9B,CAAUj4B,EAAMiJ,EAAIjI,OACjE0D,QAAQC,IAAI/L,OAGhB8L,QAAQC,IAAI,IACLsE,MAMPivB,GAAO,SAAcjvB,GACnBH,IAAAA,EAAOG,EAAIlF,KAAK,CAClBlL,MAAM,EACN2N,OAAO,EACP5K,SAAS,IAGPxI,EAAM,GACV0V,EAAKnO,QAAQ,SAAUxF,GAChB/B,EAAI+B,EAAEyG,WACTzG,EAAE4W,MAAQ,EACV3Y,EAAI+B,EAAEyG,SAAWzG,GAGnB/B,EAAI+B,EAAEyG,SAASmQ,OAAS,IAEtBjV,IAAAA,EAAMxC,OAAOoG,KAAKtH,GAAK6T,IAAI,SAAUrN,GAChCxG,OAAAA,EAAIwG,KAYN9C,OATPA,EAAI0M,KAAK,SAAUrK,EAAGC,GAChBD,OAAAA,EAAE4S,MAAQ3S,EAAE2S,OACN,EACC5S,EAAE4S,MAAQ3S,EAAE2S,MACd,EAGF,IAEFjV,GAGLqhC,GAAQD,GAIRE,GAAU,WAEL,OADPZ,GAAO,MACA,MAKLa,GAAM,SAAap4B,GACjBA,GAAW,SAAXA,EACK,OAAA,KAAKpH,OAGVoH,GAAW,WAAXA,EACK,OAAA,KAAKpH,KAAK,UAGfoH,GAAW,SAAXA,EACK,OAAA,KAAK8D,OAGV9D,GAAW,WAAXA,GAAkC,YAAXA,EAClB,OAAA,KAAK8D,KAAK,CACfF,QAAQ,IAIR5D,GAAW,UAAXA,EACK,OAAA,KAAK8D,KAAK,CACfyC,OAAO,IACNS,IAAI,SAAU7T,GACRA,OAAAA,EAAIyF,OAIXoH,GAAW,SAAXA,GAAgC,cAAXA,EAChBk4B,OAAAA,GAAM,MAGXl4B,GAAW,UAAXA,EAAoB,CAClB6I,IAAAA,EAAO,GAeJA,OAdF/E,KAAAA,KAAK,CACRlL,MAAM,EACN2N,MAAO,CACL3N,MAAM,KAEP8B,QAAQ,SAAUvH,GACfoT,IAAAA,EAAQpT,EAAIoT,MAAMS,IAAI,SAAU/M,GAC3BA,OAAAA,EAAErB,OAEX2N,EAAQA,EAAMiB,OAAO,SAAUvN,GACtBA,OAAAA,IAET4O,EAAOA,EAAKvB,OAAOf,KAEdsC,EAGL7I,MAAW,SAAXA,EACK,KAAK6I,KAAK7B,IAAI,SAAU1R,GACtBA,OAAAA,EAAEiR,QAAQ3K,OAAO,SAAUpC,EAAGS,GAE5BT,OADPA,EAAES,EAAEoB,OAASpB,EAAEgF,UAAY5K,OAAOoG,KAAKR,EAAE8F,MAClCvG,GACN,MAIQ,UAAXwG,GACFu3B,GAAO,MACA,MAGF,KAAK3+B,QAGVy/B,GAAS,CACXC,MAAOH,GACPC,IAAKA,IAGHG,GAAY,CAEdC,MAAO,SAAet/B,EAAGC,GACnBs/B,IAAAA,EAAOv/B,EAAEN,KAAK,SACd8/B,EAAQv/B,EAAEP,KAAK,SAEf6/B,OAAAA,EAAOC,GACD,EAGND,EAAOC,EACF,EAGF,GAIT1kC,OAAQ,SAAgBkF,EAAGC,GACrBs/B,IAAAA,EAAOv/B,EAAEN,OAAO4C,OAAOxH,OACvB0kC,EAAQv/B,EAAEP,OAAO4C,OAAOxH,OAExBykC,OAAAA,EAAOC,EACF,EAGLD,EAAOC,GACD,EAGH,GAITnxB,UAAW,SAAmBrO,EAAGC,GAC3Bs/B,IAAAA,EAAOv/B,EAAEqO,YACTmxB,EAAQv/B,EAAEoO,YAEVkxB,OAAAA,EAAOC,EACF,EAGLD,EAAOC,GACD,EAGH,IAKPC,GAAS,SAAgB3vB,GACvB4vB,IAAAA,EAAS,GACT32B,EAAU,CACJ,MAAA,EACRY,aAAa,EACbF,YAAY,EACZnI,SAAS,GAsBJwO,OApBPA,EAAIH,KAAKnO,QAAQ,SAAUpF,GACrBqD,IAAAA,EAAMrD,EAAEsD,KAAKqJ,GACjB22B,EAAOjgC,GAAOigC,EAAOjgC,IAAQ,EAC7BigC,EAAOjgC,IAAQ,IAGjBqQ,EAAIH,KAAKtF,KAAK,SAAUrK,EAAGC,GACrBs/B,IAAAA,EAAOG,EAAO1/B,EAAEN,KAAKqJ,IACrBy2B,EAAQE,EAAOz/B,EAAEP,KAAKqJ,IAEtBw2B,OAAAA,EAAOC,EACF,EAGLD,EAAOC,GACD,EAGH,IAEF1vB,GAIL6vB,GAAiB,SAAwB7vB,GACvC8vB,IAAAA,EAAQ,GAiBL9vB,OAhBPA,EAAIlF,KAAK,CACPyC,MAAO,CACL3C,QAAQ,KAETlJ,QAAQ,SAAUxF,GACnB4jC,EAAM5jC,EAAEqR,MAAM,GAAGhH,IAAMrK,EAAEqR,MAAM,GAAG3C,OAAOnE,QAE3CuJ,EAAIH,KAAOG,EAAIH,KAAKtF,KAAK,SAAUrK,EAAGC,GAChC2/B,OAAAA,EAAM5/B,EAAEuG,OAASq5B,EAAM3/B,EAAEsG,OACpB,EACEq5B,EAAM5/B,EAAEuG,OAASq5B,EAAM3/B,EAAEsG,QAC1B,EAGH,IAEFuJ,GAITuvB,GAAUQ,aAAeR,GAAUC,MACnCD,GAAUhH,UAAYgH,GAAUhxB,UAEhC,IAAIyxB,GAAW,CACb15B,OAAO,EACP25B,UAAU,EACV9f,KAAK,EACL+f,YAAY,EACZC,OAAO,EACPC,eAAe,GAIb71B,GAAO,SAAcgM,GAGnBA,MAAU,UAFdA,EAAQA,GAAS,UAEiB,cAAVA,GAAmC,SAAVA,EACxCopB,GAAO,MAGZK,GAASr5B,eAAe4P,GACnBspB,GAAe,MAKH,mBAFrBtpB,EAAQgpB,GAAUhpB,IAAUA,IAGrB1G,KAAAA,KAAO,KAAKA,KAAKtF,KAAKgM,GACpB,MAGF,MAKL6hB,GAAU,WACRvoB,IAAAA,EAAO,GAAGvB,OAAO,KAAKuB,MAEnB,OADPA,EAAOA,EAAKuoB,UACL,KAAKtqB,UAAU+B,IAKpBwwB,GAAW,WACTxwB,IAAAA,EAAO,GAAGvB,OAAO,KAAKuB,MACtB1V,EAAM,GAWH,OAVP0V,EAAOA,EAAKrB,OAAO,SAAUlS,GACvBqD,IAAAA,EAAMrD,EAAEsD,KAAK,WAAW4C,OAExBrI,OAA4B,IAA5BA,EAAIwM,eAAehH,KAIvBxF,EAAIwF,IAAO,GACJ,KAEF,KAAKmO,UAAU+B,IAGpBywB,GAAU,CACZ/1B,KAAMA,GACN6tB,QAASA,GACTxoB,OAAQywB,IAGNE,GAAU,oEACVC,GAAS,gBACTC,GAAY,CAEd92B,WAAY,SAAoBqG,GAC1B0wB,IAAAA,EAAU1wB,EAAIH,KAAK7B,IAAI,SAAUsqB,GAC5BA,OAAAA,EAAG/qB,UAEZmzB,EAAQh/B,QAAQ,SAAU6L,EAAOrR,GAC/BqR,EAAM7L,QAAQ,SAAUT,EAAGlG,IAEL,IAAhBkG,EAAE6E,WAMN7E,EAAEmC,IAAMnC,EAAEmC,IAAIX,QAAQ,MAAO,IAC7BxB,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,MAAO,KAE3B8K,EAAMvS,OAAS,IAAMD,GAAM2lC,EAAQxkC,EAAI,MAKvC+E,EAAEgF,WAAgC,IAApBD,QAAQ/E,EAAErB,QAKN,IAAlBqB,EAAE2E,cAIN3E,EAAEoC,MAAQ,OAtBRpC,EAAEoC,KAAO,WA0BjBwG,YAAa,SAAqBivB,GAChCA,EAASp3B,QAAQ,SAAUT,IAEH,IAAlBA,EAAE2E,cACJ3E,EAAEoC,KAAO,KAGXpC,EAAEmC,IAAMnC,EAAEmC,IAAIX,QAAQ89B,GAAS,IAC/Bt/B,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ89B,GAAS,IAEjCt/B,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,SAAU,KAET,IAArB,IAAIpD,KAAK4B,EAAEoC,QACbpC,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,KAAM,IAC9BxB,EAAEoC,KAAO,IAAMpC,EAAEoC,OAIO,IAAtB,KAAKhE,KAAK4B,EAAEoC,QACdpC,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,SAAU,IAClCxB,EAAEoC,KAAO,IAAMpC,EAAEoC,SAIvB7B,QAAS,SAAiBs3B,GACxBA,EAASp3B,QAAQ,SAAUT,IACF,IAAnBA,EAAE2G,eAIN3G,EAAErB,KAAOiC,EAAUZ,EAAErB,UAGzB+gC,WAAY,SAAoB7H,GAC9BA,EAASp3B,QAAQ,SAAUT,GACzBA,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ+9B,GAAQ,IAChCv/B,EAAEmC,IAAMnC,EAAEmC,IAAIX,QAAQ+9B,GAAQ,OAGlCI,QAAS,SAAiB5wB,GACxBA,EAAIb,MAAM,WAAWkI,IAAI,sDAAsD+lB,UAGjFtzB,cAAe,SAAuBkG,GACpCA,EAAIH,KAAKnO,QAAQ,SAAU42B,GACrB/qB,IAAAA,EAAQ+qB,EAAG/qB,QACfA,EAAM7L,QAAQ,SAAUT,EAAGlG,IACG,IAAxBkG,EAAE8F,KAAKgD,cAAyBwD,EAAMxS,EAAI,KAC5CkG,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,MAAO,WAMrCo+B,GAAWJ,GAEXK,GAAW,CAEbn3B,YAAY,EACZnI,SAAS,EACTqI,aAAa,EACbk3B,OAAO,EACPr3B,UAAU,EACVI,eAAe,EAEP,MAAA,EACRk3B,cAAc,EACdC,aAAa,EACbN,YAAY,EACZC,SAAS,EAETM,aAAa,EACbzkB,OAAO,EACPxB,OAAO,EACPkmB,YAAY,GAGVC,GAAY,CACd5T,MAAO,GACP6T,OAAQ,CACE,MAAA,EACRL,cAAc,EACdC,aAAa,EACbN,YAAY,EACZC,SAAS,IAGbQ,GAAUE,MAAQjmC,OAAO0P,OAAO,GAAIq2B,GAAUC,OAAQ,CACpDH,aAAa,EACbzkB,OAAO,EACPxB,OAAO,EACPkmB,YAAY,IAId,IAAII,GAAY,SAAmBt4B,GAGV,iBAFvBA,EAAUA,GAAW,MAGnBA,EAAUm4B,GAAUn4B,IAAY,IAIlCA,EAAU5N,OAAO0P,OAAO,GAAI+1B,GAAU73B,GAEjC+yB,KAAAA,UACDlD,IAAAA,EAAW,KAAKA,WA8Eb,OA5EH7vB,EAAO,MACJ1G,KAAAA,cAIH0G,EAAQU,YACVk3B,GAASl3B,WAAW,MAIlBV,EAAQzH,SACVq/B,GAASr/B,QAAQs3B,GAIf7vB,EAAQY,aACVg3B,GAASh3B,YAAYivB,GAInB7vB,EAAQ83B,OACL3D,KAAAA,OAAO,sBAIVn0B,EAAQS,UACLA,KAAAA,WAAW83B,QAIdv4B,EAAQa,eACV+2B,GAAS/2B,cAAc,OAKrBb,EAAQw4B,aAAex4B,EAAQ+3B,eAC5BA,KAAAA,eAAeU,SAIlBz4B,EAAQg4B,aACLA,KAAAA,cAAcU,UAIjB14B,EAAQ03B,YAAc13B,EAAQu3B,SAChCK,GAASF,WAAW7H,GAIlB7vB,EAAQ23B,SACVC,GAASD,QAAQ,OAKf33B,EAAQ24B,YAAc34B,EAAQi4B,cAC3BA,KAAAA,cAAcM,QAIjBv4B,EAAQwT,OACLA,KAAAA,QAAQ5T,gBAIXI,EAAQgS,OAAShS,EAAQoa,UACtBpI,KAAAA,QAAQ9S,aAIXc,EAAQk4B,YACL/D,KAAAA,OAAO,cAGP,MAGLyE,GAAe,CACjBN,UAAWA,IAGTO,GAAWl+B,EAAqB,SAAUG,EAAQE,GAIpDA,EAAQ0N,QAAU,SAAUtL,GAEtB,IAACA,EAEI+J,OADM,KAAKA,SACJuB,QAAQ,MAIpBO,IAAAA,EAAOsE,GAASnQ,GAChB+N,EAAU,GA8BP,OA7BFvE,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBylC,IAAAA,EAAUzlC,EAAE6S,MAAM+C,GAElB6vB,GAAmB,IAAnBA,EAAQ/mC,OAAR+mC,CAMAznB,IAAAA,EAAQhe,EACZylC,EAAQrgC,QAAQ,SAAU4B,GACpB0+B,IAAAA,EAAQ1nB,EAAM3I,QAAQrO,GAEtB0+B,EAAM54B,QACRgL,EAAQvV,KAAKmjC,EAAM54B,QAGjB44B,EAAM7yB,OACRiF,EAAQvV,KAAKmjC,EAAM7yB,OAIrBmL,EAAQ0nB,EAAMz+B,QAGZ+W,GACFlG,EAAQvV,KAAKyb,QAtBblG,EAAQvV,KAAKvC,KAyBV,KAAKwR,UAAUsG,IAOxBnQ,EAAQg+B,WAAa,SAAU57B,GAEzB,IAACA,EAEI+J,OADM,KAAKA,SACJ6xB,WAAW,MAIvB/vB,IAAAA,EAAOsE,GAASnQ,GAChB+N,EAAU,GA8BP,OA7BFvE,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBylC,IAAAA,EAAUzlC,EAAE6S,MAAM+C,GAElB6vB,GAAmB,IAAnBA,EAAQ/mC,OAAR+mC,CAMAznB,IAAAA,EAAQhe,EACZylC,EAAQrgC,QAAQ,SAAU4B,GACpB0+B,IAAAA,EAAQ1nB,EAAM3I,QAAQrO,GAEtB0+B,EAAM54B,QAAU44B,EAAM7yB,OAExB6yB,EAAM54B,OAAOpO,QAAUgnC,EAAM7yB,MAAMnU,OACnCoZ,EAAQvV,KAAKmjC,EAAM54B,SACV44B,EAAM7yB,OACfiF,EAAQvV,KAAKmjC,EAAM7yB,OAIrBmL,EAAQ0nB,EAAMz+B,QAGZ+W,GACFlG,EAAQvV,KAAKyb,QAtBblG,EAAQvV,KAAKvC,KAyBV,KAAKwR,UAAUsG,IAGxBnQ,EAAQxE,MAAQwE,EAAQg+B,WAIxBh+B,EAAQi+B,YAAc,SAAU77B,GAE1B,IAACA,EAEI+J,OADM,KAAKA,SACJ8xB,YAAY,MAIxBhwB,IAAAA,EAAOsE,GAASnQ,GAChB+N,EAAU,GA+BP,OA9BFvE,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBylC,IAAAA,EAAUzlC,EAAE6S,MAAM+C,GAElB6vB,GAAmB,IAAnBA,EAAQ/mC,OAAR+mC,CAMAznB,IAAAA,EAAQhe,EACZylC,EAAQrgC,QAAQ,SAAU4B,GACpB0+B,IAAAA,EAAQ1nB,EAAM3I,QAAQrO,GAEtB0+B,EAAM54B,QACRgL,EAAQvV,KAAKmjC,EAAM54B,QAIjB44B,EAAM7yB,OAAS6yB,EAAMz+B,QACvBy+B,EAAM7yB,MAAMnU,QAAUgnC,EAAMz+B,MAAMvI,QAIpCsf,EAAQ0nB,EAAM7yB,QAGZmL,GACFlG,EAAQvV,KAAKyb,QAvBblG,EAAQvV,KAAKvC,KA0BV,KAAKwR,UAAUsG,IAKxBnQ,EAAQk+B,QAAU,SAAUjwB,EAAMjJ,GAChCiJ,EAAOA,GAAQ,GACfjJ,EAAUA,GAAW,CACnBrJ,MAAM,GAEJoQ,IAAAA,EAAM,KACNvO,EAAOpG,OAAOoG,KAAKyQ,GAchBlC,OAZPvO,EAAKC,QAAQ,SAAUf,GACrBqP,EAAMA,EAAI2B,QAAQhR,KAGpBqP,EAAIH,KAAKnO,QAAQ,SAAUpF,GACpB,IAAA,IAAIvB,EAAI,EAAGA,EAAI0G,EAAKzG,OAAQD,GAAK,EAChCuB,GAAAA,EAAEkb,IAAI/V,EAAK1G,IAEb,YADAuB,EAAE6lC,QAAUjwB,EAAKzQ,EAAK1G,OAKrBiV,EAAIH,KAAK7B,IAAI,SAAU1R,GACxByV,IAAAA,EAAMzV,EAAEwO,KAAK7B,GAEV8I,OADPA,EAAIowB,QAAU7lC,EAAE6lC,SAAW,KACpBpwB,OAKTqwB,GAAW,SAAkBpyB,EAAKnM,GAChCkE,IAAAA,EAAQiI,EAAIjI,MAMTiI,OALPA,EAAIH,KAAKnO,QAAQ,SAAUpF,GACzBA,EAAEiR,QAAQ7L,QAAQ,SAAUT,GACnBA,OAAAA,EAAE4C,GAAIkE,OAGViI,GAKLzN,GAAc,WACT6/B,OAAAA,GAAS,KAAM,gBAKpB39B,GAAc,WACT29B,OAAAA,GAAS,KAAM,gBAKpB19B,GAAc,WACT09B,OAAAA,GAAS,KAAM,gBAKpBC,GAAc,WAeT,OAdFxyB,KAAAA,KAAKnO,QAAQ,SAAUpF,GAEtBiR,IAAAA,EAAQjR,EAAEiR,QACdA,EAAM7L,QAAQ,SAAUT,EAAGlG,GACf,IAANA,GACFkG,EAAEyD,cAGA3J,IAAMwS,EAAMvS,OAAS,IACvBiG,EAAEoC,KAAO,QAKR,MAGLi/B,GAAU,CACZ//B,YAAaA,GACbkC,YAAaA,GACbC,YAAaA,GACb29B,YAAaA,IAGXE,GAAgB3+B,EAAqB,SAAUG,EAAQE,GAEzDA,EAAQb,IAAM,SAAUzD,EAAK2O,GACvB3O,YAAQnB,IAARmB,EACK,KAAKkQ,KAAK,GAAGtC,MAAM,GAAGnK,KAG1ByM,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtB+N,IAAAA,EAAO/N,EAAEiR,MAAM,IAEJ,IAAXe,EACFjE,EAAKjH,KAAOzD,EAEZ0K,EAAKjH,IAAMzD,IAGR,OAKTsE,EAAQZ,KAAO,SAAU1D,EAAK2O,GAExB3O,YAAQnB,IAARmB,EACK,KAAKkQ,KAAK7B,IAAI,SAAU1R,GACzBiR,IAAAA,EAAQjR,EAAEiR,QAEPlD,OADIkD,EAAMA,EAAMvS,OAAS,GACpBqI,QAKXwM,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBiR,IAAAA,EAAQjR,EAAEiR,QACVlD,EAAOkD,EAAMA,EAAMvS,OAAS,IAEjB,IAAXsT,EACFjE,EAAKhH,MAAQ1D,EAEb0K,EAAKhH,KAAO1D,IAGT,OAKTsE,EAAQzB,KAAO,WAIN,OAHFqN,KAAAA,KAAO,KAAKA,KAAK7B,IAAI,SAAU1R,GAC3BA,OAAAA,EAAEkG,SAEJ,MAKTyB,EAAQu+B,UAAY,WAcX,OAbF3yB,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBiR,IAAAA,EAAQjR,EAAEiR,QAEdA,EAAM7L,QAAQ,SAAUT,EAAGlG,GACf,IAANA,IACFkG,EAAEmC,IAAM,IAGNmK,EAAMxS,EAAI,KACZkG,EAAEoC,KAAO,SAIR,MAKTY,EAAQw+B,YAAc,WAChB78B,IAAAA,EAAY,UAUT,OATFiK,KAAAA,KAAKnO,QAAQ,SAAUpF,GACdA,EAAEiR,QAER7L,QAAQ,SAAUT,GAClB2E,EAAUvG,KAAK4B,EAAEoC,QACnBpC,EAAEoC,KAAO,SAIR,MAGTY,EAAQy+B,YAAcz+B,EAAQw+B,YAG9Bx+B,EAAQ0+B,aAAe,SAAUl8B,EAAOC,GAS/B,OARPD,EAAQA,GAAS,IACjBC,EAAMA,GAAO,IACRmJ,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBiR,IAAAA,EAAQjR,EAAEiR,QACdA,EAAM,GAAGnK,IAAMqD,EAAQ8G,EAAM,GAAGnK,IAC5BwG,IAAAA,EAAO2D,EAAMA,EAAMvS,OAAS,GAChC4O,EAAKvG,KAAOqD,EAAMkD,EAAKvG,OAElB,MAGTY,EAAQ2+B,YAAc3+B,EAAQ0+B,aAG9B1+B,EAAQ4+B,cAAgB,SAAUp8B,EAAOC,GAShC,OARPD,EAAQA,GAAS,IACjBC,EAAMA,GAAO,IACRmJ,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBiR,IAAAA,EAAQjR,EAAEiR,QACdA,EAAM,GAAGnK,IAAMqD,EAAQ8G,EAAM,GAAGnK,IAC5BwG,IAAAA,EAAO2D,EAAMA,EAAMvS,OAAS,GAChC4O,EAAKvG,KAAOqD,EAAMkD,EAAKvG,OAElB,QAKPzB,GAAO,SAAcjC,GAElBq8B,KAAAA,UAMA,IAJDtrB,IAAAA,EAAO,KAAKb,KAAK,GACjBzG,EAASsH,EAAK1V,OACd8nC,EAAU,GAEL/nC,EAAI,EAAGA,EAAI,KAAK8U,KAAK7U,OAAQD,IAAK,CACrCuB,IAAAA,EAAI,KAAKuT,KAAK9U,GAClB+nC,EAAQxmC,EAAEmK,QAAS,EACf4D,IAAAA,EAAOqG,EAAKzC,WAEZtO,IACF0K,EAAKhH,MAAQ1D,GAIf0K,EAAK1L,KAAOrC,EAAEmK,MAEdnK,EAAEiR,MAAM,GAAGH,KAAO/C,EAAK9D,GACvBmK,EAAK1V,QAAUsB,EAAEtB,OACjB0V,EAAKlD,MAAQ,GAKXu1B,IAAAA,EAAWryB,EAAK1V,OAASoO,EAqBtB,OApBF+G,KAAAA,UAAUzO,QAAQ,SAAUsO,GAE/BA,EAAIH,KAAKnO,QAAQ,SAAUpF,GAGpB,IAFDiR,IAAAA,EAAQjR,EAAEiR,QAEL7O,EAAK,EAAGA,EAAK6O,EAAMvS,OAAQ0D,IAC9B6O,GAAAA,EAAM7O,GAAI6H,KAAOmK,EAAKjK,MAAO,CAC/BnK,EAAEtB,QAAU+nC,EACZ,MAIJzmC,EAAEkR,MAAQ,KAGZwC,EAAIH,KAAOG,EAAIH,KAAKrB,OAAO,SAAUlS,GAC5BwmC,OAAqB,IAArBA,EAAQxmC,EAAEmK,WAId,KAAKqH,UAAU,CAAC4C,KAGrBsyB,GAAU,CACZphC,KAAMA,IAGJqhC,GAAY,mBAKZC,GAAiB,SAAwBriC,EAAGsiC,GAC1C,GAACtiC,EAAEyC,MAAH,CAMC,IAFDiK,IAAAA,EAAQ1M,EAAEi4B,WAEL/9B,EAAI,EAAGA,EAAIwS,EAAMvS,OAAS,EAAGD,IAAK,CACrCkG,IAAAA,EAAIsM,EAAMxS,GAEVkoC,GAAAA,GAAU5jC,KAAK4B,EAAEoC,MACnB,OAKJkK,EAAM7L,QAAQ,SAAUT,GACtBA,EAAEgF,SAAWhF,EAAEoB,QAGjBkL,EAAM,GAAG3N,MAAQujC,EAEjB51B,EAAMrO,MAAM,GAAGwC,QAAQ,SAAUT,GAC/BA,EAAErB,KAAO,KAGN,IAAA,IAAIlB,EAAK,EAAGA,EAAK6O,EAAMvS,OAAS,EAAG0D,IAAM,CACxC8hB,IAAAA,EAAKjT,EAAM7O,GACf8hB,EAAGnd,KAAOmd,EAAGnd,KAAKZ,QAAQ,IAAK,OAM/B2gC,GAAW,WACTpzB,IAAAA,EAAM,KAAKqH,IAAI,mBAEfxW,EAAImP,EAAIb,MAAM,qBA4BX,OA3BP+zB,GAAeriC,EAAG,OAElBA,EAAImP,EAAIb,MAAM,gCACd+zB,GAAeriC,EAAG,OAElBA,EAAImP,EAAIb,MAAM,0BACd+zB,GAAeriC,EAAG,MAElBA,EAAImP,EAAIb,MAAM,cACd+zB,GAAeriC,EAAG,MAElBA,EAAImP,EAAIb,MAAM,iBACd+zB,GAAeriC,EAAG,MAElBA,EAAImP,EAAIb,MAAM,4DACd+zB,GAAeriC,EAAG,OAElBA,EAAImP,EAAIb,MAAM,oBACd+zB,GAAeriC,EAAG,OAElBA,EAAImP,EAAIb,MAAM,6BACd+zB,GAAeriC,EAAG,OAElBA,EAAImP,EAAIb,MAAM,QACd+zB,GAAeriC,EAAG,MAElBA,EAAImP,EAAIb,MAAM,YACP,MAGLk0B,GAAc,CAChBD,SAAUA,IAGRE,GAAYjoC,OAAO0P,OAAO,GAAImtB,GAAYM,GAAcqB,GAAUgB,GAAQK,GAAUQ,GAAWO,GAAUY,GAAYC,GAAWY,GAASM,GAASqB,GAAQiB,GAASuB,GAAcC,GAAUQ,GAASC,GAAeS,GAASK,IAE5NE,GAAY,GAEZ1lC,GAAM,CAAC,CAAC,QAAS,KAAM,CAAC,aAAc,gBAAiB,CAAC,aAAc,cAAe,CAAC,WAAY,YAAa,CAAC,SAAU,UAAW,CAAC,QAAS,UAAW,CAAC,YAAa,aAAc,CAAC,aAAc,cAAe,CAAC,OAAQ,QAAS,CAAC,UAAW,WAAY,CAAC,WAAY,YAAa,CAAC,eAAgB,gBAAiB,CAAC,eAAgB,iBAC/UA,GAAI6D,QAAQ,SAAUxB,GACpBqjC,GAAUrjC,EAAE,IAAM,SAAUjB,GACtB4B,IAAAA,EAAI,KAAKsO,MAAMjP,EAAE,IAMdW,MAJU,iBAAN5B,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGL4B,KAIX0iC,GAAUC,OAASD,GAAUxC,MAC7BwC,GAAUE,WAAaF,GAAUG,WACjCH,GAAUrtB,MAAQqtB,GAAUh2B,MAG5Bg2B,GAAUI,aAAe,SAAU1kC,GAC7B4B,IAAAA,EAAI,KAAKohC,WAAW,aAOjBphC,OANPA,EAAIA,EAAEsO,MAAM,iBAEK,iBAANlQ,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGL4B,GAKT0iC,GAAUK,MAAQ,SAAU3kC,GACtB4B,IAAAA,EAAI,KAAKsO,MAAM,qBAMZtO,MAJU,iBAAN5B,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGL4B,GAKT0iC,GAAUM,OAAS,SAAU5kC,GAEvB8tB,IAAAA,EAAO,KAAK5d,MAAM,2CAElBtO,EAAI,KAAKwW,IAAI0V,GAAMkV,WAAW,aAU3BphC,OARPA,EAAIA,EAAEyN,OAAOye,IACXxiB,KAAK,SACP1J,EAAIA,EAAEsO,MAAM,WAEK,iBAANlQ,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGL4B,GAKT0iC,GAAUO,cAAgB,SAAU7kC,GAC9B4B,IAAAA,EAAI,KAAKkjC,UAONljC,OANPA,EAAIA,EAAEsO,MAAM,kBAEK,iBAANlQ,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGL4B,GAIT0iC,GAAUS,SAAW,SAAU/kC,GACzB8B,IAAAA,EAAI,KAAKgjC,UAETE,EAAMljC,EAAEmjC,SAYLD,OARPA,GAFAA,GADAA,EAAMA,EAAI31B,OAAOvN,EAAE8iC,WACTv1B,OAAOvN,EAAE+iC,kBAETzsB,IADG,CAAC,UAAW,MAAO,QAAS,SAAU,UAAW,SAAU,YAGpE9M,KAAK,YAEQ,iBAANtL,IACTglC,EAAMA,EAAIv2B,IAAIzO,IAGTglC,GAITV,GAAUY,OAASZ,GAAUS,SAC7BT,GAAUa,OAASb,GAAUS,SAC7B,IAAIK,GAAUd,GAEVe,GAAY,kBAGZC,GAAc,SAAqBh3B,EAAOtM,EAAG8G,GAC3CwZ,IAAAA,EAAMxZ,EAAMmO,MAEZgD,EAAM3L,EAAMtM,GAAG0B,QAAU,IAAM4K,EAAMtM,EAAI,GAAG0B,QAE5C4e,YAAa/iB,IAAb+iB,EAAIrI,KAAkD,IAA5BqI,EAAI5a,eAAeuS,IAC/C3L,EAAMtM,GAAG6F,IAAIya,EAAIrI,GAAM,cAAenR,GACtCwF,EAAMtM,EAAI,GAAG6F,IAAIya,EAAIrI,GAAM,cAAenR,GACnC,GAIL9G,EAAI,EAAIsM,EAAMvS,aAGCwD,IAAb+iB,EAFJrI,GAAO,IAAM3L,EAAMtM,EAAI,GAAG0B,WAEgC,IAA5B4e,EAAI5a,eAAeuS,IAC/C3L,EAAMtM,GAAG6F,IAAIya,EAAIrI,GAAM,gBAAiBnR,GACxCwF,EAAMtM,EAAI,GAAG6F,IAAIya,EAAIrI,GAAM,gBAAiBnR,GAC5CwF,EAAMtM,EAAI,GAAG6F,IAAIya,EAAIrI,GAAM,gBAAiBnR,GACrC,GAKP9G,EAAI,EAAIsM,EAAMvS,aAGCwD,IAAb+iB,EAFJrI,GAAO,IAAM3L,EAAMtM,EAAI,GAAG0B,WAEgC,IAA5B4e,EAAI5a,eAAeuS,IAC/C3L,EAAMtM,GAAG6F,IAAIya,EAAIrI,GAAM,eAAgBnR,GACvCwF,EAAMtM,EAAI,GAAG6F,IAAIya,EAAIrI,GAAM,eAAgBnR,GAC3CwF,EAAMtM,EAAI,GAAG6F,IAAIya,EAAIrI,GAAM,eAAgBnR,GAC3CwF,EAAMtM,EAAI,GAAG6F,IAAIya,EAAIrI,GAAM,eAAgBnR,GACpC,GAIJ,GAKLy8B,GAAe,SAAsBj3B,EAAOxF,GAKzC,IAJDwZ,IAAAA,EAAMxZ,EAAMmO,MACZwL,EAAc3Z,EAAM2Z,YAGfzgB,EAAI,EAAGA,EAAIsM,EAAMvS,OAAQiG,GAAK,EAAG,CACpCtB,IAAAA,EAAM4N,EAAMtM,GAAGoB,MAEfqf,IAAqB,IAArBA,EAAY/hB,IAAiBsB,EAAI,EAAIsM,EAAMvS,OAAQ,CACjDypC,IAAAA,EAAaF,GAAYh3B,EAAOtM,EAAG8G,GAEnC08B,GAAAA,EAAa,EAAG,CAClBxjC,GAAKwjC,EAEL,UAKAljB,QAAa/iB,IAAb+iB,EAAI5hB,KAAkD,IAA5B4hB,EAAI5a,eAAehH,GAM7CA,GAAAA,IAAQ4N,EAAMtM,GAAG0B,UAAoD,IAAzC4e,EAAI5a,eAAe4G,EAAMtM,GAAG0B,UAMxD2hC,IAAwB,IAAxBA,GAAUjlC,KAAKM,GAAe,CAC5B+kC,IAAAA,EAAW/kC,EAAI8C,QAAQ6hC,GAAW,KAED,IAAjC/iB,EAAI5a,eAAe+9B,IACrBn3B,EAAMtM,GAAG6F,IAAIya,EAAImjB,GAAW,mBAAoB38B,SATlDwF,EAAMtM,GAAG6F,IAAIya,EAAIhU,EAAMtM,GAAG0B,SAAU,UAAWoF,QAN/CwF,EAAMtM,GAAG6F,IAAIya,EAAI5hB,GAAM,UAAWoI,GAoB/BwF,OAAAA,GAGLo3B,GAAaH,GAEbI,GAAc,eACdC,GAAS,4BAGTC,GAAmB,SAA0Bv3B,EAAOxS,EAAGgN,GACrDsC,IAAAA,EAAOkD,EAAMxS,GAWb6pC,GAAAA,GAAYvlC,KAAKgL,EAAKzK,QACnBglC,GAAYvlC,KAAKgL,EAAKjH,OAASwhC,GAAYvlC,KAAKgL,EAAKhH,OAASgH,EAAKhI,MAAMrH,OAAS,EAAG,CACpF+pC,IAAAA,EAAU16B,EAAKhI,MAAMgI,EAAKhI,MAAMrH,OAAS,GAEzC+pC,GAAY,MAAZA,EAEF,YADA16B,EAAKvD,IAAI,CAAC,aAAc,QAAS,WAAYiB,GAK/B,MAAZg9B,GACF16B,EAAKvD,IAAI,CAAC,UAAW,UAAWiB,GAMlC88B,GAAOxlC,KAAKgL,EAAKzK,OACnByK,EAAKvD,IAAI,OAAQ,UAAWiB,IAY5Bi9B,GAAmBF,GAInBG,GAAa,CACjB,CAAC,gCAAiC,SAClC,CAAC,gCAAiC,WAAY,CAAC,YAAa,aAAc,CAAC,sCAAuC,OAClH,CAAC,gEAAiE,OAElE,CAAC,0CAA2C,QAC5C,CAAC,qDAAsD,QACvD,CAAC,qDAAsD,QACvD,CAAC,aAAc,QACf,CAAC,sBAAuB,QACxB,CAAC,yBAA0B,QAC3B,CAAC,qCAAsC,QACvC,CAAC,uCAAwC,QAEzC,CAAC,YAAa,YACd,CAAC,gBAAiB,YAClB,CAAC,gBAAiB,YAElB,CAAC,eAAgB,cACjB,CAAC,cAAe,cAChB,CAAC,sCAAuC,QACxC,CAAC,uCAAwC,QAEzC,CAAC,sBAAuB,eACxB,CAAC,kDAAmD,eAKpD,CAAC,0LAA2L,CAAC,QAAS,UACtM,CAAC,0KAA2K,CAAC,QAAS,UACtL,CAAC,2EAA4E,CAAC,QAAS,UAEvF,CAAC,0CAA2C,CAAC,WAAY,iBAAkB,CAAC,oDAAqD,CAAC,UAAW,iBAC7I,CAAC,gBAAiB,CAAC,WAAY,iBAC/B,CAAC,2CAA4C,CAAC,UAAW,WAAY,iBACrE,CAAC,cAAe,CAAC,UAAW,WAAY,iBAExC,CAAC,2BAA4B,YAE7B,CAAC,8BAA+B,CAAC,QAAS,gBAC1C,CAAC,4DAA6D,eAE9D,CAAC,wBAAyB,UAMtBC,GAAe,kBACfC,GAAgB,2DAGhBC,GAAa,SAAoB/6B,EAAMtC,GAGpC,IAFDpI,IAAAA,EAAM0K,EAAKzK,KAENmB,EAAI,EAAGA,EAAIkkC,GAAWjqC,OAAQ+F,GAAK,EACtCkkC,IAA+B,IAA/BA,GAAWlkC,GAAG,GAAG1B,KAAKM,GAAe,CACvC0K,EAAK0C,QAAQk4B,GAAWlkC,GAAG,GAAI,WAAaA,EAAGgH,GAC/C,MAMAsC,EAAKzK,KAAK5E,QAAU,GAAKkqC,GAAa7lC,KAAKM,IAAQwlC,GAAc9lC,KAAKM,IACxE0K,EAAKvD,IAAI,eAAgB,OAAQiB,IAIjCs9B,GAAcD,GAKdE,GAAM,YACNC,GAAM,aACNC,GAAO,eACPC,GAAO,WACPC,GAAO,YACP1nB,GAAS,SACT2nB,GAAM,aACN/8B,GAAQ,QACRR,GAAO,OACP8S,GAAO,OACP0qB,GAAO,WAGPC,GAAa,CACf3lC,EAAG,CAAC,CAAC,cAAegb,IAAO,CAAC,kBAAmB0qB,IAC9C,CAAA,gBAAiBH,IAAO,CAAC,cAAeE,KAEzCvlC,EAAG,CAAC,CAAC,eAAgBklC,KACrBjlC,EAAG,CAEF,CAAA,4CAA6CqlC,IAE7C,CAAA,0BAA2BA,IAE3B,CAAA,mBAAoBA,IAEpB,CAAA,eAAgBA,IAChB,CAAA,kBAAmBA,IAEnB,CAAA,gBAAiBA,IACjB,CAAA,gBAAiBA,IAEjB,CAAA,aAAcA,IACd,CAAA,mBAAoBA,IAEpB,CAAA,uBAAwBA,IAExB,CAAA,qBAAsBA,IAEtB,CAAA,mBAAoBA,IAEpB,CAAA,eAAgBA,IAChB,CAAA,0BAA2BA,IAE3B,CAAA,oBAAqBA,IACrB,CAAA,eAAgBD,IAChB,CAAA,qBAAsBH,IAAM,CAAC,YAAaA,KAC3CvoC,EAAG,CAAC,CAAC,aAAcwoC,IAAM,CAAC,gBAAiBA,IAAM,CAAC,cAAeA,IAAM,CAAC,oBAAqBD,IAAM,CAAC,kBAAmBA,IAAM,CAAC,YAAaA,KAC3I9kC,EAAG,CAAC,CAAC,iBAAkB8kC,IAAM,CAAC,YAAaM,IAC1C,CAAA,UAAWD,IACX,CAAA,cAAeA,KAEhB5qC,EAAG,CAAC,CAAC,kBAAmB6qC,KAExBjlC,EAAG,CAAC,CAAC,WAAYglC,KAEjB/kC,EAAG,CAAC,CAAC,YAAa0kC,IAAM,CAAC,gBAAiBA,IAAM,CAAC,gBAAiBA,IAAM,CAAC,mBAAoBA,KAC7FzkC,EAAG,CAAC,CAAC,gBAAiB4kC,IAAO,CAAC,eAAgBA,IAAO,CAAC,WAAYE,IACjE,CAAA,eAAgB,SACjB1mC,EAAG,CAAC,CAAC,gBAAiBqmC,IAAM,CAAC,iBAAkB18B,IAAQ,CAAC,mBAAoB,WAE5E1M,EAAG,CAAC,CAAC,QAASypC,IACb,CAAA,UAAWA,IACX,CAAA,cAAeA,KAEhB5kC,EAAG,CAAC,CAAC,kBAAmB,QAAS,CAAC,YAAa,eAAgB,CAAC,kBAAmB0kC,IAAO,CAAC,WAAYF,IAAM,CAAC,qBAAsB38B,KACpI3H,EAAG,CAAC,CAAC,YAAa,eAAgB,CAAC,kBAAmBqkC,IAAM,CAAC,gBAAiBA,IAAM,CAAC,YAAal9B,KAClGpH,EAAG,CAAC,CAAC,cAAewkC,IAAO,CAAC,YAAap9B,IAAO,CAAC,cAAeq9B,IAAO,CAAC,eAAgBD,IACvF,CAAA,eAAgBA,IAChB,CAAA,qBAAsBC,IAAO,CAAC,YAAavqB,IAAO,CAAC,SAAUyqB,KAE9DxkC,EAAG,CAAC,CAAC,wBAAyBykC,KAE9BtkC,EAAG,CAAC,CAAC,YAAagkC,IAAM,CAAC,WAAYA,IAAM,CAAC,UAAWA,IAAM,CAAC,aAAcA,IAAM,CAAC,WAAYG,IAAO,CAAC,gBAAiBznB,IAAS,CAAC,UAAWA,IAAS,CAAC,eAAgBsnB,IAAM,CAAC,iBAAkBA,IAAM,CAAC,cAAeA,IAAM,CAAC,aAAcA,IAAM,CAAC,gBAAiBG,MAIjQK,GAAQ,YACRC,GAAQ,aACRC,GAAS,eACTC,GAAS,WACTC,GAAS,YACTC,GAAM,SACNC,GAAO,SACPC,GAAU,QACVC,GAAK,OACLC,GAAS,OACTC,GAAS,WACT5pB,GAAQ,QACRjB,GAAQ,QAER8qB,GAAY,CAAC,KACjB,KACA,CAEEC,GAAIT,GACJU,GAAIJ,GACJK,GAAId,GACJe,GAAIV,GACEG,KAAAA,GACAA,KAAAA,IACL,CAEDQ,IAAKZ,GACLa,IAAKb,GACLc,IAAKd,GACEC,MAAAA,GACAvpB,MAAAA,GACA,MAAA,SACPqqB,IAAKnB,GACLp/B,IAAK4/B,GACLY,IAAKhB,GACLiB,IAAKrB,GACLsB,IAAKrB,GACLsB,IAAK,SAELC,IAAKvB,GACLwB,IAAKzB,GACL0B,IAAK1B,GACL2B,IAAKzB,GACL0B,IAAK5B,GACL6B,IAAK7B,GACL8B,IAAK9B,GACL+B,IAAK/B,GACLgC,IAAKhC,GACLiC,IAAK9B,GACL+B,IAAK/B,GACLgC,IAAKjC,IACJ,CAEDkC,KAAMhC,GACNiC,KAAMjC,GACNkC,KAAMlC,GACNmC,KAAMnC,GACNoC,KAAMpC,GACNqC,KAAMrC,GACNsC,KAAMtC,GACNuC,KAAMjC,GAENkC,KAAM3C,GACN4C,KAAMnC,GAENoC,KAAMpC,GAENqC,KAAM7C,GACN8C,KAAMxC,GACNyC,KAAMvC,GAENwC,KAAM/C,GACNgD,KAAMjD,GACNkD,KAAM/C,GACNgD,KAAMpD,GACNqD,KAAMtD,GACNuD,KAAMjD,GACNkD,KAAMlD,GACNmD,KAAMnD,GACNoD,KAAMrD,GACNsD,KAAM3D,GACN4D,KAAM5D,GACN6D,KAAMnD,GAENoD,KAAM5D,GACN6D,KAAMjtB,GACNtV,KAAMw+B,GACNgE,KAAMtD,GAENuD,KAAMhE,GACNiE,KAAM,QACNC,KAAMhE,GACNiE,KAAMpE,GACNqE,KAAM5D,GACN6D,KAAMnE,IACL,CAEDoE,MAAOnE,GACPoE,MAAOpE,GACPqE,MAAOrE,GACPsE,MAAOpE,GACPqE,MAAO3E,GACP4E,MAAOtE,GACPuE,MAAOxE,GACPyE,MAAO5E,GACP6E,MAAOzE,GACP0E,MAAOtE,GAEPuE,MAAOvE,GAEPwE,MAAOzE,GACP0E,MAAO7E,GACP8E,MAAOpF,GACPqF,MAAOnF,GACPoF,MAAO,UACPC,MAAOjF,GACPkF,MAAOnF,GACPoF,MAAOpF,IACN,CAEDqF,OAAQhF,GAERiF,OAAQpF,GACRqF,OAAQrF,GACRsF,OAAQ,SACP,CAEDC,QAASpF,GAETqF,QAASlwB,GAETmwB,QAAStF,KAIPuF,GAAY,SAAmB1hC,EAAMtC,GACnCpI,IAAAA,EAAM0K,EAAKhI,MACX2pC,EAAQrsC,EAAIA,EAAI3E,OAAS,GAEzB6qC,IAAqC,IAArCA,GAAWl/B,eAAeqlC,GAGvB,IAFD95B,IAAAA,EAAO2zB,GAAWmG,GAEbjrC,EAAI,EAAGA,EAAImR,EAAKlX,OAAQ+F,GAAK,EAChCmR,IAAyB,IAAzBA,EAAKnR,GAAG,GAAG1B,KAAKM,GAAe,CACjC0K,EAAK0C,QAAQmF,EAAKnR,GAAG,GAAI,UAAUuN,OAAO09B,EAAO,MAAM19B,OAAOvN,GAAIgH,GAClE,QAOJkkC,GAAgB,SAAuB5hC,EAAMtC,GAC3CzI,IAAAA,EAAM+K,EAAKhI,MAAMrH,OACjB+X,EAAM,EAENzT,GAAOyT,IACTA,EAAMzT,EAAM,GAGT,IAAA,IAAIvE,EAAIgY,EAAKhY,EAAI,EAAGA,GAAK,EAAG,CAC3B4E,IAAAA,EAAM0K,EAAKhI,MAAMwJ,OAAOvM,EAAMvE,EAAGuE,GAEjCmnC,IAA8C,IAA9CA,GAAU9mC,EAAI3E,QAAQ2L,eAAehH,GAAe,CAClDmH,IAAAA,EAAM2/B,GAAU9mC,EAAI3E,QAAQ2E,GAChC0K,EAAK0C,QAAQjG,EAAK,WAAanH,EAAKoI,GACpC,SAMFmkC,GAAe,SAAoB7hC,EAAMtC,GAC3CkkC,GAAc5hC,EAAMtC,GACpBgkC,GAAU1hC,EAAMtC,IAGdokC,GAAcD,GAKdqGAOXC,GAAe,SAAsBC,GACnCA,MAAkB,MAAlBA,EAAI3gC,OAAO,KAEa,OAAtB2gC,EAAIp9B,MAAM,WAKVo9B,EAAIp9B,MAAM,QAKVo9B,EAAIvxC,OAAS,OAWjBwxC,GAAa,SAAoB7sC,GAG5BysC,OAFPzsC,EAAMA,EAAI8C,QAAQ,QAAS,KAEpB2pC,GAAUzlC,eAAehH,IAG9B8sC,GAAW,SAAkBpiC,EAAMtC,GACjCwkC,IAAAA,EAAMliC,EAAKjH,IAAMiH,EAAKzK,KAAOyK,EAAKhH,KAGtCkpC,GAFAA,EAAMA,EAAI/pC,QAEAC,QAAQ,UAAW,KAEH,IAAtB6pC,GAAaC,KACfliC,EAAKvD,IAAI,QAAS,cAAeiB,GACjCsC,EAAKzK,KAAO2sC,EACZliC,EAAKjH,IAAMiH,EAAKjH,IAAIX,QAAQ,IAAK,IACjC4H,EAAKhH,KAAOgH,EAAKhH,KAAKZ,QAAQ,IAAK,KAIjC4H,EAAKzK,KAAKuP,MAAMk9B,MAClBhiC,EAAKvD,IAAI,QAAS,gBAAiBiB,GACnCsC,EAAKzK,KAAO2sC,IAIU,IAApBC,GAAWD,KACbliC,EAAKvD,IAAI,WAAY,iBAAkBiB,GACvCsC,EAAKzK,KAAO2sC,IAIZG,GAAWD,GAEXE,GAAQ,CACVlrB,QAASkjB,GACT96B,YAAam7B,GACb/9B,MAAOo+B,GACPlC,OAAQgJ,GACRpL,MAAO2L,IAGLE,GAAU,SAAiB58B,EAAKzC,GAC9BxF,IAAAA,EAAQiI,EAAIjI,MAEhB4kC,GAAMlrB,QAAQlU,EAAOxF,GAEhB,IAAA,IAAIhN,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,GAAK,EAAG,CACpCsP,IAAAA,EAAOkD,EAAMxS,GAEjB4xC,GAAM9iC,YAAY0D,EAAOxS,EAAGgN,GAE5B4kC,GAAM1lC,MAAMoD,EAAMtC,GAElB4kC,GAAMxJ,OAAO94B,EAAMtC,GAEnB4kC,GAAM5L,MAAM12B,EAAMtC,GAGbiI,OAAAA,GAGL68B,GAAUD,GAMVE,GAAgB,CAClB/xC,EAAG,OAEH09B,MAAO,OAEPsU,GAAI,OAEJC,MAAO,OAEP31B,IAAK,OAEL41B,QAAS,OAEH,GAAA,OAENC,IAAK,OAELC,IAAK,OAEG,KAAA,OAERC,IAAK,OAELC,KAAM,OAENC,IAAK,OAELC,KAAM,YAENC,IAAK,OAELC,MAAO,OAEPrkC,OAAQ,QAINskC,GAAiB,CACnBV,MAAO,OAEPW,GAAI,OAEJ/nB,IAAK,YAELgoB,KAAM,OAENC,IAAK,OAELC,KAAM,OAENC,KAAM,OAENC,QAAS,OAETC,KAAM,OAENd,IAAK,OAELe,GAAI,UAGFC,GAAe,CACjBxwB,UAAW,OAEXxT,WAAY,OAEZiU,WAAY,OAEZJ,OAAQ,OAER3B,QAAS,OAETa,MAAO,OAEPC,QAAS,OAETP,MAAO,OAEPkB,YAAa,OAEbtB,QAAS,OAETd,UAAW,UAIT0yB,GAAgB,CAClBzxB,OAAQ,OAERnU,UAAW,OAEX6V,YAAa,OAEbzB,MAAO,OAEPE,WAAY,OAEZD,aAAc,QAGZwxB,GAAS,CACXX,eAAgBA,GAChBZ,cAAeA,GACfwB,cAAeF,GACfG,aAAcJ,IAGZK,GAAYnzC,OAAOoG,KAAK4sC,GAAOE,cAC/BE,GAAapzC,OAAOoG,KAAK4sC,GAAOC,eAEhCI,GAAkB,SAAyBnhC,EAAOxF,GA0D/C,IAzDD2a,IAAAA,EAAQ,SAAe3nB,GACrBsP,IAAAA,EAAOkD,EAAMxS,GAEbsP,IAAmB,IAAnBA,EAAKxC,UACA,MAAA,WAKLoG,IAAAA,EAAWV,EAAMxS,EAAI,GAErBkT,GAAAA,EAAU,CAERogC,IAAwD,IAAxDA,GAAOvB,cAAcnmC,eAAesH,EAAS5L,OAAiB,CAC5DyE,IAAAA,EAAMunC,GAAOvB,cAAc7+B,EAAS5L,OAEjC,OADPgI,EAAKvD,IAAIA,EAAK,SAAWmH,EAAS5L,MAAO0F,GAClC,WAKL4mC,IAAAA,EAAWH,GAAUt9B,KAAK,SAAUpK,GAC/BmH,OAAAA,EAASlH,KAAKD,KAGnB6nC,QAAanwC,IAAbmwC,EAAwB,CACtBC,IAAAA,EAAOP,GAAOE,aAAaI,GAExB,OADPtkC,EAAKvD,IAAI8nC,EAAM,SAAWD,EAAU5mC,GAC7B,YAKP8mC,IAAAA,EAAWthC,EAAMxS,EAAI,GAErB8zC,GAAAA,EAAU,CAERR,IAAyD,IAAzDA,GAAOX,eAAe/mC,eAAekoC,EAASxsC,OAAiB,CAC7DysC,IAAAA,EAAQT,GAAOX,eAAemB,EAASxsC,OAEpC,OADPgI,EAAKvD,IAAIgoC,EAAO,UAAYD,EAASxsC,MAAO0F,GACrC,WAKLgnC,IAAAA,EAAYN,GAAWv9B,KAAK,SAAUpK,GACjC+nC,OAAAA,EAAS9nC,KAAKD,KAGnBioC,QAAcvwC,IAAduwC,EAAyB,CACvBC,IAAAA,EAAQX,GAAOC,cAAcS,GAE1B,OADP1kC,EAAKvD,IAAIkoC,EAAO,UAAYD,EAAWhnC,GAChC,cAKJhN,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,GAAK,EAC1B2nB,EAAM3nB,IAMjBk0C,GAAgBP,GAEhBQ,GAAc,4BACdC,GAAY,QAGZC,GAAY,SAAmBp/B,GAC7BjI,IAAAA,EAAQiI,EAAIjI,MAChBiI,EAAIH,KAAKnO,QAAQ,SAAUpF,GAGpB,IAFDiR,IAAAA,EAAQjR,EAAEiR,QAELxS,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,IAAK,CACjCsP,IAAAA,EAAOkD,EAAMxS,IAEmB,IAAhCm0C,GAAY7vC,KAAKgL,EAAKzK,QAAgD,IAA9BuvC,GAAU9vC,KAAKgL,EAAKzK,OAC9DyK,EAAKvD,IAAI,aAAc,iBAAkBiB,OAM7CsnC,GAAUD,GAEVE,GAAY,+BACZC,GAAS,aAGTC,GAAc,SAAqBjiC,EAAOxF,GACxCwZ,IAAAA,EAAMxZ,EAAMmO,MAChB3I,EAAM7L,QAAQ,SAAU2I,GAElBA,IAAmB,IAAnBA,EAAKxC,YAK0B,IAA/BynC,GAAUjwC,KAAKgL,EAAKhI,OAAiB,CAEnCotC,IAAAA,EAAOplC,EAAKhI,MAAMI,QAAQ8sC,GAAQ,IAElCE,GAAQA,EAAKz0C,OAAS,QAAmBwD,IAAd+iB,EAAIkuB,KAAoD,IAA7BluB,EAAI5a,eAAe8oC,IAC3EplC,EAAKvD,IAAIya,EAAIkuB,GAAO,QAAUA,EAAM1nC,OAMxC2nC,GAAUF,GAGVG,GAAW,CAAC,YAAa,SAAU,SAAU,wCAAyC,6CAA8C,6BAA8B,mDAAoD,wBAAyB,sBAAuB,yBAA0B,OAAQ,QAAS,SAAU,SAAU,YAAa,YAAa,oBAAqB,aAAc,qBAAsB,qBAAsB,SAE9aC,GAAa,CAAC,gBAAiB,8CAA+C,iBAAkB,UAAW,mBAAoB,UAAW,4BAA6B,WAAY,UAAW,QAAS,qBAAsB,SAAU,gBAC3O,kBAAmB,mBAAoB,gCAAiC,cAAe,aAAc,uCAAwC,SAAU,4BACnJC,GAAa,CACfD,WAAYA,GACZD,SAAUA,IAGRG,GAAY,CAAC,cAAe,UAAW,QAAS,QAAS,SAAU,QAAS,UAAW,WACvFC,GAAY,CAAC,MAAO,OAAQ,iBAAkB,OAC9CC,GAAc,CAAC,KAAM,OAGrBC,GAAc,SAAqBhvC,EAAG8G,GACpC9G,GAAAA,EAAE8F,KAAKmU,OAASja,EAAE8F,KAAKyC,QAAS,CAC9B7J,IAAAA,EAAMsB,EAAEoB,MAERpB,GAAAA,EAAE8F,KAAKoU,UAAYla,EAAE8F,KAAKmB,OAC5B,OAIEvI,GAAAA,EAAI3E,QAAU,EAEhB,YADAiG,EAAE6F,IAAI,WAAY,iBAAkBiB,GAKlC+nC,GAAAA,GAAU5+B,KAAK,SAAUpK,GACpB7F,OAAAA,EAAE8F,KAAKD,KAEd,OAIE+oC,GAAAA,GAAWF,SAASz+B,KAAK,SAAU7K,GAC9BA,OAAAA,EAAIhH,KAAKM,KAGhB,YADAsB,EAAE6F,IAAI,SAAU,eAAgBiB,GAK9B8nC,GAAAA,GAAWD,WAAW1+B,KAAK,SAAU7K,GAChCA,OAAAA,EAAIhH,KAAKM,KAGhB,YADAsB,EAAE6F,IAAI,WAAY,iBAAkBiB,GAKlC,IAAmB,IAAnB,KAAK1I,KAAKM,GAAe,CAEvBowC,GAAAA,GAAU7+B,KAAK,SAAU7K,GACpBA,OAAAA,EAAIhH,KAAKM,KAEhB,OAIF,YADAsB,EAAE6F,IAAI,SAAU,kBAAmBiB,GAKjCioC,GAAAA,GAAY9+B,KAAK,SAAU7K,GACtBA,OAAAA,EAAIhH,KAAKM,KAEhB,OAGFsB,EAAE6F,IAAI,WAAY,oBAAqBiB,KAIvCmoC,GAAaD,GAIbE,GAAW,CAAC,UAAW,iBAAkB,SAAU,UAAW,WAAY,SAAU,WAAY,UAAW,OAAQ,QAAS,aAAc,cAAe,YAAa,YAAa,WAAY,WAAY,OAAQ,SAAU,QAAS,OAAQ,SAAU,UAAW,cAAe,WAAY,mBAAoB,SAAU,OAAQ,SAAU,UAAW,OAAQ,YAAa,SAAU,eAAgB,SAAU,YAAa,QAAS,YAAa,SAAU,SAAU,SAAU,WAAY,OAAQ,KAAM,YAAa,SAAU,aAAc,UAAW,aAAc,YAAa,iBAAkB,YAAa,UAAW,gBAAiB,YAAa,gBAAiB,aAAc,UAAW,aAAc,aAAc,cAAe,QAAS,OAAQ,UAAW,OAAQ,aAAc,OAAQ,cAAe,aAAc,mBAAoB,cAAe,SAAU,cAAe,cAAe,WAAY,WAAY,YAAa,SAAU,WAAY,cAAe,SAAU,WAAY,aAAc,cAAe,gBAAiB,SAAU,OAAQ,eAAgB,UAAW,aAAc,YAAa,KAAM,aAAc,OAAQ,MAAO,UAAW,QAAS,aAAc,QAAS,QAAS,mBAAoB,SAAU,WAAY,WAAY,QAAS,SAAU,MAAO,aAAc,WAAY,YAAa,0BAA2B,aAAc,YAAa,gBAAiB,aAAc,aAAc,cAAe,YAAa,UAAW,aAAc,OACv7C,kBAAmB,UAAW,kBAAmB,yBAA0B,WAAY,WAAY,aAAc,SAAU,YAAa,UAAW,QAAS,WAAY,sBAAuB,YAAa,WAAY,WAAY,SAAU,QAAS,SAAU,QAAS,SAC1Q,OAAQ,eAAgB,cAAe,SAAU,MAAO,UAAW,YAAa,eAAgB,WAAY,cAC5G,iBAAkB,SAAU,YAAa,aAAc,iBAAkB,kBAAmB,QAAS,MAAO,SAAU,cAAe,OAAQ,QAAS,QAAS,cAAe,UAAW,QAAS,qBAAsB,4BAA6B,UAAW,YAAa,aAAc,cAAe,UAAW,SAAU,aAAc,UAAW,WAAY,cAAe,UAAW,UAAW,OAAQ,WAAY,eAAgB,mBAAoB,iBAAkB,eAAgB,WAAY,UAAW,qBAAsB,YAAa,aAAc,QAAS,WAAY,KAAM,QAAS,aAAc,YAAa,WACtmBrM,GAAgBqM,GAASvtC,OAAO,SAAUpC,EAAGb,GAExCa,OADPA,EAAEb,GAAO,OACFa,GACN,IAEC4vC,GAAW,SAAkBnvC,GAE3B,QAACA,EAAE8F,KAAKmU,SAKRja,EAAE8F,KAAKsV,SAAWpb,EAAE8F,KAAKspC,OAASpvC,EAAE8F,KAAKoD,gBAKzClJ,EAAE8F,KAAKiV,cAAgB/a,EAAE8F,KAAKyC,SAAWvI,EAAE8F,KAAK4U,OAAS1a,EAAEsD,eAO7D+rC,GAAU,SAAiB/iC,EAAOxF,GAC/B,IAAA,IAAIhN,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,GAAK,EAAG,CACpCkG,IAAAA,EAAIsM,EAAMxS,GAEV+oC,QAA2BtlC,IAA3BslC,GAAc7iC,EAAEoB,SAAkE,IAA1CyhC,GAAcn9B,eAAe1F,EAAEoB,OAAiB,CAEtF4L,IAAAA,EAAWV,EAAMxS,EAAI,GAErBkT,QAAazP,IAAbyP,IAAiD,IAAvBmiC,GAASniC,GAAoB,CACzDA,EAASlB,QAAQ,eAAgB,aAAchF,GAC/C9G,EAAE8L,QAAQ,eAAgB,aAAchF,GACxC,SAIE8mC,IAAAA,EAAWthC,EAAMxS,EAAI,GAErB8zC,QAAarwC,IAAbqwC,GAA6C,OAAnBA,EAASxsC,OACjCkL,EAAMxS,EAAI,IAAMq1C,GAAS7iC,EAAMxS,EAAI,IAAK,CAC1CkG,EAAE8L,QAAQ,eAAgB,gBAAiBhF,GAC3C8mC,EAAS9hC,QAAQ,eAAgB,gBAAiBhF,GAClDwF,EAAMxS,EAAI,GAAGgS,QAAQ,eAAgB,gBAAiBhF,GACtD,aAONwoC,GAAmBD,GAEnBE,GAAqB,iBACrBC,GAAkB,sBAClBC,GAAgB,CAClBjwC,GAAG,EACHkwC,GAAG,GAGDC,GAAc,SAAmBvmC,EAAMtC,GACrCpI,IAAAA,EAAM0K,EAAK1H,QAEX0H,QAAAA,EAAKtD,KAAKyC,UAQVzB,EAAMmO,MAAMvW,IAIT0K,EAAKnI,aAIV2uC,GAAe,SAAsBtjC,EAAOxF,GAC9CwF,EAAM7L,QAAQ,SAAU2I,IAES,IAA3BA,EAAKtD,KAAKsW,gBAK0B,IAApCozB,GAAgBpxC,KAAKgL,EAAKzK,OAC5ByK,EAAKvD,IAAI,UAAW,iBAAkBiB,GAIpCsC,EAAK1F,eAAiBisC,GAAYvmC,EAAMtC,IAC1CsC,EAAKvD,IAAI,UAAW,eAAgBiB,GACpCsC,EAAKvD,IAAI,OAAQ,gBAAiBiB,KACxB2oC,GAAc/pC,eAAe0D,EAAKzK,OAAS4wC,GAAmBnxC,KAAKgL,EAAKzK,QAClFyK,EAAKvD,IAAI,UAAW,qBAAsBiB,GAC1CsC,EAAKvD,IAAI,OAAQ,mBAAoBiB,IAInCsC,EAAKtD,KAAKiV,cAAgB3R,EAAKzK,KAAK5E,QAAU,GAChDqP,EAAKvD,IAAI,UAAW,cAAeiB,GAGjCsC,EAAKtD,KAAKiV,cAAgB3R,EAAK1F,eAAiB0F,EAAKzK,KAAK5E,QAAU,GACtEqP,EAAKvD,IAAI,UAAW,mBAAoBiB,OAK1C+oC,GAAcD,GAEdE,GAAO,CACTC,WAAY/B,GACJI,KAAAA,GACRI,KAAMC,GACN/tB,OAAQuuB,GACRpM,cAAeyM,GACf7mC,SAAUonC,IAGRG,GAAY,SAAmBjhC,EAAKzC,GAClCxF,IAAAA,EAAQiI,EAAIjI,MAqBTiI,OAnBP+gC,GAAKC,WAAWzjC,EAAOxF,GAEvBgpC,GAAI,KAAS/gC,GAEb+gC,GAAKtB,KAAKliC,EAAOxF,GAEjBwF,EAAM7L,QAAQ,SAAUT,IACF,IAAhBA,EAAE4G,WACJ5G,EAAE6F,IAAI,OAAQ,gBAAiBkJ,EAAIjI,SAIvCgpC,GAAKjN,cAAcv2B,EAAOxF,GAE1BgpC,GAAKrnC,SAAS6D,EAAOxF,GAErBwF,EAAM7L,QAAQ,SAAUT,GACtB8vC,GAAKpvB,OAAO1gB,EAAG+O,EAAIjI,SAEdiI,GAGLkhC,GAAeD,GAEfE,GAAc,OACdC,GAAe,CACR,QAAA,CAAC,OAAQ,OAClBC,KAAM,CAAC,OAAQ,OACN,QAAA,CAAC,MAAO,OACjBC,KAAM,CAAC,MAAO,OACdC,OAAQ,CAAC,MAAO,OACN,SAAA,CAAC,SAAU,OACrBC,KAAM,CAAC,KAAM,OACbC,IAAK,CAAC,KAAM,QAIVC,GAAS,SAAgBrnC,EAAM4G,GAC7B1D,IAAAA,EAAQ0D,EAAO1D,QACfjH,EAAQiH,EAAMrI,QAAQmF,GAGtBsnC,EAFSpkC,EAAMrO,MAAM,EAAGoH,GAEV4K,KAAK,SAAUjQ,GACxBA,OAAAA,EAAE8F,KAAKmU,OAGZy2B,OAAAA,GAAQA,EAAK5qC,KAAKmB,OACb,CAAC,MAAO,OAGV,CAAC,KAAM,QAGZ0pC,GAAgB,SAAuBvnC,EAAM4G,GAE3CmgC,OAA4C,IAA5CA,GAAazqC,eAAe0D,EAAKhI,OAC5B+uC,GAAa/mC,EAAKhI,OAIR,UAAfgI,EAAKhI,OAAoC,SAAfgI,EAAKhI,MAC1BqvC,GAAOrnC,EAAM4G,IAIe,IAAjCkgC,GAAY9xC,KAAKgL,EAAKhI,OAEjB,CADIgI,EAAKhI,MAAMI,QAAQ0uC,GAAa,IAC7B,OAGT,MAGLU,GAAcD,GAEdnQ,GAAc,0GAEdqQ,GAAO,CACTC,GAAI,OACJC,GAAI,OACJC,GAAI,MACJpxC,EAAG,KACI,MAAA,OAGLqxC,GAAkB,SAAyB7nC,GACzC23B,IAAAA,EAAQ33B,EAAKzK,KAAKuP,MAAMsyB,IAExBO,OAAU,OAAVA,EACK,KAGL8P,GAAKnrC,eAAeq7B,EAAM,IACrB,CAACA,EAAM,GAAI8P,GAAK9P,EAAM,KAGxB,MAGLmQ,GAAYD,GAEZE,GAAe,CACjBC,MAAO,CAAC,OAAQ,MAChBC,MAAO,CAAC,QAAS,MACjBC,GAAI,CAAC,IAAK,MACVC,KAAM,CAAC,IAAK,OACZC,IAAK,CAAC,IAAK,QACXC,KAAM,CAAC,IAAK,QACD,UAAA,CAAC,QAAS,OACrBC,OAAQ,CAAC,QAAS,OACR,SAAA,CAAC,OAAQ,OACnBC,MAAO,CAAC,OAAQ,OAGhBC,KAAM,CAAC,MAAO,OACdC,MAAO,CAAC,OAAQ,OAGhBC,MAAO,CAAC,KAAM,MAAO,QACrBC,IAAK,CAAC,KAAM,QAAS,QACrBC,IAAK,CAAC,MAAO,KAAM,MACnBC,IAAK,CAAC,KAAM,OAAQ,QACpBC,IAAK,CAAC,KAAM,KAAM,UAClBC,IAAK,CAAC,KAAM,KAAM,WAClBC,IAAK,CAAC,QAAS,IAAK,WACpBC,GAAI,CAAC,QAAS,OACdC,KAAM,CAAC,KAAM,OACR,IAAA,CAAC,OAGJC,GAAkB,SAAyBnpC,GAEzC+nC,OAAAA,GAAazrC,eAAe0D,EAAKhI,OAC5B+vC,GAAa/nC,EAAKhI,OAGpB,MAGLoxC,GAAgBD,GAEhBE,GAAiB,+FACjBC,GAAU,CACZC,MAAM,EACN5G,OAAO,GAGL6G,GAAe,SAAsBxpC,EAAMoD,GAEzCpD,GAAAA,EAAKtD,KAAKoD,WACL,OAAA,EAILE,GAAAA,EAAKtD,KAAKsV,SAAWhS,EAAKtD,KAAKwX,aAC1B,OAAA,EAGLo1B,GAAAA,GAAQhtC,eAAe0D,EAAK1H,SACvB,OAAA,EAILksC,IAAAA,EAAWphC,EAAKC,IAAIrD,EAAK1L,MAEzB,IAACkwC,EACI,OAAA,EAILA,GAAAA,EAAS9nC,KAAKqB,KAEZymC,QAAAA,EAAS9nC,KAAKuB,cAKdumC,EAAS9nC,KAAK2B,aAQhBmmC,GAAAA,EAAS9nC,KAAKmU,KACT,OAAA,EAIL44B,IAAAA,EAAUrmC,EAAKC,IAAImhC,EAASlwC,MAE5Bm1C,SAAAA,IAAWA,EAAQ/sC,KAAKmU,MAAS44B,EAAQ/sC,KAAKsV,WAK9CwyB,EAAS9nC,KAAK4W,WAAakxB,EAAS9nC,KAAKiX,QAAU6wB,EAAS9nC,KAAKqB,MAC5D,IAMP2rC,GAAQ,SAAe1pC,EAAM4G,GAC3B1D,IAAAA,EAAQ0D,EAAO1D,QACfjH,EAAQiH,EAAMrI,QAAQmF,GAGnB9G,OAFKgK,EAAMrO,MAAMoH,EAAQ,EAAGA,EAAQ,GAE9B4K,KAAK,SAAUjQ,GACnBA,OAAAA,EAAE8F,KAAKyB,aAIdwrC,GAAkB,SAAyB3pC,EAAM4G,EAAQlJ,GAEvDzE,IAAAA,EAAQ+G,EAAKzK,KAAKuP,MAAMukC,IAExBpwC,GAAU,OAAVA,EAAgB,CAEduwC,IAAoC,IAApCA,GAAaxpC,EAAM4G,EAAOxD,MAErB,OADPpD,EAAKvD,IAAI,cAAe,eAAgBiB,GACjC,KAILzE,GAAU,OAAVA,EACEywC,OAAAA,GAAM1pC,EAAM4G,GACP,CAAC3N,EAAM,GAAI,OAGb,CAACA,EAAM,GAAI,MAIf,OAAA,MAGL2wC,GAAgBD,GAEhBE,GAAa,wBACbC,GAAS,CACXC,KAAK,EACLC,MAAM,GAIJC,GAAe,SAAsBjqC,EAAM4G,GACzCijC,GAAAA,GAAW70C,KAAKgL,EAAKhI,OAAQ,CAO1B,IANDwE,IAAAA,EAAOwD,EAAKhI,MAAMI,QAAQ,MAAO,IAEjC8K,EAAQ0D,EAAO1D,QACfjH,EAAQiH,EAAMrI,QAAQmF,GACtB9G,EAAQgK,EAAMrO,MAAMoH,EAAQ,EAAGA,EAAQ,GAElCvL,EAAI,EAAGA,EAAIwI,EAAMvI,OAAQD,IAAK,CACjCkG,IAAAA,EAAIsC,EAAMxI,GAEVkG,GAAAA,EAAE8F,KAAKqB,KACLnH,OAAAA,EAAE8F,KAAKyB,UACF,CAAC3B,EAAM,QAIK,IAAjBstC,GAAOttC,GACF,CAACA,EAAM,OAGT,CAACA,EAAM,SAKX,MAAA,CAACA,EAAM,SAGT,OAAA,MAGL0tC,GAAkBD,GAElBE,GAAU,2BAEVC,GAAa,SAAoBpqC,GAC/BA,IAA0B,IAA1BA,EAAKtD,KAAK4X,YACL,OAAA,KAGLqjB,IAAAA,EAAQ33B,EAAKzK,KAAKuP,MAAMqlC,IAExBxS,OAAU,OAAVA,EACK,CAACA,EAAM,GAAI,KAAMA,EAAM,IAGzB,MAGL0S,GAAYD,GAEZE,GAAgB,mHAGhBC,GAAS,CACXh0C,EAAG,KAEHR,EAAG,KAEHC,EAAG,KAEHK,EAAG,KAEHG,EAAG,KAEH5B,EAAG,KAEH41C,GAAI,MAEJ7zC,EAAG,KAEHC,EAAG,MAID6zC,GAAc,SAAqBzqC,GACjC23B,IAAAA,EAAQ33B,EAAKzK,KAAKuP,MAAMwlC,IAExB3S,GAAU,OAAVA,IAAsD,IAApC4S,GAAOjuC,eAAeq7B,EAAM,IACzC,OAAA,KAGLnkC,IAAAA,EAAM,CAAC+2C,GAAO5S,EAAM,IAAKA,EAAM,IAE/BnkC,OAAAA,EAAI,IAAMA,EAAI,GACTA,EAGF,MAGLk3C,GAAYD,GAEZE,GAAW,WAEXC,GAAe,SAAsB3xC,EAAO0M,GAE1CiB,IAAAA,EAAS0J,GAAarX,EAAM1B,KAAK,KAAMoO,EAAIjI,MAAOiI,EAAIvC,QAAQ,GAE9DF,EAAQ0D,EAAO1D,QAgBZ0D,OAfP0zB,GAAWp3B,EAAOyC,EAAIjI,OAEtBwF,EAAM7L,QAAQ,SAAUT,GACtBA,EAAEgF,SAAWhF,EAAErB,KACfqB,EAAErB,KAAO,GACTqB,EAAEoB,MAAQ,GAEVpB,EAAEmC,IAAM,GACRnC,EAAEoC,KAAO,GAEL2xC,GAAS31C,KAAK4B,EAAEgF,YAClBhF,EAAE8F,KAAKoO,QAAS,EAChBlU,EAAE8F,KAAKqW,UAAW,KAGfnM,GAGL+vB,GAAe,SAAsBhxB,GACnCjI,IAAAA,EAAQiI,EAAIjI,MA8BTiI,OA7BPA,EAAIH,KAAKnO,QAAQ,SAAUpF,GAGpB,IAFDiR,IAAAA,EAAQjR,EAAEiR,QAELxS,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,GAAK,EAAG,CACpCsP,IAAAA,EAAOkD,EAAMxS,GACbuI,EAAQuuC,GAAYxnC,EAAM/N,GAQ1BgH,GAAU,QAFdA,GADAA,GADAA,GADAA,GADAA,GADAA,EAAQA,GAAS6uC,GAAU9nC,KACVopC,GAAcppC,KACd4pC,GAAc5pC,EAAM/N,EAAGyL,KACvBwsC,GAAgBlqC,EAAM/N,KACtBo4C,GAAUrqC,KACV0qC,GAAU1qC,IAEP,CACd0F,IAAAA,EAAYklC,GAAa3xC,EAAO0M,IAEN,IAA1B1T,EAAEkb,IAAI,iBACRxH,EAAIlC,UAAU,CAACiC,IAAYjJ,IAAI,eAIjBiJ,EAAUxC,MAAM,GACtB3N,KAAOyK,EAAKzK,KAEVtD,EAAEwR,UAAUzD,EAAK9D,GAAI,EAAGyJ,EAAIvC,QAClChL,QAAQsN,EAAWC,GAAK,OAI7BA,GAGLklC,GAAkBlU,GAElBmU,GAAU,SAAiBnlC,EAAKvM,GAC9B5F,IAAAA,EAAMmS,EAAI0pB,OAAOxjB,MAAMzS,IAAS,GAI7BuM,OAHPnS,EAAMA,EAAImQ,IAAI,SAAUjT,GACfiV,OAAAA,EAAIH,KAAK9U,KAEXiV,EAAIlC,UAAUjQ,IAGnBu3C,GAAS,SAAgBplC,EAAKlJ,GAC5BjJ,IAAAA,EAAMmS,EAAI0pB,OAAO3yB,KAAKD,IAAQ,GAI3BkJ,OAHPnS,EAAMA,EAAImQ,IAAI,SAAUjT,GACfiV,OAAAA,EAAIH,KAAK9U,KAEXiV,EAAIlC,UAAUjQ,IAInBw3C,GAAiB,SAAwBrlC,GAEvCnP,IAAAA,EAAIs0C,GAAQnlC,EAAK,QAoCdA,OAnCPnP,EAAEsO,MAAM,gBAAgBmmC,MAAM,+DAA+DxuC,IAAI,SAAU,gBAE3GjG,EAAIu0C,GAAOplC,EAAK,cACdb,MAAM,2BAA2BmmC,MAAM,+BAA+B/nC,MAAM,GAAGzG,IAAI,OAAQ,cAE7FjG,EAAIu0C,GAAOplC,EAAK,cACdb,MAAM,iCAAiC2qB,KAAK,gBAAgBA,KAAK,YAAY7rB,WAAWnH,IAAI,YAAa,mBAG3GjG,GADAA,EAAIu0C,GAAOplC,EAAK,UACVb,MAAM,yBAEN7L,SACqB,IAArBzC,EAAE2W,IAAI,WACR3W,EAAE0M,MAAM,GAAGzG,IAAI,WAAY,oBAE3BjG,EAAE0M,MAAM,GAAGzG,IAAI,SAAU,uBAK7BkJ,EAAIb,MAAM,mBAAmBrI,IAAI,aAAc,UAE/CjG,EAAIu0C,GAAOplC,EAAK,WACdb,MAAM,qCAAqCkI,IAAI,UAAUvQ,IAAI,YAAa,cAE5EkJ,EAAIb,MAAM,sCAAsC2qB,KAAK,yCAAyC7rB,WAAWnH,IAAI,QAAS,YAItHjG,GADAA,EAAIu0C,GAAOplC,EAAK,eACVb,MAAM,4BAA6B,IAElCkD,WAAW,6BAA6B/O,OAC7CzC,EAAEiG,IAAI,OAAQ,aAGTkJ,GAGLulC,GAAUF,GAEVG,GAAW,SAAgB33C,GAGxB,IAFD1D,IAAAA,EAAM,GAEDY,EAAI,EAAGA,EAAI8C,EAAI7C,OAAQD,IAC9BZ,EAAI0D,EAAI9C,KAAM,EAGTM,OAAAA,OAAOoG,KAAKtH,IAGjBs7C,GAAUD,GAGV3lC,GAAO,CACX,CACEV,MAAO,WACPrI,IAAK,mBACL0E,OAAQ,SAEV,CACE2D,MAAO,MACPrI,IAAK,iBACL0E,OAAQ,OAEV,CACE2D,MAAO,qDACPrI,IAAK,6BACL0E,OAAQ,oBAEV,CACE2D,MAAO,kCACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,iBAEV,CACE2D,MAAO,mBACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,gBAEV,CACE2D,MAAO,wBACPrI,IAAK,aACL0E,OAAQ,qBAEV,CACE2D,MAAO,eACPrI,IAAK,QACL0E,OAAQ,cACP,CACD2D,MAAO,mBACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,eAEV,CACE2D,MAAO,YACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,eAEV,CACE2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,eAEV,CACE2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,mBACP,CACD2D,MAAO,aACPrI,IAAK,8BACL0E,OAAQ,SAGV,CACE2D,MAAO,sCACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,aAEV,CACE2D,MAAO,qCACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,gBACP,CACD2D,MAAO,cACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,oBAEV,CACE2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,aAEV,CACE2D,MAAO,oBACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,oBAGV,CACE2D,MAAO,0BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,UAEV,CACE2D,MAAO,+BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,WAGV,CACE2D,MAAO,OACPrI,IAAK,eACL0E,OAAQ,gBACP,CACD2D,MAAO,gDACPoE,MAAO,EACPzM,IAAK,eACL0E,OAAQ,UAEV,CACE2D,MAAO,SACPrI,IAAK,eACL0E,OAAQ,kBACP,CACD2D,MAAO,8BACPoE,MAAO,EACPzM,IAAK,eACL0E,OAAQ,mBAGV,CACE2D,MAAO,aACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,WAEV,CACE2D,MAAO,4EACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,eACP,CACD2D,MAAO,0EACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,sBAENkqC,GAAU7lC,GAGV8lC,GAAQ,kCACRC,GAAS,CACb,CACEzmC,MAAO,qBACPrI,IAAK,UACL0E,OAAQ,eAIV,CACE2D,MAAO,qBACPrI,IAAK,UACL0E,OAAQ,eAEV,CACE2D,MAAO,cACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,WAEV,CACE2D,MAAO,0CACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,WAEV,CACE2D,MAAO,2DACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,OAEV,CACE2D,MAAO,cACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,WAGV,CACE2D,MAAO,6BACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YAEV,CACE2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,cACP,CACD2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,cACP,CACD2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,cAEV,CACE2D,MAAO,4BACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,aAEV,CACE2D,MAAO,2BACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,gBAEV,CACE2D,MAAO,yBACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,iBAEV,CACE2D,MAAO,yBACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,iBAEV,CACE2D,MAAO,wBACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,iBAEV,CACE2D,MAAO,wBACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,iBAEV,CACE2D,MAAO,mBACPrI,IAAK,OACL0E,OAAQ,kBAEV,CACE2D,MAAO,mBACPrI,IAAK,OACL0E,OAAQ,kBAEV,CACE2D,MAAO,0BACPrI,IAAK,OACL0E,OAAQ,kBAEV,CACE2D,MAAO,oBACPrI,IAAK,OACL0E,OAAQ,mBAEV,CACE2D,MAAO,2BACPrI,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,2BACPrI,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,mCACPrI,IAAK,OACL0E,OAAQ,kBAEV,CACE2D,MAAO,OAAOb,OAAOqnC,GAAO,KAC5BpiC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,WAAWb,OAAOqnC,GAAO,KAChCpiC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,OAAOb,OAAOqnC,GAAO,KAC5BpiC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,OAAOb,OAAOqnC,GAAO,KAC5BpiC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,WAAWb,OAAOqnC,GAAO,KAChCpiC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,UAAUb,OAAOqnC,GAAO,KAC/BpiC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WAEV,CACE2D,MAAO,GAAGb,OAAOqnC,GAAO,WACxB7uC,IAAK,OACL0E,OAAQ,YACP,CACD2D,MAAO,GAAGb,OAAOqnC,GAAO,UACxB7uC,IAAK,OACL0E,OAAQ,YAEV,CACE2D,MAAO,GAAGb,OAAOqnC,GAAO,gBACxB7uC,IAAK,SACL0E,OAAQ,aACR6uB,MAAM,GAER,CACElrB,MAAO,GAAGb,OAAOqnC,GAAO,uCACxB7uC,IAAK,SACL0E,OAAQ,iBAEV,CACE2D,MAAO,qBACPrI,IAAK,OACL0E,OAAQ,eAENqqC,GAAWD,GAEXE,GAAU,CAEd,CACE3mC,MAAO,+CACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,aAGV,CACE2D,MAAO,oBACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,WAEV,CACE2D,MAAO,wBACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,eAEV,CACE2D,MAAO,+BACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,WAGV,CACE2D,MAAO,kDACPrI,IAAK,aACL0E,OAAQ,aAEV,CACE2D,MAAO,6BACPrI,IAAK,aACL0E,OAAQ,kBAEV,CACE2D,MAAO,sBACPrI,IAAK,aACL0E,OAAQ,oBAEV,CACE2D,MAAO,6BACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,oBAEV,CACE2D,MAAO,6BACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,YAEV,CACE2D,MAAO,uBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,aACPrI,IAAK,OACL0E,OAAQ,aACP,CACD2D,MAAO,sDACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,aAEV,CACE2D,MAAO,sBACPrI,IAAK,OACL0E,OAAQ,YAEV,CACE2D,MAAO,UACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,SAEV,CACE2D,MAAO,oCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,kBAEV,CACE2D,MAAO,oCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,4CACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAEV,CACE2D,MAAO,oDACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,2DACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,aAEV,CACE2D,MAAO,+CACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,kCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,wCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,SAEV,CACE2D,MAAO,oCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,yBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,+BACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAEV,CACE2D,MAAO,kEACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAEV,CACE2D,MAAO,wBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,gCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,mGACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,kBAEV,CACE2D,MAAO,8CACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,gDACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,YACP,CACD2D,MAAO,6CACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,YAEV,CACE2D,MAAO,8BACPrI,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,gBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,eACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,kCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAEV,CACE2D,MAAO,kDACPrI,IAAK,OACL0E,OAAQ,SAEV,CACE2D,MAAO,6BACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,UACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WAEV,CACE2D,MAAO,8BACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAIV,CACE2D,MAAO,+BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,WAEV,CACE2D,MAAO,iCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAGNuqC,GAAe,iCACfC,GAAS,CACb,CACE7mC,MAAO,2BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,YAEV,CACE2D,MAAO,YAAYb,OAAOynC,GAAc,KACxCxiC,MAAO,EACPzM,IAAK,YACL0E,OAAQ,eAEV,CACE2D,MAAO,GAAGb,OAAOynC,GAAc,YAC/BjvC,IAAK,SACL0E,OAAQ,eAEV,CACE2D,MAAO,GAAGb,OAAOynC,GAAc,0BAC/BjvC,IAAK,SACL0E,OAAQ,eAEV,CACE2D,MAAO,0BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,sCACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,aAEV,CACE2D,MAAO,4BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,kBAEV,CACE2D,MAAO,2BACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,gBAEV,CACE2D,MAAO,mBACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,QAEV,CACE2D,MAAO,uBACPrI,IAAK,YACL0E,OAAQ,oBAEV,CACE2D,MAAO,mDACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,iBAENyqC,GAAeD,GAEfE,GAAY,CAChB,CACE/mC,MAAO,qBACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,cAEV,CACE2D,MAAO,gBACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,cAEV,CACE2D,MAAO,kBACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,UAEV,CACE2D,MAAO,cACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,YAEV,CACE2D,MAAO,eACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,aAEV,CACE2D,MAAO,uBACPrI,IAAK,SACL0E,OAAQ,eAEV,CACE2D,MAAO,gDACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,WAEV,CACE2D,MAAO,oBACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,UAGN2qC,GAAW,CAEf,CACEhnC,MAAO,wBACPrI,IAAK,cACL0E,OAAQ,eAEV,CACE2D,MAAO,6BACPrI,IAAK,cACL0E,OAAQ,qBAGV,CACE2D,MAAO,qBACPrI,IAAK,WACL0E,OAAQ,oBAEV,CACE2D,MAAO,iBACPoE,MAAO,EACPzM,IAAK,UACL0E,OAAQ,eAGV,CACE2D,MAAO,sBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,SACP,CACD2D,MAAO,uBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,aAEV,CACE2D,MAAO,0BACPrI,IAAK,QACL0E,OAAQ,eAEV,CACE2D,MAAO,yBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cACP,CACD2D,MAAO,aACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,WACP,CACD2D,MAAO,gBACPrI,IAAK,OACL0E,OAAQ,gBAEV,CACE2D,MAAO,gCACPrI,IAAK,QACL0E,OAAQ,qBAEV,CACE2D,MAAO,kCACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,eAEV,CACE2D,MAAO,wCACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,gBACP,CACD2D,MAAO,WACPrI,IAAK,QACL0E,OAAQ,WAEV,CACE2D,MAAO,sBACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,UAEV,CACE2D,MAAO,sEACPrI,IAAK,QACL0E,OAAQ,uBAEV,CACE2D,MAAO,iEACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,aAGN4qC,GAAU,+CACVC,GAAS,CAEb,CACElnC,MAAO,wBACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,aAEV,CACE2D,MAAO,wBACPoE,MAAO,EACPzM,IAAK,eACL0E,OAAQ,cAGV,CACE2D,MAAO,iDACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,kBAEV,CACE2D,MAAO,yCACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,uCACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,0EACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,kDACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,YAEV,CACE2D,MAAO,8DACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,YAEV,CACE2D,MAAO,iDACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,kBAEV,CACE2D,MAAO,yCACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,uCACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,iDACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,YAEV,CACE2D,MAAO,4BACPoE,MAAO,EACPzM,IAAK,CAAC,YAAa,QACnB0E,OAAQ,YAEV,CACE2D,MAAO,kDACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,YAEV,CACE2D,MAAO,0EACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,cAEV,CACE2D,MAAO,8DACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,YAEV,CACE2D,MAAO,sBACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,aAGV,CACE2D,MAAO,2BACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,UACP,CACD2D,MAAO,4BACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,WACP,CACD2D,MAAO,6BACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,YACP,CACD2D,MAAO,4BACPoE,MAAO,EACPzM,IAAK,cACL0E,OAAQ,WAEV,CACE2D,MAAO,8BACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,oBAGV,CACE2D,MAAO,2CACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,kBAEV,CACE2D,MAAO,8CACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,aAGV,CACE2D,MAAO,mCACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,YAEV,CACE2D,MAAO,iBACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,cAEV,CACE2D,MAAO,uFACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,gBAEV,CACE2D,MAAO,wBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,oBACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,YAEV,CACE2D,MAAO,sDACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cAEV,CACE2D,MAAO,gCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,UAEV,CACE2D,MAAO,qBACPoE,MAAO,EACPzM,IAAK,aACL0E,OAAQ,YAEV,CACE2D,MAAO,WAAWb,OAAO8nC,GAAS,KAClC7iC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,cACP,CACD2D,MAAO,YAAYb,OAAO8nC,GAAS,KACnC7iC,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eAEV,CACE2D,MAAO,GAAGb,OAAO8nC,GAAS,YAC1BtvC,IAAK,SACL0E,OAAQ,aAEV,CACE2D,MAAO,GAAGb,OAAO8nC,GAAS,0BAC1BtvC,IAAK,SACL0E,OAAQ,eAEV,CACE2D,MAAO,wCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eACP,CACD2D,MAAO,wCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,eACP,CACD2D,MAAO,wCACPoE,MAAO,EACPzM,IAAK,OACL0E,OAAQ,gBAEN8qC,GAAWD,GAEXxS,GAAS,kDACT0S,GAAS,CAEb,CACEpnC,MAAO,oEACPrI,IAAK,SACL0E,OAAQ,gBAEV,CACE2D,MAAO,oFACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,YAEV,CACE2D,MAAO,uGACPrI,IAAK,SACL0E,OAAQ,gBAEV,CACE2D,MAAO,iFACPrI,IAAK,SACL0E,OAAQ,mBAEV,CACE2D,MAAO,0BACPoE,MAAO,EACPzM,IAAK,QACL0E,OAAQ,oBAEV,CACE2D,MAAO,yEACPrI,IAAK,UACL0E,OAAQ,cAEV,CACE2D,MAAO,OAAOb,OAAOu1B,GAAQ,KAC7BtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YACP,CACD2D,MAAO,SAASb,OAAOu1B,GAAQ,KAC/BtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,cACP,CACD2D,MAAO,OAAOb,OAAOu1B,GAAQ,KAC7BtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YACP,CACD2D,MAAO,SAASb,OAAOu1B,GAAQ,KAC/BtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,cACP,CACD2D,MAAO,OAAOb,OAAOu1B,GAAQ,KAC7BtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YACP,CACD2D,MAAO,WAAWb,OAAOu1B,GAAQ,KACjCtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,eAEV,CACE2D,MAAO,IAAIb,OAAOu1B,GAAQ,YAC1BtwB,MAAO,EACPzM,IAAK,QACL0E,OAAQ,iBAENgrC,GAAWD,GAEXE,GAAS,CACb,CACEtnC,MAAO,oBACPrI,IAAK,eACL0E,OAAQ,eAEV,CACE2D,MAAO,oCACPrI,IAAK,eACL0E,OAAQ,eACR6uB,MAAM,GAER,CACElrB,MAAO,yBACPrI,IAAK,eACL0E,OAAQ,eAEV,CACE2D,MAAO,4BACPrI,IAAK,eACL0E,OAAQ,iBAEV,CACE2D,MAAO,0CACPrI,IAAK,eACL0E,OAAQ,aAEV,CACE2D,MAAO,iBACPoE,MAAO,EACPzM,IAAK,eACL0E,OAAQ,cACR6uB,MAAM,GAER,CACElrB,MAAO,+DACPrI,IAAK,eACL0E,OAAQ,cAEV,CACE2D,MAAO,iCACPrI,IAAK,SACL0E,OAAQ,uBAGNkrC,GAAU,sMACVC,GAAS,mCAETC,GAAS,CACb,CACEznC,MAAO,sCACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,qBACP,CACD2D,MAAO,qFACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,mBAGV,CACE2D,MAAO,4CACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,wBAEV,CACE2D,MAAO,kCACPrI,IAAK,aACL0E,OAAQ,iBACR6uB,MAAM,GACL,CACDlrB,MAAO,iCACPrI,IAAK,WACL0E,OAAQ,iBACR6uB,MAAM,GAER,CACElrB,MAAO,2GACPoE,MAAO,EACPzM,IAAK,YACL0E,OAAQ,kBAGV,CACE2D,MAAO,2CACPoE,MAAO,EACPzM,IAAK,WACL0E,OAAQ,mBAEV,CACE2D,MAAO,2BACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,mBACP,CACD2D,MAAO,uBACPrI,IAAK,SACL0E,OAAQ,oBACR6uB,MAAM,GAER,CACElrB,MAAO,qBACPrI,IAAK,SACL0E,OAAQ,oBAEV,CACE2D,MAAO,qCACPrI,IAAK,SACL0E,OAAQ,iBAEV,CACE2D,MAAO,6BACPoE,MAAO,EACPzM,IAAK,CAAC,UAAW,UACjB0E,OAAQ,UAGV,CACE2D,MAAO,qBACPrI,IAAK,SACL0E,OAAQ,oBAEV,CACE2D,MAAO,sBACPrI,IAAK,SACL0E,OAAQ,uBAEV,CACE2D,MAAO,uBACPrI,IAAK,SACL0E,OAAQ,eACR6uB,MAAM,GAER,CACElrB,MAAO,2CACPrI,IAAK,SACL0E,OAAQ,eACR6uB,MAAM,GAER,CACElrB,MAAO,wBACPoE,MAAO,EACPzM,IAAK,SACL0E,OAAQ,gBACR6uB,MAAM,GAER,CACElrB,MAAO,2BACPrI,IAAK,SACL0E,OAAQ,YACR6uB,MAAM,GAER,CACElrB,MAAO,sBACPrI,IAAK,SACL0E,OAAQ,gBAEV,CACE2D,MAAO,4BACPrI,IAAK,SACL0E,OAAQ,gBAEV,CACE2D,MAAO,kCACPrI,IAAK,SACL0E,OAAQ,sBAEV,CACE2D,MAAO,oCACPrI,IAAK,SACL0E,OAAQ,wBAEV,CACE2D,MAAO,qCACPrI,IAAK,SACL0E,OAAQ,iBAEV,CACE2D,MAAO,4BACPrI,IAAK,SACL0E,OAAQ,kBAEV,CACE2D,MAAO,sEACPrI,IAAK,SACL0E,OAAQ,cAEV,CACE2D,MAAO,GAAGb,OAAOooC,GAAS,YAC1B5vC,IAAK,SACL0E,OAAQ,YACR6uB,MAAM,GAER,CACElrB,MAAO,GAAGb,OAAOooC,GAAS,0BAC1B5vC,IAAK,SACL0E,OAAQ,cACR6uB,MAAM,GAER,CACElrB,MAAO,yDAAyDb,OAAOqoC,GAAQ,KAC/EpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,gBAEV,CACE2D,MAAO,gBAAgBb,OAAOqoC,GAAQ,KACtCpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,qBAEV,CACE2D,MAAO,IAAIb,OAAOqoC,GAAQ,uBAC1BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,oBAEV,CACE2D,MAAO,IAAIb,OAAOqoC,GAAQ,sBAC1BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,mBAEV,CACE2D,MAAO,IAAIb,OAAOqoC,GAAQ,YAC1BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,eAEV,CACE2D,MAAO,WAAWb,OAAOqoC,GAAQ,KACjCpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,eAEV,CACE2D,MAAO,YAAYb,OAAOqoC,GAAQ,KAClCpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,UAEV,CACE2D,MAAO,IAAIb,OAAOqoC,GAAQ,aAC1BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,UAEV,CACE2D,MAAO,SAASb,OAAOqoC,GAAQ,KAC/BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,cAEV,CACE2D,MAAO,SAASb,OAAOqoC,GAAQ,KAC/BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,cAEV,CACE2D,MAAO,QAAQb,OAAOqoC,GAAQ,KAC9BpjC,MAAO,EACPzM,IAAK,SACL0E,OAAQ,aAEV,CACE2D,MAAO,SAASb,OAAOqoC,GAAQ,KAC/BpjC,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YAGV,CACE2D,MAAO,SAASb,OAAOqoC,GAAQ,KAC/BpjC,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YAEV,CACE2D,MAAO,SAASb,OAAOqoC,GAAQ,KAC/BpjC,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YAEV,CACE2D,MAAO,UAAUb,OAAOqoC,GAAQ,KAChCpjC,MAAO,EACPzM,IAAK,QACL0E,OAAQ,YAEV,CACE2D,MAAO,IAAIb,OAAOqoC,GAAQ,iBAC1BpjC,MAAO,EACPzM,IAAK,QACL0E,OAAQ,WAEV,CACE2D,MAAO,cAAcb,OAAOqoC,GAAQ,KACpCpjC,MAAO,EACPzM,IAAK,QACL0E,OAAQ,cAEV,CACE2D,MAAO,uCACPrI,IAAK,SACL0E,OAAQ,kBACR6uB,MAAM,GAER,CACElrB,MAAO,sCACPrI,IAAK,SACL0E,OAAQ,iBACR6uB,MAAM,GAER,CACElrB,MAAO,+BACPrI,IAAK,UACL0E,OAAQ,kBACR6uB,MAAM,GAER,CACElrB,MAAO,iDACPrI,IAAK,SACL0E,OAAQ,uBAEV,CACE2D,MAAO,4BACPrI,IAAK,SACL0E,OAAQ,cACR6uB,MAAM,IAEJwc,GAAYD,GAEZxiC,GAAU,GAUdA,IADAA,IADAA,IADAA,IADAA,IADAA,IADAA,IADAA,IADAA,IADAA,GAAUA,GAAQ9F,OAAOonC,KACPpnC,OAAOunC,KACPvnC,OAAOwnC,KACPxnC,OAAO2nC,KACP3nC,OAAO4nC,KACP5nC,OAAO6nC,KACP7nC,OAAOgoC,KACPhoC,OAAOkoC,KACPloC,OAAOmoC,KACPnoC,OAAOuoC,IAEzB,IAAIC,GAAkB,SAAuBzwC,GACvCkzB,IAAAA,EAAW,GACXC,EAAY,GAcT,OAbPnzB,EAAI3E,QAAQ,SAAUvH,IACC,IAAjBA,EAAIuY,WAAsC,IAAjBvY,EAAIqN,gBAIjBhJ,IAAZrE,EAAI2M,KACNyyB,EAAS16B,KAAK1E,EAAI2M,UAGHtI,IAAbrE,EAAIsJ,MACN+1B,EAAU36B,KAAK1E,EAAIsJ,SAGhB,CACLsD,KAAM0uC,GAAQlc,GACdrjB,MAAOu/B,GAAQjc,KAIfud,GAAW,SAAkBl2C,GAC3By6B,IAAAA,EAAO,GAKP0b,GAAiB,IAJTn2C,EAAEwF,IAAImI,OAAO,SAAUzN,GAC1BA,YAAYvC,IAAZuC,EAAEmG,QAGDlM,OAAc,CAClBD,IAAAA,EAAI8F,EAAEwF,IAAIuL,UAAU,SAAU7Q,GACzBA,YAAYvC,IAAZuC,EAAEmG,QAEX7L,OAAOoG,KAAKZ,EAAEwF,IAAItL,GAAGmM,OAAOxF,QAAQ,SAAUN,GACxC61C,IAAAA,EAAO57C,OAAO0P,OAAO,GAAIlK,GAC7Bo2C,EAAK5wC,IAAM4wC,EAAK5wC,IAAInH,MAAM,GAC1B+3C,EAAK5wC,IAAItL,GAAKM,OAAO0P,OAAO,GAAIksC,EAAK5wC,IAAItL,IACzCk8C,EAAK5wC,IAAItL,GAAG0I,KAAOrC,SACZ61C,EAAK5wC,IAAItL,GAAGqM,gBACZ6vC,EAAK5wC,IAAItL,GAAGmM,MACnB+vC,EAAKzrC,QAAU,IAAMpK,EACrBk6B,EAAKz8B,KAAKo4C,KAIP3b,OAAAA,GAILnpB,GAAM,GACViC,GAAQ1S,QAAQ,SAAUb,GACxBA,EAAEwF,IAAMmQ,GAAS3V,EAAEsO,OACf+nC,IAAAA,EAAaH,GAASl2C,GAEtBq2C,EAAWl8C,OAAS,EACtBmX,GAAMA,GAAI7D,OAAO4oC,GAEjB/kC,GAAItT,KAAKgC,KAGbsR,GAAIzQ,QAAQ,SAAUb,GAEbA,OADPA,EAAEs2C,SAAWL,GAAgBj2C,EAAEwF,KACxBxF,IAET,IAAIu2C,GAAYjlC,GAEZklC,GAAW,SAAkBC,GAC3BA,GAAmB,IAAnBA,EAAQt8C,OACH,MAAA,GAGLb,IAAAA,EAAM,GACVm9C,EAAQ51C,QAAQ,SAAU7D,GACxBA,EAAM43C,GAAQ53C,GAET,IAAA,IAAI9C,EAAI,EAAGA,EAAI8C,EAAI7C,OAAQD,IAC9BZ,EAAI0D,EAAI9C,IAAMZ,EAAI0D,EAAI9C,KAAO,EAC7BZ,EAAI0D,EAAI9C,KAAO,IAGfgX,IAAAA,EAAM1W,OAAOoG,KAAKtH,GAOf4X,OAHPA,GAHAA,EAAMA,EAAIvD,OAAO,SAAU7N,GAClBxG,OAAAA,EAAIwG,KAAO22C,EAAQt8C,UAElBgT,IAAI,SAAU+qB,GACf5jB,OAAAA,OAAO4jB,MAKdwe,GAAS,SAAgBvnC,GAE3BonC,GAAU11C,QAAQ,SAAUb,GACtB22C,IAAAA,EAAa,GACjB32C,EAAEs2C,SAASjhC,MAAMxU,QAAQ,SAAUN,GACjCo2C,EAAW34C,KAAKmR,EAAI0pB,OAAOxjB,MAAM9U,IAAM,MAEzCP,EAAEs2C,SAASpwC,KAAKrF,QAAQ,SAAUoF,GAChC0wC,EAAW34C,KAAKmR,EAAI0pB,OAAO3yB,KAAKD,IAAQ,MAEtC2wC,IAAAA,EAAUJ,GAASG,GAEnBC,GAAmB,IAAnBA,EAAQz8C,OAARy8C,CAIA/8B,IAAAA,EAAU+8B,EAAQzpC,IAAI,SAAU1H,GAC3B0J,OAAAA,EAAIH,KAAKvJ,KAId6I,EAFSa,EAAIlC,UAAU4M,GAERvL,MAAMtO,EAAEwF,IAAKxF,EAAE0S,OAE9BpE,EAAM7L,SACO,IAAXzC,EAAEw5B,KACJlrB,EAAMpC,QAAQlM,EAAEiG,IAAKjG,EAAE2K,QAEvB2D,EAAMrI,IAAIjG,EAAEiG,IAAKjG,EAAE2K,aAMvBksC,GAAWH,GAKXI,GAAc,SAAqB3nC,GAG9BA,OAFP0nC,GAAS1nC,GACTulC,GAAQvlC,GACDA,GAGL4nC,GAAgBD,GAIhBlb,GAAS,SAAgBzsB,GACvBzC,IAAAA,EAAQyC,EAAI8oB,WAiBT9oB,OAfPA,EAAM68B,GAAQ78B,EAAKzC,GAEnByC,EAAMkhC,GAAalhC,EAAKzC,IAExByC,EAAMklC,GAAgBllC,IAElBxC,SAEJwC,EAAM4nC,GAAc5nC,IAEhBgsB,UAEJhsB,EAAIjI,MAAM2vB,QAAQh2B,QAAQ,SAAUmC,GAClCA,EAAGmM,KAEEA,GAGL6nC,GAAYpb,GAEZqb,GAAY,SAAmBC,GAE7BC,IAAAA,EAA6B,SAAUC,GACzCt8C,EAAUq8C,EAmCVD,GAjCIG,IAAAA,EAAS96C,EAAa46C,GAEjBA,SAAAA,IAGAE,OAFP19C,EAAgB,KAAMw9C,GAEfE,EAAOv6C,MAAM,KAAMD,WA2BrBs6C,OAxBPx8C,EAAaw8C,EAAe,CAAC,CAC3Bz8C,IAAK,eACLQ,MAAO,WASE,OARF+8B,KAAAA,WAAWp3B,QAAQ,SAAUT,IACJ,IAAxBA,EAAE8F,KAAKgD,cAAyB9I,EAAEtC,OACpCsC,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,MAAO,KAG7B9C,IAAAA,EAAMsB,EAAErB,KAAK6C,QAAQ,KAAM,IAC/BxB,EAAEmQ,IAAIzR,KAED,OAER,CACDpE,IAAK,aACLQ,MAAO,WAKE,OAJF+8B,KAAAA,WAAWp3B,QAAQ,SAAUT,GAChCA,EAAEoC,KAAOpC,EAAEoC,KAAKZ,QAAQ,MAAO,IAC/BxB,EAAEoC,KAAO,IAAMpC,EAAEoC,OAEZ,SAIJ20C,EAnCwB,GAkD1BD,OAZPC,EAAcz9C,UAAUonC,OAASqW,EAAcz9C,UAAU49C,aAEzDJ,EAAIx9C,UAAUuP,cAAgB,SAAU7K,GAClCkQ,IAAAA,EAAQ,KAAKA,MAAM,iBAMhB,MAJU,iBAANlQ,IACTkQ,EAAQA,EAAMzB,IAAIzO,IAGb,IAAI+4C,EAAc7oC,EAAMU,KAAM,KAAM,KAAK9H,QAG3CgwC,GAGLC,GAAgBF,GAEhBvyC,GAAY,KAEZ6yC,GAAc,SAAmBL,GAE/BM,IAAAA,EAAwB,SAAUJ,GACpCt8C,EAAU08C,EAqCVN,GAnCIG,IAAAA,EAAS96C,EAAai7C,GAEjBA,SAAAA,IAGAH,OAFP19C,EAAgB,KAAM69C,GAEfH,EAAOv6C,MAAM,KAAMD,WA6BrB26C,OA1BP78C,EAAa68C,EAAU,CAAC,CACtB98C,IAAK,eACLQ,MAAO,WAKE,OAJF+8B,KAAAA,WAAWp3B,QAAQ,SAAUT,GAC5BtB,IAAAA,EAAMsB,EAAErB,KAAK6C,QAAQ,MAAO,IAChCxB,EAAEmQ,IAAIzR,KAED,OAER,CACDpE,IAAK,aACLQ,MAAO,WAWE,OAVF+8B,KAAAA,WAAWp3B,QAAQ,SAAUT,GAC5BtB,IAAAA,EAAMsB,EAAErB,KAAK6C,QAAQ,MAAO,IAChC9C,EAAMA,EAAIF,MAAM,IAAImC,KAAK,MAEM,IAA3B2D,GAAUlG,KAAK4B,EAAEoC,QACnB1D,GAAO,KAGTsB,EAAEmQ,IAAIzR,KAED,SAIJ04C,EArCmB,GAqDrBN,OAbPM,EAAS99C,UAAUonC,OAAS0W,EAAS99C,UAAU49C,aAC/CE,EAAS99C,UAAUinC,MAAQ6W,EAAS99C,UAAU49C,aAE9CJ,EAAIx9C,UAAUmP,SAAW,SAAUzK,GAC7BkQ,IAAAA,EAAQ,KAAKA,MAAM,YAMhB,MAJU,iBAANlQ,IACTkQ,EAAQA,EAAMzB,IAAIzO,IAGb,IAAIo5C,EAASlpC,EAAMU,KAAM,KAAM,KAAK9H,QAGtCgwC,GAGLM,GAAWD,GAEXE,GAAc,SAAmBP,GAuD5BA,OArDPA,EAAIx9C,UAAUwpC,QAAU,SAAU9kC,GAE5Bs5C,IAAAA,EAAS,KAAA,GAAW,aAAajD,MAAM,uBAC1CA,MAAM,6BACNA,MAAM,iCACNA,MAAM,8BACNA,MAAM,yBACNnmC,MAAM,aACH7L,EAAQ,KAAK2+B,WAAWsW,GACxB/X,EAASl9B,EAAMq9B,aAEfM,GADJ39B,EAAQA,EAAMqO,QAAQ6uB,IACES,cAGpBuX,GAFJl1C,EAAQA,EAAMqO,QAAQsvB,IAEE,GAAO,gEAAgE9xB,MAAM,gBAGjGspC,GAFJn1C,EAAQA,EAAM4+B,YAAYsW,IAEL,GAAO,oBAAoBrpC,MAAM,QAoBlDupC,GAZJp1C,GADAA,GAFAA,GADAA,GADAA,GAFAA,EAAQA,EAAM4+B,YAAYuW,IAEZvW,YAAY,iBACZA,YAAY,cACZA,YAAY,qBAEZD,WAAW,kBACXA,WAAW,aAYLzzB,OAAO,SAAUnO,GAC5BA,OAAAA,EAAEkO,YAAc,GAAKlO,EAAE8O,MAAM,UAAUnU,QAAU,IAGtD09C,GAAAA,EAAQp1C,MAAO,CACbzC,IAAAA,EAAI63C,EAAQzW,WAAW,4BAC3B3+B,EAAQA,EAAMqO,QAAQ9Q,EAAE63B,GAAG,IAOtB,MAJU,iBAANz5B,IACTqE,EAAQA,EAAMoK,IAAIzO,IAGb,IAAI84C,EAAIz0C,EAAMuM,KAAM,KAAM,KAAK9H,QAGjCgwC,GAGLY,GAAUL,GAEVM,GAAc,SAAmBb,GAE/Bc,IAAAA,EAA4B,SAAUZ,GACxCt8C,EAAUk9C,EA0CVd,GAxCIG,IAAAA,EAAS96C,EAAay7C,GAEjBA,SAAAA,EAAahpC,EAAMzQ,EAAM2I,GAC5B8F,IAAAA,EAMGA,OAJPrT,EAAgB,KAAMq+C,IAEtBhrC,EAAQqqC,EAAOp7C,KAAK,KAAM+S,EAAMzQ,EAAM2I,IAChC+wC,WAAa,KACZjrC,EA8BFgrC,OAzBPr9C,EAAaq9C,EAAc,CAAC,CAC1Bt9C,IAAK,SACLQ,MAAO,WAmBE,OAlBF8T,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBiR,IAAAA,EAAQjR,EAAEiR,QAEVwrC,EAAcxrC,EAAM,GAAG3I,cAC3B2I,EAAM7L,QAAQ,SAAUT,EAAGlG,GAEzBkG,EAAEmQ,IAAInQ,EAAEgF,UAAYhF,EAAErB,MACtBqB,EAAEgF,cAAWzH,EAETzD,EAAIwS,EAAMvS,OAAS,GAAgB,KAAXiG,EAAEoC,OAC5BpC,EAAEoC,MAAQ,OAIV01C,GACFxrC,EAAM,GAAG7I,gBAGN,SAIJm0C,EA1CuB,GAqEzBd,OAfPA,EAAIx9C,UAAUymC,aAAe,SAAU/hC,GAEjCqE,IAAAA,EAAQ,KAAK6L,MAAM,oBAOhB,MAJU,iBAANlQ,IACTqE,EAAQA,EAAMoK,IAAIzO,IAGb,IAAI45C,EAAav1C,EAAMuM,KAAM,KAAM,KAAK9H,QAIjDgwC,EAAIx9C,UAAUy+C,SAAWjB,EAAIx9C,UAAU0+C,WACvClB,EAAIx9C,UAAUu+C,WAAaf,EAAIx9C,UAAU2+C,aAClCnB,GAGLc,GAAeD,GAEfO,GAAc,SAAmBpB,GAE/Bp0C,IAAAA,EAAQ,SAAeqM,GACrBm0B,IAAAA,EAASn0B,EAAIiyB,WAAW,aAAatwB,QAAQ,iBAAiB0F,IAAI,iBAClE+hC,EAAappC,EAAIb,MAAM,eAAgB,GACpC,MAAA,CACLg1B,OAAQA,EACRkV,YAAarpC,EAAIb,MAAM,iBACvBiqC,WAAYA,EACZE,UAAWF,EAAW5hC,IAAI,eAM1B+hC,EAAqB,SAAUtB,GACjCt8C,EAAU49C,EAuFVxB,GArFIG,IAAAA,EAAS96C,EAAam8C,GAEjBA,SAAAA,IAGArB,OAFP19C,EAAgB,KAAM++C,GAEfrB,EAAOv6C,MAAM,KAAMD,WA+ErB67C,OA5EP/9C,EAAa+9C,EAAO,CAAC,CACnBh+C,IAAK,eAGLQ,MAAO,WACE,OAAA,KAAKoT,MAAM,cAInB,CACD5T,IAAK,QACLQ,MAAO,WACE,OAAA,KAAKkmC,WAAW,aAAatwB,QAAQ,mBAI7C,CACDpW,IAAK,QACLQ,MAAO,WACE4H,OAAAA,EAAM,MAAMwgC,SAIpB,CACD5oC,IAAK,MACLQ,MAAO,SAAa4D,GAOX,OANF+B,KAAAA,QAAQ,SAAUpF,GACjB88C,IAAAA,EAAaz1C,EAAMrH,GAAG88C,WAC1BA,EAAW9oC,OAAO3Q,GAElBy5C,EAAWtgB,SAAS,GAAG5yB,eAAe,OAEjC,OAIR,CACD3K,IAAK,SACLQ,MAAO,SAAgBoT,GACd,OAAA,KAAKqqC,QAAL,GAAmBrqC,GAAOiuB,WAIlC,CACD7hC,IAAK,iBACLQ,MAAO,WACE,OAAA,KAAKyS,OAAO,SAAUwB,GACpBrM,OAAAA,EAAMqM,GAAKspC,cAGrB,CACD/9C,IAAK,iBACLQ,MAAO,WACDy9C,IAAAA,EAAQ,KAAKA,QACbC,EAAaD,EAAM9gB,GAAG8gB,EAAMx+C,OAAS,GAMlC,OAJHy+C,EAAWn2C,QAAyC,IAAhCm2C,EAAWjiC,IAAI,cACrCiiC,EAAWp2C,KAAK,MAGX,OAER,CACD9H,IAAK,oBACLQ,MAAO,WACDy9C,IAAAA,EAAQ,KAAKA,QACbC,EAAaD,EAAM9gB,GAAG8gB,EAAMx+C,OAAS,GAMlC,OAJHy+C,EAAWn2C,QAAyC,IAAhCm2C,EAAWjiC,IAAI,cACrCiiC,EAAWp2C,KAAK,KAGX,SAIJk2C,EAvFgB,GA8GlBxB,OAnBPwB,EAAMh/C,UAAU4pC,OAASoV,EAAMh/C,UAAUi/C,MAEzCzB,EAAIx9C,UAAUy8C,MAAQ,SAAU/3C,GAC1B4B,IAAAA,EAAI,KAAA,GAAW,iCAEf64C,EAAW74C,EAAEsO,MAAM,yGAAR,GAAuH,SAClIwqC,EAAU94C,EAAEsO,MAAM,gEAClByqC,EAAW/4C,EAAEsO,MAAM,sDACnB3R,EAASk8C,EAASprC,OAAOqrC,GAQtB,OANPn8C,GADAA,EAASA,EAAO8Q,OAAOsrC,IACR,GAAO,aAEL,iBAAN36C,IACTzB,EAASqD,EAAE6M,IAAIzO,IAGV,IAAIs6C,EAAM/7C,EAAOqS,KAAM,KAAM,KAAK9H,QAGpCgwC,GAGLwB,GAAQJ,GAERU,GAAW,qFAEXC,GAAY,SAAmB9pC,GAC7BA,OAAuB,IAAvBA,EAAIwH,IAAI,aAKc,IAAtBxH,EAAIwH,IAAIqiC,KAOVE,GAAcD,GAEdE,GAAe,CACjBC,KAAM,KACNC,KAAM,KACNC,SAAU,KACVC,OAAQ,KACRC,OAAQ,KACRC,MAAO,KACPC,KAAM,MAIJC,GAAc,CAChBt6C,GAAG,EACHnD,GAAG,EACHuD,GAAG,EACHE,GAAG,EACHzF,GAAG,EACH6F,GAAG,EACHC,GAAG,EACH5B,GAAG,EACH/C,GAAG,EACH6E,GAAG,EACHC,GAAG,EACHK,GAAG,GAGDo5C,GAAW,CAAC,UAChB,0BACA,SAEIC,GAAc,SAAqB1qC,GAEjCA,GAAAA,EAAIwH,IAAI,YAAcxH,EAAIwH,IAAI,UACzB,MAAA,GAILxH,GAAAA,EAAIwH,IAAI,WACH,MAAA,MAGL7X,IAAAA,EAAMqQ,EAAIpQ,KAAK,UAAU4C,OAEzBw3C,GAAAA,GAAarzC,eAAehH,GACvBq6C,OAAAA,GAAar6C,GAIlBg7C,IAAAA,EAAch7C,EAAIkM,OAAO,EAAG,GAE5BmE,GAAAA,EAAIwH,IAAI,gBAAkBgjC,GAAY7zC,eAAeg0C,GAChD,MAAA,KAIJ,IAAA,IAAI5/C,EAAI,EAAGA,EAAI0/C,GAASz/C,OAAQD,IAC/B0/C,GAAAA,GAAS1/C,GAAGsE,KAAKM,GACZ,MAAA,IAKP,MAAA,YAAYN,KAAKM,GACZ,KAGF,KAGLi7C,GAAaF,GAGbG,GAAa,CAAC,wCAAyC,6CAA8C,QAAS,SAAU,cAExHC,GAAe,CAAC,gBAAiB,8CAA+C,iBAAkB,UAAW,mBAAoB,UAAW,4BAA6B,WAAY,UAAW,QAAS,qBAAsB,SAAU,kBAAmB,mBAAoB,gCAAiC,cAAe,aAAc,uCAAwC,SAAU,4BAChYC,GAAW,CACbnL,WAAYkL,GACZnL,SAAUkL,IAGRG,GAAO,KAIPC,GAAa,SAAkBt7C,GAE7Bo7C,OAAAA,GAASnL,WAAW1+B,KAAK,SAAU7K,GAC9BA,OAAAA,EAAIhH,KAAKM,QAMK,IAAnBq7C,GAAK37C,KAAKM,OAKVo7C,GAASpL,SAASz+B,KAAK,SAAU7K,GAC5BA,OAAAA,EAAIhH,KAAKM,MAKX,QAGLu7C,GAAeD,GAEfE,GAAa,CACfC,GAAI,MACJC,IAAK,OACLC,KAAM,SACNC,GAAI,OACJxgD,EAAG,OACHuyC,IAAK,QACLkO,IAAK,OACLC,MAAO,SACPC,IAAK,OACLC,GAAI,OACJC,KAAM,SAGJC,GAAe,SAAsB7rC,GACnCrQ,IAAAA,EAAMqQ,EAAIpQ,KAAK,QAAQ4C,OAEvB24C,OAAAA,GAAWx0C,eAAehH,IAC5BqQ,EAAImsB,YAAYgf,GAAWx7C,IAAM,QACjCqQ,EAAIlJ,IAAI,aAAc,iBAKpB,KAAKzH,KAAKM,IACZA,GAAO,IACPqQ,EAAImsB,YAAYx8B,GAAK,QACrBqQ,EAAIlJ,IAAI,aAAc,kBAKxBnH,GAAO,KACPqQ,EAAImsB,YAAYx8B,GAAK,QACrBqQ,EAAIlJ,IAAI,aAAc,kBAIpBg1C,GAAiBD,GAIjBE,GAAU,SAAe/rC,GACvB+B,IAAAA,EAAM,CACRrB,KAAMV,GAGJA,GAAAA,EAAIwH,IAAI,uBAAwB,CAC9B3W,IAAAA,EAAImP,EAAIiyB,WAAW,WAAY,GACnClwB,EAAIrB,KAAO7P,EAAE63B,GAAG,GAChB3mB,EAAI1O,KAAOxC,EAAE63B,GAAG,GAGX3mB,OAAAA,GAGLiqC,GAAUD,GAEVE,GAAY,CAEdnxC,KAAM,SAAc7B,GACdhK,IAAAA,EAAI,KAEe,iBAAZgK,IACThK,EAAIgK,EACJA,EAAU,MAGZA,EAAUA,GAAW,CACnBrJ,MAAM,EACNyJ,QAAQ,EACR7G,MAAM,EACN+K,OAAO,GAELwE,IAAAA,EAAM,GAON9S,OANCyC,KAAAA,QAAQ,SAAUsO,GACjBlF,IAAAA,EAAOkF,EAAIlF,KAAK7B,GAAS,GAC7B6B,EAAKoxC,QAAUtB,GAAW5qC,GAC1B+B,EAAIlT,KAAKiM,KAGD,OAAN7L,EACK8S,EAAI9S,GAGN8S,GAITiQ,WAAY,WACNnS,IAAAA,EAAO,KAAKoC,UAAU,8DAGnBpC,OADPA,GADAA,EAAOA,EAAKvB,OAAO,KAAK+D,WAAW,2BACvBlD,MAAM,eACN5E,KAAK,UAEnBolC,SAAU,WACD,OAAA,KAAA,GAAW,YAEpBmK,UAAW,WACF,OAAA,KAAKtrC,OAAO,SAAUnO,GACpB05C,OAAAA,GAAY15C,MAGvBuhB,SAAU,SAAkBu6B,GACtBtuC,IAAAA,EAAQ,KAER+T,EAAW,KAAK7Z,MAAME,WAAW2Z,SAyB9B,OAxBFlgB,KAAAA,QAAQ,SAAUsO,GACjBA,IAAAA,EAAIwH,IAAI,aAAmC,IAArBuiC,GAAY/pC,GAAlCA,CAKAU,IAAAA,EAAOsrC,GAAQhsC,GAAKU,KACpB/Q,EAAM+Q,EAAK9Q,KAAK,WAEhB,IAAC8Q,EAAK8G,IAAI,eAAsC,IAAtB0jC,GAAav7C,MAI3CA,EAAMiiB,EAASjiB,EAAKkO,EAAM9F,OAC1B2I,EAAKjO,QAAQ9C,GAAKmH,IAAI,WAElBq1C,GAAO,CACLC,IAAAA,EAAK1rC,EAAKspB,WAAW,uBAAuB3iB,IAAI,eAEnC,IAAb+kC,EAAG94C,OACL84C,EAAGhf,aAIF,MAETj1B,WAAY,SAAoBg0C,GAC1BzkC,IAAAA,EAAS,KAETvP,EAAa,KAAKJ,MAAME,WAAWE,WA8BhC,OA7BFzG,KAAAA,QAAQ,SAAUsO,GACjBA,IAAAA,EAAIwH,IAAI,kBAAwC,IAArBuiC,GAAY/pC,GAAvCA,CAKAU,IAAAA,EAAOsrC,GAAQhsC,GAAKU,KACpB/Q,EAAM+Q,EAAK9Q,KAAK,WAEhB,IAAC8Q,EAAK8G,IAAI,aAAoC,IAAtB0jC,GAAav7C,MAIzCA,EAAMwI,EAAWxI,EAAK+X,EAAO3P,OAC7B2I,EAAKjO,QAAQ9C,GAAKmH,IAAI,aAElBq1C,GAAO,CAEL11C,IAAAA,EAAQuJ,EACRqsC,EAAMrsC,EAAIgqB,WAAW,cAErBqiB,EAAI/4C,QACNmD,EAAQ41C,GAGNH,IAAAA,EAAUtB,GAAWn0C,GACzBA,EAAMw2B,aAAaif,OAGhB,MAETL,aAAc,WAIL,OAHFn6C,KAAAA,QAAQ,SAAUrB,GACrBy7C,GAAez7C,KAEV,OAGPi8C,GAAYL,GAEZM,GAAc,SAAmBxE,GAE/ByE,IAAAA,EAAqB,SAAUvE,GACjCt8C,EAAU6gD,EAWVzE,GATIG,IAAAA,EAAS96C,EAAao/C,GAEjBA,SAAAA,IAGAtE,OAFP19C,EAAgB,KAAMgiD,GAEftE,EAAOv6C,MAAM,KAAMD,WAGrB8+C,OAAAA,EAXgB,GAyClBzE,OA1BP18C,OAAO0P,OAAOyxC,EAAMjiD,UAAW+hD,IAE/BvE,EAAIx9C,UAAU0gB,MAAQ,SAAUhc,GAE1B8tB,IAAAA,EAAO,KAAK5d,MAAM,2CAElBtO,EAAI,KAAKwW,IAAI0V,GAAMkV,WAAW,aAiB3B,OANPphC,GADAA,GAHAA,GADAA,GADAA,GAFAA,GADAA,EAAIA,EAAEyN,OAAOye,IACP5d,MAAM,iCAENkI,IAAI,aACJA,IAAI,kBACJA,IAAI,sBAGJA,IAAI,gCACJA,IAAI,oBAEO,iBAANpY,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGL,IAAIu9C,EAAM37C,EAAEgP,KAAM,KAAM,KAAK9H,QAG/BgwC,GAGLyE,GAAQD,GAERE,GAAO,KACPC,GAAQ,KAERC,GAAc,SAAmB5E,GAE/B6E,IAAAA,EAA2B,SAAU3E,GACvCt8C,EAAUihD,EA0BV7E,GAxBIG,IAAAA,EAAS96C,EAAaw/C,GAEjBA,SAAAA,IAGA1E,OAFP19C,EAAgB,KAAMoiD,GAEf1E,EAAOv6C,MAAM,KAAMD,WAkBrBk/C,OAfPphD,EAAaohD,EAAa,CAAC,CACzBrhD,IAAK,SAGLQ,MAAO,WAOE,OANF8T,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtBm8B,IAAAA,EAAQn8B,EAAEiR,MAAM,GACpBkrB,EAAMr1B,IAAMq1B,EAAMr1B,IAAIX,QAAQg6C,GAAM,IAChC7yC,IAAAA,EAAOtN,EAAE2R,WACbrE,EAAKvG,KAAOuG,EAAKvG,KAAKZ,QAAQi6C,GAAO,MAEhC,SAIJE,EA1BsB,GAgExB7E,OAnCPA,EAAIx9C,UAAU0mC,YAAc,SAAUhiC,GAChC4Q,IAAAA,EAAO,GAqBP,OApBCA,KAAAA,KAAKnO,QAAQ,SAAUpF,GAGrB,IAFDiR,IAAAA,EAAQjR,EAAEiR,QAELxS,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,GAAK,EAAG,CACpCkG,IAAAA,EAAIsM,EAAMxS,GAEV0hD,GAAAA,GAAKp9C,KAAK4B,EAAEmC,KAET,IAAA,IAAIlH,EAAInB,EAAGmB,EAAIqR,EAAMvS,OAAQkB,GAAK,EACjCwgD,GAAAA,GAAMr9C,KAAKkO,EAAMrR,GAAGmH,MAAO,CACzB/D,IAAAA,EAAMpD,EAAInB,EAAI,EAClB8U,EAAKhR,KAAKvC,EAAEwR,UAAU7M,EAAEsF,GAAIjH,IAC5BvE,EAAImB,EACJ,UAOO,iBAAN+C,GAEP4Q,EADEA,EAAK5Q,GACA,CAAC4Q,EAAK5Q,IAEN,GAGF,IAAI29C,EAAY/sC,EAAM,KAAM,KAAK9H,QAGnC,IAAI60C,EAAY/sC,EAAM,KAAM,KAAK9H,QAGnCgwC,GAGL6E,GAAcD,GAEdE,GAAc,SAAmB9E,GAE/B+E,IAAAA,EAA2B,SAAU7E,GACvCt8C,EAAUmhD,EA+BV/E,GA7BIG,IAAAA,EAAS96C,EAAa0/C,GAEjBA,SAAAA,EAAYjtC,EAAMzQ,EAAM2I,GAC3B8F,IAAAA,EAMGA,OAJPrT,EAAgB,KAAMsiD,IAEtBjvC,EAAQqqC,EAAOp7C,KAAK,KAAM+S,EAAMzQ,EAAM2I,IAChC+wC,WAAa,KACZjrC,EAmBFivC,OAdPthD,EAAashD,EAAa,CAAC,CACzBvhD,IAAK,QACLQ,MAAO,WAQE,OAPF8T,KAAAA,KAAKnO,QAAQ,SAAUpF,GACdA,EAAEiR,QACR7L,QAAQ,SAAUT,GAClBtB,IAAAA,EAAMsB,EAAErB,KAAK6C,QAAQ,MAAO,IAChCxB,EAAEmQ,IAAIzR,GAAOsB,EAAErB,UAGZ,SAIJk9C,EA/BsB,GAsDxB/E,OAXPA,EAAIx9C,UAAU2mC,YAAc,SAAUjiC,GAEhCqE,IAAAA,EAAQ,KAAK6L,MAAM,uBAMhB,MAJU,iBAANlQ,IACTqE,EAAQA,EAAMoK,IAAIzO,IAGb,IAAI69C,EAAYx5C,EAAMuM,KAAM,KAAM,KAAK9H,QAGzCgwC,GAGL+E,GAAcD,GAEdE,GAAQ,CACJ,IAAA,IAEI,IAAA,IAEL,IAAA,IAEK,IAAA,IAEA,IAAA,IAEA,IAAA,IAEA,IAAA,IAEA,IAAA,IAEA,IAAA,IAEA,IAAA,IAEF,IAAA,IAEE,IAAA,IAGA,IAAA,IAEA,IAAA,IAEA,IAAA,IAGA,IAAA,IAEL,IAAA,IAEK,IAAA,KAGRC,GAAUroC,OAAO,IAAMtZ,OAAOoG,KAAKs7C,IAAOn7C,KAAK,KAAO,KAEtDq7C,GAAc,SAAmBlF,GAE/BmF,IAAAA,EAA0B,SAAUjF,GACtCt8C,EAAUuhD,EAoBVnF,GAlBIG,IAAAA,EAAS96C,EAAa8/C,GAEjBA,SAAAA,IAGAhF,OAFP19C,EAAgB,KAAM0iD,GAEfhF,EAAOv6C,MAAM,KAAMD,WAYrBw/C,OATP1hD,EAAa0hD,EAAY,CAAC,CACxB3hD,IAAK,SAGLQ,MAAO,WACE,OAAA,SAIJmhD,EApBqB,GAiEvBnF,OA1CPA,EAAIx9C,UAAUomC,WAAa,SAAU1hC,GAC/B4Q,IAAAA,EAAO,GA0BP,OAzBCA,KAAAA,KAAKnO,QAAQ,SAAUpF,GAGrB,IAFDiR,IAAAA,EAAQjR,EAAEiR,QAELxS,EAAI,EAAGA,EAAIwS,EAAMvS,OAAQD,GAAK,EAAG,CACpCkG,IAAAA,EAAIsM,EAAMxS,GAEViiD,GAAAA,GAAQ39C,KAAK4B,EAAEmC,KAOZ,IAND4oC,IAAAA,GAAS/qC,EAAEmC,IAAI+L,MAAM6tC,KAAY,IAAI,GACrCG,EAAOJ,GAAM/Q,GAKR9vC,EAAInB,EAAGmB,EAAIqR,EAAMvS,OAAQkB,GAAK,EACjCqR,IAAiC,IAAjCA,EAAMrR,GAAGmH,KAAK6B,QAAQi4C,GAAc,CAClC79C,IAAAA,EAAMpD,EAAInB,EAAI,EAClB8U,EAAKhR,KAAKvC,EAAEwR,UAAU7M,EAAEsF,GAAIjH,IAC5BvE,EAAImB,EACJ,UAOO,iBAAN+C,GAEP4Q,EADEA,EAAK5Q,GACA,CAAC4Q,EAAK5Q,IAEN,GAGF,IAAIi+C,EAAWrtC,EAAM,KAAM,KAAK9H,QAGlC,IAAIm1C,EAAWrtC,EAAM,KAAM,KAAK9H,QAIzCgwC,EAAIx9C,UAAUimC,OAASuX,EAAIx9C,UAAUomC,WAC9BoX,GAGLmF,GAAaD,GAGbG,GAAiB,SAAsB55C,EAAQuE,GAC7Cs1C,IAAAA,EAAO75C,EAAO65C,KAId19C,EAAM09C,EAAKz9C,KAAK,UAEhBy9C,GAAAA,EAAK7lC,IAAI,eACJ7X,OAAAA,EAIL4I,IAAAA,EAAQ,KAcLR,OAZHs1C,EAAK7lC,IAAI,cACXjP,EAAQ,YACC80C,EAAK7lC,IAAI,WAClBjP,EAAQ,SACC80C,EAAK7lC,IAAI,iBAClBjP,EAAQ,eACC80C,EAAK7lC,IAAI,eAClBjP,EAAQ,aACC80C,EAAK7lC,IAAI,YAClBjP,EAAQ,SAGHR,EAAME,WAAWY,aAAalJ,EAAKoI,EAAOQ,IAG/C+0C,GAAmBF,GAKnBG,GAAW,SAAkBC,GAExB7L,OADI6L,EAAGnrC,WAAW,UAAUzI,QAOjC6zC,GAAa,SAAkBj6C,GAC7Bg6C,IAAAA,EAAKh6C,EAAO65C,KAEZG,GAAAA,EAAGhmC,IAAI,oBAAsBhU,EAAOk6C,UAAUlmC,IAAI,mBAC7C,OAAA,EAGLgmC,GAAAA,EAAGhmC,IAAI,mBAAqBhU,EAAOk6C,UAAUlmC,IAAI,kBAC5C,OAAA,EAILm6B,IAAAA,EAAO4L,GAASC,GAEhB7L,QAAAA,EAAKn6B,IAAI,qBAITm6B,EAAKn6B,IAAI,aAITm6B,EAAKn6B,IAAI,cAIN,OAGLmmC,GAAeF,GAQfG,GAAa,SAAoBp6C,EAAQuE,GACvCy1C,IAAAA,EAAKh6C,EAAO65C,KAEZ75C,IAAAA,EAAOgE,SAASlE,MAKhBE,GAAAA,EAAOk6C,UAAUp6C,MACnBE,EAAOk6C,UAAUhlB,GAAG,GAAGpoB,OAAO,YAK5BktC,GAAAA,EAAGhmC,IAAI,6BACTgmC,EAAGltC,OAAO,WADRktC,CAMAA,GAAAA,EAAGhmC,IAAI,cAAe,CACpBmL,IAAAA,EAAM26B,GAAiB95C,EAAQuE,GAGnC,OAFAy1C,EAAGrhB,YAAYxZ,GAAK,QACpB66B,EAAG1sC,QAAQ,WAKT0sC,GAAAA,EAAGhmC,IAAI,iBAAkB,CACvBqmC,IAAAA,EAAOP,GAAiB95C,EAAQuE,GAUpC,OARAy1C,EAAGrhB,YAAY0hB,GAAM,QAEjBF,GAAan6C,GACfg6C,EAAG1sC,QAAQ,UAEX0sC,EAAG1sC,QAAQ,aAOX0sC,GAAAA,EAAGhmC,IAAI,WAAY,CACjBsmC,IAAAA,EAAQR,GAAiB95C,EAAQuE,GAIrC,OAFAy1C,EAAGrhB,YAAY2hB,GAAO,QACtBN,EAAG1sC,QAAQ,OAKT6sC,GAAan6C,GACfg6C,EAAG1sC,QAAQ,YAKb0sC,EAAG1sC,QAAQ,YAITitC,GAAeH,GAGfI,GAAY,SAAmBR,GAC7Bh6C,IAAAA,EAAS,CACXy6C,OAAQT,EAAGruC,MAAM,YAEjB3H,SAAUg2C,EAAGruC,MAAM,aAEnBuuC,UAAWF,EAAGruC,MAAM,cAAckI,IAAI,uBAEtC6mC,SAAUV,EAAGruC,MAAM,aAEnBkuC,KAAMG,EAAGruC,MAAM,SAASkI,IAAI,6CAG1B,IAAC7T,EAAO65C,KAAK/5C,MAORE,OALPnI,OAAOoG,KAAK+B,GAAQ9B,QAAQ,SAAUf,GACpC6C,EAAO7C,GAAK6C,EAAO7C,GAAG0W,IAAI,OAG5B7T,EAAO65C,KAAOG,EACPh6C,EAILA,GAAAA,EAAOy6C,QAAUz6C,EAAOy6C,OAAO36C,MAAO,CACpC6L,IAAAA,EAAQ3L,EAAOy6C,OAAOr+C,KAAK,WAAa,IAExC49C,EAAGhmC,IAAIrI,KACT3L,EAAO26C,aAAc,GAIlB36C,OAAAA,GAGL46C,GAAUJ,GAIVK,GAAO,SAAc76C,GACnB86C,IAAAA,GAAM,EACN38B,EAASg8B,GAAan6C,GACtB+6C,EAAa/6C,EAAOgE,SAASlE,MAM7BE,EAAO65C,KAAKhrC,WAAW,4BAA4B/O,QACrDg7C,GAAM,GAGJnkD,IAAAA,EAAM,CACRqO,UAAW,MACXE,aAAc,KACdgU,YAAa,UACbpU,WAAY,KACZG,OAAQ,QACRG,MAAO,GACPiU,aAAc,OACdC,WAAY,QAwBP3iB,OArBK,IAARmkD,IACFnkD,EAAIuO,aAAe,KACnBvO,EAAImO,WAAa,MAGfqZ,IACFxnB,EAAIqO,UAAY,OAChBrO,EAAIuO,aAAe,MACnBvO,EAAImO,WAAa,OAGfi2C,IACFpkD,EAAIqO,WAAa,OACjBrO,EAAIuO,cAAgB,OACpBvO,EAAIuiB,YAAc,cAClBviB,EAAImO,YAAc,OAClBnO,EAAI0iB,aAAe,OAAS1iB,EAAI0iB,aAChC1iB,EAAI2iB,WAAa,OAAS3iB,EAAI2iB,WAC9B3iB,EAAIsO,OAAS,OAAStO,EAAIsO,QAGrBtO,GAGLqkD,GAASH,GAETI,GAAc,SAAmBj7C,EAAQuE,GACvCs1C,IAAAA,EAAO75C,EAAO65C,KAEdA,GAAAA,EAAK7lC,IAAI,YAAqC,OAAvB6lC,EAAKje,IAAI,WAAsB57B,EAAOk6C,UAAUlmC,IAAI,QACtEgnC,OAAAA,GAAOh7C,GAGZoC,IAAAA,EAAYpC,EAAO65C,KAAKvkB,SAAS,GAAGlzB,YACpC84C,EAAapB,GAAiB95C,EAAQuE,GAEtC,IAAC22C,EACI,MAAA,GAGL97B,IAAAA,EAAQ7a,EAAME,WAAW6Z,UAAU48B,EAAY32C,GAG/CvE,GAFJof,EAAMta,WAAao2C,EAEfl7C,EAAO06C,SAAS56C,MAAO,CACrB46C,IAAAA,EAAW16C,EAAO06C,SAASt+C,OAC3B++C,GAAsB,IAAd/4C,EAAqB,IAAM,IACvCvK,OAAOoG,KAAKmhB,GAAOlhB,QAAQ,SAAUf,GAC5BiiB,OAAAA,EAAMjiB,IAAMg+C,EAAQT,IAK3B16C,GAAAA,EAAOy6C,OAAO36C,MAAO,CACnB26C,IAAAA,EAASz6C,EAAOy6C,OAAOr+C,OAEvBg/C,GAAuB,IAAdh5C,EAAqB,IAAM,KAEb,IAAvBpC,EAAO26C,YACT9iD,OAAOoG,KAAKmhB,GAAOlhB,QAAQ,SAAUf,GAC5BiiB,OAAAA,EAAMjiB,IAAMi+C,EAASX,IAG9B5iD,OAAOoG,KAAKmhB,GAAOlhB,QAAQ,SAAUf,GAC5BiiB,OAAAA,EAAMjiB,GAAKs9C,EAASW,EAASh8B,EAAMjiB,KAM5C49C,IAAAA,EAAa/6C,EAAOgE,SAASlE,MAqB1Bsf,OAnBH27B,IACF37B,EAAMpa,UAAY,WAAaoa,EAAMta,WACrCsa,EAAMla,aAAe,YAAcka,EAAMta,WACzCsa,EAAMna,OAAS,OAASma,EAAMna,QAI3Bma,EAAMlG,cAEPkG,EAAMlG,YADJ6hC,EACkB,YAAc37B,EAAMta,WAEpB,QAAUsa,EAAMta,YAIpCi2C,IACF37B,EAAMta,WAAa,OAASsa,EAAMta,YAG7Bsa,GAGLi8B,GAAgBJ,GAEhBK,GAAY,CAEdh0C,KAAM,SAAc7B,GACd4E,IAAAA,EAAQ,KAER5O,EAAI,KAEe,iBAAZgK,IACThK,EAAIgK,EACJA,EAAU,MAGZA,EAAUA,GAAW,CACnBrJ,MAAM,EACNyJ,QAAQ,EACR7G,MAAM,EACN+K,OAAO,GAELwE,IAAAA,EAAM,GAiBN9S,OAhBCyC,KAAAA,QAAQ,SAAUpF,GACjBwO,IAAAA,EAAOxO,EAAEwO,KAAK7B,GAAS,GACvBzF,EAAS46C,GAAQ9hD,GACrBwO,EAAKk3B,MAAQ,GACb3mC,OAAOoG,KAAK+B,GAAQ9B,QAAQ,SAAUf,GAChC6C,EAAO7C,IAAwB,QAAlB6C,EAAO7C,GAAG8J,IACzBK,EAAKk3B,MAAMrhC,GAAK6C,EAAO7C,GAAGf,KAAK,UAE/BkL,EAAKk3B,MAAMrhC,GAAK6C,EAAO7C,KAG3BmK,EAAKyzC,WAAajiD,EAAEkb,IAAI,aACxB1M,EAAKwd,aAAeu2B,GAAcr7C,EAAQqK,EAAM9F,OAChDgK,EAAIlT,KAAKiM,KAGD,OAAN7L,EACK8S,EAAI9S,GAGN8S,GAIT6uB,QAAS,WACH/wB,IAAAA,EAAO,GAENnO,KAAAA,QAAQ,SAAU87C,GACjBuB,IAAAA,EAAOX,GAAQZ,GAAIS,OAEnBc,EAAKz7C,QACPuM,EAAOA,EAAKvB,OAAOywC,EAAKlvC,SAIxBhP,IAAAA,EAAI,KAAKwR,WAAW,aAajB,OAXHxR,EAAEyC,QACJuM,EAAOhP,EAAEgP,KAAKvB,OAAOuB,KAIvBhP,EAAI,KAAKoR,UAAU,cAEb3O,QACJuM,EAAOA,EAAKvB,OAAOzN,EAAEgP,OAGhB,KAAK/B,UAAU+B,IAIxB8/B,SAAU,WACJj4B,IAAAA,EAAS,KAET7H,EAAO,GAQJ,OAPFnO,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,IAEsB,IAAvCG,GAAan6C,EAAQkU,EAAO3P,QAC9B8H,EAAKhR,KAAK2+C,EAAG3tC,KAAK,MAGf,KAAK/B,UAAU+B,IAIxB+/B,WAAY,WACNh4B,IAAAA,EAAS,KAET/H,EAAO,GAQJ,OAPFnO,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,IAEsB,IAAvCG,GAAan6C,EAAQoU,EAAO7P,QAC9B8H,EAAKhR,KAAK2+C,EAAG3tC,KAAK,MAGf,KAAK/B,UAAU+B,IAIxBiS,UAAW,WACLkZ,IAAAA,EAAS,KAETx9B,EAAS,GAQNA,OAPFkE,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,GAEjB56B,EAAQi8B,GAAcr7C,EAAQw3B,EAAOjzB,OAEzCvK,EAAOqB,KAAK+jB,KAEPplB,GAITwhD,YAAa,WACP/jB,IAAAA,EAAS,KAWN,OATFv5B,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,GAEjB79C,EAAMk/C,GAAcr7C,EAAQy3B,EAAOlzB,OAAOS,UAE1C7I,GACF69C,EAAGrhB,YAAYx8B,GAAK,KAGjB,MAITs/C,eAAgB,WACVC,IAAAA,EAAS,KAkBN,OAhBFx9C,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,GAEjBrjD,EAAM0kD,GAAcr7C,EAAQ07C,EAAOn3C,OAEnCpI,EAAMxF,EAAIuO,aAEV80C,EAAGnrC,WAAW,4BAA4B/O,QAC5C3D,EAAMxF,EAAImO,YAGR3I,IACF69C,EAAGrhB,YAAYx8B,GAAK,GACpB69C,EAAG12C,IAAI,mBAGJ,MAITq4C,cAAe,WACTC,IAAAA,EAAS,KAYN,OAVF19C,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,GAEjB79C,EAAMk/C,GAAcr7C,EAAQ47C,EAAOr3C,OAAO2U,YAE1C/c,IACF69C,EAAGrhB,YAAYx8B,GAAK,GACpB69C,EAAG12C,IAAI,kBAGJ,MAIT+B,aAAc,WACRw2C,IAAAA,EAAS,KAYN,OAVF39C,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,GAEjB79C,EAAMk/C,GAAcr7C,EAAQ67C,EAAOt3C,OAAOO,WAE1C3I,IACF69C,EAAGrhB,YAAYx8B,GAAK,GACpB69C,EAAG12C,IAAI,iBAGJ,MAITw4C,SAAU,WACJC,IAAAA,EAAS,KAYN,OAVF79C,KAAAA,QAAQ,SAAU87C,GACjBh6C,IAAAA,EAAS46C,GAAQZ,GAEjB79C,EAAMk/C,GAAcr7C,EAAQ+7C,EAAOx3C,OAAOU,OAE1C9I,IACF69C,EAAGrhB,YAAYx8B,GAAK,GACpB69C,EAAG12C,IAAI,aAGJ,MAITy3C,WAAY,WACH,OAAA,KAAA,GAAW,cAIpBiB,WAAY,WACH,OAAA,KAAK1lB,KAAK,cAInB8jB,WAAY,WACN6B,IAAAA,EAAU,KASP,OAPF5vC,KAAAA,KAAKnO,QAAQ,SAAUpF,GACtB0T,IAAAA,EAAMyvC,EAAQ3xC,UAAU,CAACxR,IAEzBkH,EAAS46C,GAAQpuC,GAErB+tC,GAAav6C,EAAQwM,EAAIjI,SAEpB,MAIT23C,WAAY,WACN7+C,IAAAA,EAAI,KAAKsO,MAAM,gBAMZ,OAJHtO,EAAEyC,OACJzC,EAAEu8B,OAAO,UAGJ,KAAKA,OAAO,eAInBuiB,GAAc,SAAmB5H,GAE/B6H,IAAAA,EAAqB,SAAU3H,GACjCt8C,EAAUikD,EAWV7H,GATIG,IAAAA,EAAS96C,EAAawiD,GAEjBA,SAAAA,IAGA1H,OAFP19C,EAAgB,KAAMolD,GAEf1H,EAAOv6C,MAAM,KAAMD,WAGrBkiD,OAAAA,EAXgB,GAiDlB7H,OAlCP18C,OAAO0P,OAAO60C,EAAMrlD,UAAWukD,IAE/Bc,EAAMrlD,UAAUslD,OAASD,EAAMrlD,UAAUqjD,WAEzC7F,EAAIx9C,UAAUkiB,MAAQ,SAAUxd,GAC1BkQ,IAAAA,EAAQ,KAAKA,MAAM,mDAMnB4d,GAHJ5d,GADAA,EAAQA,EAAMkI,IAAI,cACJA,IAAI,cAGDlI,MAAM,kCAEnBtO,EAAIsO,EAAMkI,IAAI0V,GAAMkV,WAAW,aAkB5Bub,OAhBP38C,EAAIA,EAAEyN,OAAOye,IACXxiB,KAAK,UAGP1J,EAAIA,EAAC,GAAO,UAEN2W,IAAI,eACR3W,EAAIA,EAAEqhC,YAAY,cAIH,iBAANjjC,IACT4B,EAAIA,EAAE6M,IAAIzO,IAGH,IAAI2gD,EAAM/+C,EAAEgP,KAAM,KAAM,KAAK9H,QAIjCgwC,GAGL6H,GAAQD,GAERG,GAAc,SAAmB/H,GAE/BgI,IAAAA,EAAsB,SAAU9H,GAClCt8C,EAAUokD,EAWVhI,GATIG,IAAAA,EAAS96C,EAAa2iD,GAEjBA,SAAAA,IAGA7H,OAFP19C,EAAgB,KAAMulD,GAEf7H,EAAOv6C,MAAM,KAAMD,WAGrBqiD,OAAAA,EAXiB,GAyBnBhI,OAXPA,EAAIx9C,UAAU2pC,OAAS,SAAUjlC,GAC3BkQ,IAAAA,EAAQ,KAAK8yB,WAAW,aAOrB,OANP9yB,EAAQA,EAAMA,MAAM,YAEH,iBAANlQ,IACTkQ,EAAQA,EAAMzB,IAAIzO,IAGb,IAAI8gD,EAAO5wC,EAAMU,KAAM,KAAM,KAAK9H,QAGpCgwC,GAGLgI,GAASD,GAETE,GAAW,CAAChI,GAAeK,GAAUM,GAASE,GAAcU,GAAOiD,GAAOI,GAAaE,GAAaI,GAAY0C,GAAOG,IAEvHE,GAAS,SAAgBlI,GASpBA,OAPP18C,OAAOoG,KAAK4iC,IAAS3iC,QAAQ,SAAUf,GAC9Bo3C,OAAAA,EAAIx9C,UAAUoG,GAAK0jC,GAAQ1jC,KAGpCq/C,GAASt+C,QAAQ,SAAUw+C,GAClBA,OAAAA,EAAMnI,KAERA,GAGLoI,GAASF,GAETG,GAAY,CACd1iC,KAAM4lB,GACN+c,WAAYhc,IAIV0T,GAAmB,WACZA,SAAAA,EAAIloC,EAAMzQ,EAAM2I,GACnB8F,IAAAA,EAAQ,KAEZrT,EAAgB,KAAMu9C,GAEjBloC,KAAAA,KAAOA,EAEZxU,OAAOC,eAAe,KAAM,OAAQ,CAClCJ,YAAY,EACZa,MAAOqD,EACPhE,UAAU,SAGEoD,IAAVuJ,QAAgCvJ,IAATY,IACzB2I,EAAQ3I,EAAK2I,OAIf1M,OAAOC,eAAe,KAAM,QAAS,CACnCJ,YAAY,EACZa,MAAOgM,EACP3M,UAAU,IAGZC,OAAOC,eAAe,KAAM,SAAU,CACpCJ,YAAY,EACZE,UAAU,EACVW,MAAO,KAGTV,OAAOC,eAAe,KAAM,QAAS,CACnCoS,IAAK,WACIG,OAAAA,EAAMgC,KAAK7U,OAAS,KAI/BK,OAAOC,eAAe,KAAM,SAAU,CACpCoS,IAAK,WACIG,OAAAA,EAAMgC,KAAK7U,UAItBK,OAAOC,eAAe,KAAM,MAAO,CACjCoS,IAAK,WACI,MAAA,SAyBNqqC,OAlBPv8C,EAAau8C,EAAK,CAAC,CACjBx8C,IAAK,SACLQ,MAAO,WACE87C,OAAAA,GAAU,QAIlB,CACDt8C,IAAK,OACLQ,MAAO,WACD,OAAA,KAAK8T,KAAK7U,OAAS,EACd,KAAK6U,KAAK,GAAGpC,KAGf,KAAK0E,MAAMtC,KAAK,GAAGpC,SAIvBsqC,EAtEc,GA2EvBA,GAAIx9C,UAAUuT,UAAY,SAAU+B,GAM3BG,OALPH,EAAOA,EAAK7B,IAAI,SAAU1R,GACjBA,OAAAA,EAAE+Q,OAAM,KAGP,IAAI0qC,GAAIloC,EAAM,KAAM,KAAK9H,QAMrCgwC,GAAIx9C,UAAUkgB,SAAW,SAAU9a,GAC7BkQ,IAAAA,EAAO8K,GAAahb,EAAK,KAAKoI,MAAO,KAAK0F,QACvC,OAAA,KAAKK,UAAU+B,IAGxBxU,OAAO0P,OAAOgtC,GAAIx9C,UAAW6lD,GAAU1iC,MACvCriB,OAAO0P,OAAOgtC,GAAIx9C,UAAW6lD,GAAUC,YAEvCF,GAAOpI,IAEP,IAAIuI,GAAY,CACdC,MAAO,QACPC,IAAK,QACLlL,MAAO,OACP1H,KAAM,KACN6S,OAAQ,MAEVplD,OAAOoG,KAAK6+C,IAAW5+C,QAAQ,SAAUf,GAChCo3C,OAAAA,GAAIx9C,UAAUoG,GAAKo3C,GAAIx9C,UAAU+lD,GAAU3/C,MAEpD,IAAI+/C,GAAQ3I,GAER4I,GAAc,SAAqB3wC,GACjCzC,IAAAA,EAAQyC,EAAI8oB,WAET9oB,OADP20B,GAAWp3B,EAAOyC,EAAIjI,OACfiI,GAGL4wC,GAAOD,GAEX,SAASlmD,GAASomD,GAEZ94C,IAAAA,EAAQ84C,EAGRC,EAAM,WACJlhD,IAAAA,EAAOlC,UAAU1C,OAAS,QAAsBwD,IAAjBd,UAAU,GAAmBA,UAAU,GAAK,GAC3E+jB,EAAU/jB,UAAU1C,OAAS,EAAI0C,UAAU,QAAKc,EAEhDijB,GACF1Z,EAAMwa,SAASd,GAGb5R,IAAAA,EAAO8K,GAAa/a,EAAMmI,GAC1BiI,EAAM,IAAI0wC,GAAM7wC,EAAM,KAAM9H,GAEzBiI,OADPA,EAAIysB,SACGzsB,GAiEF8wC,OA5DPA,EAAI3lB,SAAW,WACTv7B,IAAAA,EAAOlC,UAAU1C,OAAS,QAAsBwD,IAAjBd,UAAU,GAAmBA,UAAU,GAAK,GAC3E+jB,EAAU/jB,UAAU1C,OAAS,EAAI0C,UAAU,QAAKc,EAChD4C,EAAI2G,EAEJ0Z,KACFrgB,EAAIA,EAAEiM,SACJ6I,MAAQ,GACV9U,EAAEmhB,SAASd,IAGT5R,IAAAA,EAAO8K,GAAa/a,EAAMwB,GAC1B4O,EAAM,IAAI0wC,GAAM7wC,EAAM,KAAMzO,GAMzB4O,OAJHyR,GACFm/B,GAAK5wC,GAGAA,GAKT8wC,EAAIb,OAAS,SAAUp8C,GAEd,OADPA,EAAG68C,GAAO34C,EAAO,KAAMmQ,GAAU5K,GAAQ8K,IAClC,MAKT0oC,EAAIlmC,SAAW,SAAU9P,GACnB+E,IAAAA,EAAOgL,GAAW/P,EAAM/C,GACrB,OAAA,IAAI24C,GAAM7wC,EAAM,KAAM9H,IAK/B+4C,EAAIzzC,MAAQ,WACH5S,OAAAA,GAASsN,EAAMsF,UAKxByzC,EAAIC,QAAU,WACRtpB,IAAAA,IAAO/5B,UAAU1C,OAAS,QAAsBwD,IAAjBd,UAAU,KAAmBA,UAAU,GAEnE,OADPqK,EAAMg5C,QAAQtpB,GACP,MAKTqpB,EAAI/4C,MAAQ,WACHA,OAAAA,GAKT+4C,EAAIE,QAAUlmC,GAEdgmC,EAAG,OAAaA,EAAIG,KACbH,EAGT,IAAI7mD,GAAMQ,GAAS,IAAIw9B,IAERh+B,GAAAA,GAAAA,QAAAA,QAAAA;;ACj3agB,aA5ChB,SAASinD,EAAAA,EAAKj4C,GAC5BA,OAAAA,EAAUA,GAAW,GACd,IAAIk4C,QAAAA,SAAUC,EAASC,GACvBC,IAAAA,EAAU,IAAIC,eACd9/C,EAAO,GACP0Q,EAAM,GACNqvC,EAAU,GAEVC,EAAAA,WAAAA,MAAAA,CACLC,GAA8B,IAAzBJ,EAAQK,OAAO,IAAI,GACxBC,WAAYN,EAAQM,WACpBD,OAAQL,EAAQK,OAChBT,IAAKI,EAAQO,YACbjiD,KAAAA,WAAYuhD,OAAAA,QAAQC,QAAQE,EAAQQ,eACpCh3C,KAAAA,WAAYq2C,OAAAA,QAAQC,QAAQtpB,KAAKn0B,MAAM29C,EAAQQ,gBAC/CC,KAAAA,WAAYZ,OAAAA,QAAQC,QAAQ,IAAIY,KAAK,CAACV,EAAQG,aAC9Cp0C,MAAOo0C,EACPD,QAAS,CACR//C,KAAAA,WAAYA,OAAAA,GACZwgD,QAAAA,WAAe9vC,OAAAA,GACfzE,IAAAA,SAAKzO,GAAKuiD,OAAAA,EAAQviD,EAAEsD,gBACpBiV,IAAAA,SAAKvY,GAAKA,OAAAA,EAAEsD,gBAAiBi/C,MAmB1BU,IAAAA,IAAMnnD,KAfXumD,EAAQ7E,KAAKxzC,EAAQjC,QAAU,MAAOk6C,GAAAA,GAEtCI,EAAQa,OAAAA,WACPb,EAAQc,wBAAwB3/C,QAAQ,+BAAA,SAAiC5B,EAAGtF,EAAKQ,GAChF0F,EAAK5C,KAAKtD,EAAMA,EAAIgH,eACpB4P,EAAItT,KAAK,CAACtD,EAAKQ,IACfylD,EAAQjmD,GAAOimD,EAAQjmD,GAAUimD,EAAQjmD,GAAAA,IAAQQ,EAAUA,IAE5DqlD,EAAQK,MAGTH,EAAQe,QAAUhB,EAElBC,EAAQgB,gBAAuC,WAArBr5C,EAAQs5C,YAElBt5C,EAAQu4C,QACvBF,EAAQkB,iBAAiBznD,EAAGkO,EAAQu4C,QAAQzmD,IAG7CumD,EAAQvyB,KAAK9lB,EAAQw5C,MAAQ,QAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,QAAA;;;;ACye/B,IAAA,EAAA,EAAA,UAAA,IAphBA,SAAA,GAGA,IAAA,EAAA,iBAAA,SAAA,UACA,QAAA,UAAA,QACA,EAAA,iBAAA,QAAA,SACA,OAAA,UAAA,OACA,EAAA,iBAAA,GAAA,EAEA,EAAA,SAAA,GACA,EAAA,SAAA,GACA,EAAA,OAAA,IAEA,EAAA,GAQA,IAAA,EAiCA,EA9BA,EAAA,WAGA,EAAA,GACA,EAAA,EACA,EAAA,GACA,EAAA,GACA,EAAA,IACA,EAAA,GACA,EAAA,IACA,EAAA,IAGA,EAAA,QACA,EAAA,eACA,EAAA,4BAGA,EAAA,CACA,SAAA,kDACA,YAAA,iDACA,gBAAA,iBAIA,EAAA,EAAA,EACA,EAAA,KAAA,MACA,EAAA,OAAA,aAaA,SAAA,EAAA,GACA,MAAA,IAAA,WAAA,EAAA,IAWA,SAAA,EAAA,EAAA,GAGA,IAFA,IAAA,EAAA,EAAA,OACA,EAAA,GACA,KACA,EAAA,GAAA,EAAA,EAAA,IAEA,OAAA,EAaA,SAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAAA,MAAA,KACA,EAAA,GAWA,OAVA,EAAA,OAAA,IAGA,EAAA,EAAA,GAAA,IACA,EAAA,EAAA,IAMA,EADA,GAFA,EAAA,EAAA,QAAA,EAAA,MACA,MAAA,KACA,GAAA,KAAA,KAiBA,SAAA,EAAA,GAMA,IALA,IAGA,EACA,EAJA,EAAA,GACA,EAAA,EACA,EAAA,EAAA,OAGA,EAAA,IACA,EAAA,EAAA,WAAA,OACA,OAAA,GAAA,OAAA,EAAA,EAGA,QAAA,OADA,EAAA,EAAA,WAAA,OAEA,EAAA,OAAA,KAAA,IAAA,KAAA,KAAA,GAAA,QAIA,EAAA,KAAA,GACA,KAGA,EAAA,KAAA,GAGA,OAAA,EAWA,SAAA,EAAA,GACA,OAAA,EAAA,EAAA,SAAA,GACA,IAAA,EAAA,GAOA,OANA,EAAA,QAEA,GAAA,GADA,GAAA,SACA,GAAA,KAAA,OACA,EAAA,MAAA,KAAA,GAEA,GAAA,EAAA,KAEA,KAAA,IAoCA,SAAA,EAAA,EAAA,GAGA,OAAA,EAAA,GAAA,IAAA,EAAA,MAAA,GAAA,IAAA,GAQA,SAAA,EAAA,EAAA,EAAA,GACA,IAAA,EAAA,EAGA,IAFA,EAAA,EAAA,EAAA,EAAA,GAAA,GAAA,EACA,GAAA,EAAA,EAAA,GACA,EAAA,EAAA,GAAA,EAAA,GAAA,EACA,EAAA,EAAA,EAAA,GAEA,OAAA,EAAA,GAAA,EAAA,GAAA,GAAA,EAAA,IAUA,SAAA,EAAA,GAEA,IAEA,EAIA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAEA,EArEA,EAsDA,EAAA,GACA,EAAA,EAAA,OAEA,EAAA,EACA,EAAA,EACA,EAAA,EAqBA,KALA,EAAA,EAAA,YAAA,IACA,IACA,EAAA,GAGA,EAAA,EAAA,EAAA,IAAA,EAEA,EAAA,WAAA,IAAA,KACA,EAAA,aAEA,EAAA,KAAA,EAAA,WAAA,IAMA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,GAAA,CAOA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,GAAA,GACA,EAAA,mBAGA,GAxGA,EAwGA,EAAA,WAAA,MAvGA,GAAA,GACA,EAAA,GAEA,EAAA,GAAA,GACA,EAAA,GAEA,EAAA,GAAA,GACA,EAAA,GAEA,IAgGA,GAAA,EAAA,GAAA,EAAA,GAAA,KACA,EAAA,YAGA,GAAA,EAAA,IAGA,GAFA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IAbA,GAAA,EAoBA,EAAA,EAAA,GADA,EAAA,EAAA,KAEA,EAAA,YAGA,GAAA,EAKA,EAAA,EAAA,EAAA,EADA,EAAA,EAAA,OAAA,EACA,GAAA,GAIA,EAAA,EAAA,GAAA,EAAA,GACA,EAAA,YAGA,GAAA,EAAA,EAAA,GACA,GAAA,EAGA,EAAA,OAAA,IAAA,EAAA,GAIA,OAAA,EAAA,GAUA,SAAA,EAAA,GACA,IAAA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EAGA,EAEA,EACA,EACA,EANA,EAAA,GAoBA,IARA,GAHA,EAAA,EAAA,IAGA,OAGA,EAAA,EACA,EAAA,EACA,EAAA,EAGA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,IACA,KACA,EAAA,KAAA,EAAA,IAeA,IAXA,EAAA,EAAA,EAAA,OAMA,GACA,EAAA,KAAA,GAIA,EAAA,GAAA,CAIA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,IAAA,GACA,EAAA,EAAA,KACA,GAAA,EAAA,IACA,EAAA,GAcA,IAPA,EAAA,EAAA,GAAA,EAAA,IADA,EAAA,EAAA,KAEA,EAAA,YAGA,IAAA,EAAA,GAAA,EACA,EAAA,EAEA,EAAA,EAAA,EAAA,IAAA,EAOA,IANA,EAAA,EAAA,IAEA,KAAA,EAAA,GACA,EAAA,YAGA,GAAA,EAAA,CAEA,IAAA,EAAA,EAAA,EAAA,IAEA,GADA,EAAA,GAAA,EAAA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,IADA,GAAA,EAKA,EAAA,EAAA,EACA,EAAA,EAAA,EACA,EAAA,KACA,EAAA,EAAA,EAAA,EAAA,EAAA,KAEA,EAAA,EAAA,EAAA,GAGA,EAAA,KAAA,EAAA,EAAA,EAAA,KACA,EAAA,EAAA,EAAA,EAAA,GAAA,GACA,EAAA,IACA,IAIA,IACA,EAGA,OAAA,EAAA,KAAA,IAuEA,GA3BA,EAAA,CAMA,QAAA,QAQA,KAAA,CACA,OAAA,EACA,OAAA,GAEA,OAAA,EACA,OAAA,EACA,QA/BA,SAAA,GACA,OAAA,EAAA,EAAA,SAAA,GACA,OAAA,EAAA,KAAA,GACA,OAAA,EAAA,GACA,KA4BA,UAnDA,SAAA,GACA,OAAA,EAAA,EAAA,SAAA,GACA,OAAA,EAAA,KAAA,GACA,EAAA,EAAA,MAAA,GAAA,eACA,MAsDA,mBAAA,GACA,iBAAA,EAAA,KACA,EAAA,IAEA,EAAA,WAAA,WACA,OAAA,SAEA,GAAA,GAAA,EACA,GAAA,OAAA,SAAA,EAEA,EAAA,QAAA,OAGA,IAAA,KAAA,EACA,EAAA,eAAA,KAAA,EAAA,GAAA,EAAA,SAKA,EAAA,SAAA,EAhhBA,CAmhBA;;ACphBA,OAAA,QAAA,CAAA,EAAA,OAAA,GAAA,WAAA,GAAA,QAAA,GAAA,QAAA,GAAA,OAAA,GAAA,UAAA,GAAA,UAAA,GAAA,OAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,UAAA,GAAA,QAAA,GAAA,SAAA,GAAA,UAAA,GAAA,OAAA,GAAA,SAAA,GAAA,QAAA,GAAA,MAAA,GAAA,UAAA,GAAA,MAAA,GAAA,SAAA,GAAA,UAAA,GAAA,QAAA,GAAA,QAAA,GAAA,QAAA,GAAA,OAAA,GAAA,YAAA,GAAA,SAAA,IAAA,QAAA,IAAA,gBAAA,IAAA,QAAA,IAAA,oBAAA,IAAA,SAAA,IAAA,QAAA,IAAA,SAAA,IAAA,UAAA,IAAA,OAAA,IAAA,UAAA,IAAA,QAAA,IAAA,OAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,OAAA,IAAA,OAAA,IAAA,OAAA,IAAA,SAAA,IAAA,OAAA,IAAA,MAAA,IAAA,QAAA,IAAA,QAAA,IAAA,oBAAA,IAAA,SAAA,IAAA,QAAA,IAAA,UAAA,IAAA,WAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,UAAA,IAAA,QAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,UAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,OAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,UAAA,IAAA,QAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,UAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,OAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,UAAA,IAAA,QAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,UAAA,IAAA,SAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,QAAA,IAAA,QAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,QAAA,IAAA,QAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,QAAA,IAAA,QAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,QAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,OAAA,IAAA,OAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,UAAA,IAAA,UAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,SAAA,IAAA,QAAA,IA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","file":"js.5bc9fd6a.js","sourceRoot":"../src","sourcesContent":["export const $renew = document.querySelector<HTMLButtonElement>('#js-renew')\nexport const $toast = document.querySelector<HTMLDivElement>('#js-toast')\nexport const $slider = document.querySelector<HTMLInputElement>('#js-slider')\nexport const $hint = document.querySelector<HTMLParagraphElement>('#js-hint')\nexport const $case = document.querySelector<HTMLInputElement>('#js-case')\nexport const $leet = document.querySelector<HTMLInputElement>('#js-leet')\nexport const $random = document.querySelector<HTMLInputElement>('#js-random')\nexport const $symbols = document.querySelector<HTMLInputElement>('#js-symbols')\nexport const $password = document.querySelector<HTMLButtonElement>(\n  '#js-password',\n)\n","import { $password, $toast } from './elements'\n\nexport const addClipboard = () => {\n  // @ts-ignore\n  navigator.permissions.query({ name: 'clipboard-write' }).then((result) => {\n    if (result.state == 'granted' || result.state == 'prompt') {\n      $password.addEventListener('click', async () => {\n        await navigator.clipboard.writeText($password.innerText)\n        $toast.classList.add('fade-in')\n        $toast.addEventListener('animationend', () => {\n          $toast.classList.remove('fade-in')\n        })\n      })\n    }\n  })\n}\n","/* compromise 13.3.1 MIT */\nfunction _typeof(obj) {\n  \"@babel/helpers - typeof\";\n\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    Object.defineProperty(target, descriptor.key, descriptor);\n  }\n}\n\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  return Constructor;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _getPrototypeOf(o) {\n  _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) {\n    return o.__proto__ || Object.getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}\n\nfunction _isNativeReflectConstruct() {\n  if (typeof Reflect === \"undefined\" || !Reflect.construct) return false;\n  if (Reflect.construct.sham) return false;\n  if (typeof Proxy === \"function\") return true;\n\n  try {\n    Date.prototype.toString.call(Reflect.construct(Date, [], function () {}));\n    return true;\n  } catch (e) {\n    return false;\n  }\n}\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (typeof call === \"object\" || typeof call === \"function\")) {\n    return call;\n  }\n\n  return _assertThisInitialized(self);\n}\n\nfunction _createSuper(Derived) {\n  var hasNativeReflectConstruct = _isNativeReflectConstruct();\n\n  return function _createSuperInternal() {\n    var Super = _getPrototypeOf(Derived),\n        result;\n\n    if (hasNativeReflectConstruct) {\n      var NewTarget = _getPrototypeOf(this).constructor;\n\n      result = Reflect.construct(Super, arguments, NewTarget);\n    } else {\n      result = Super.apply(this, arguments);\n    }\n\n    return _possibleConstructorReturn(this, result);\n  };\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n  return arr2;\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\n//this is a not-well-thought-out way to reduce our dependence on `object===object` stuff\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'.split(''); //generates a unique id for this term\n\nfunction makeId(str) {\n  str = str || '_';\n  var text = str + '-';\n\n  for (var i = 0; i < 7; i++) {\n    text += chars[Math.floor(Math.random() * chars.length)];\n  }\n\n  return text;\n}\n\nvar _id = makeId;\n\n//a hugely-ignorant, and widely subjective transliteration of latin, cryllic, greek unicode characters to english ascii.\n//approximate visual (not semantic or phonetic) relationship between unicode and ascii characters\n//http://en.wikipedia.org/wiki/List_of_Unicode_characters\n//https://docs.google.com/spreadsheet/ccc?key=0Ah46z755j7cVdFRDM1A2YVpwa1ZYWlpJM2pQZ003M0E\nvar compact = {\n  '!': '¡',\n  '?': '¿Ɂ',\n  '\"': '“”\"❝❞',\n  \"'\": '‘‛❛❜',\n  '-': '—–',\n  a: 'ªÀÁÂÃÄÅàáâãäåĀāĂăĄąǍǎǞǟǠǡǺǻȀȁȂȃȦȧȺΆΑΔΛάαλАадѦѧӐӑӒӓƛɅæ',\n  b: 'ßþƀƁƂƃƄƅɃΒβϐϦБВЪЬвъьѢѣҌҍ',\n  c: '¢©ÇçĆćĈĉĊċČčƆƇƈȻȼͻͼͽϲϹϽϾСсєҀҁҪҫ',\n  d: 'ÐĎďĐđƉƊȡƋƌǷ',\n  e: 'ÈÉÊËèéêëĒēĔĕĖėĘęĚěƎƏƐǝȄȅȆȇȨȩɆɇΈΕΞΣέεξϱϵ϶ЀЁЕЭеѐёҼҽҾҿӖӗӘәӚӛӬӭ',\n  f: 'ƑƒϜϝӺӻҒғſ',\n  g: 'ĜĝĞğĠġĢģƓǤǥǦǧǴǵ',\n  h: 'ĤĥĦħƕǶȞȟΉΗЂЊЋНнђћҢңҤҥҺһӉӊ',\n  I: 'ÌÍÎÏ',\n  i: 'ìíîïĨĩĪīĬĭĮįİıƖƗȈȉȊȋΊΐΪίιϊІЇії',\n  j: 'ĴĵǰȷɈɉϳЈј',\n  k: 'ĶķĸƘƙǨǩΚκЌЖКжкќҚқҜҝҞҟҠҡ',\n  l: 'ĹĺĻļĽľĿŀŁłƚƪǀǏǐȴȽΙӀӏ',\n  m: 'ΜϺϻМмӍӎ',\n  n: 'ÑñŃńŅņŇňŉŊŋƝƞǸǹȠȵΝΠήηϞЍИЙЛПийлпѝҊҋӅӆӢӣӤӥπ',\n  o: 'ÒÓÔÕÖØðòóôõöøŌōŎŏŐőƟƠơǑǒǪǫǬǭǾǿȌȍȎȏȪȫȬȭȮȯȰȱΌΘΟθοσόϕϘϙϬϭϴОФоѲѳӦӧӨөӪӫ',\n  p: 'ƤƿΡρϷϸϼРрҎҏÞ',\n  q: 'Ɋɋ',\n  r: 'ŔŕŖŗŘřƦȐȑȒȓɌɍЃГЯгяѓҐґ',\n  s: 'ŚśŜŝŞşŠšƧƨȘșȿЅѕ',\n  t: 'ŢţŤťŦŧƫƬƭƮȚțȶȾΓΤτϮТт',\n  u: 'µÙÚÛÜùúûüŨũŪūŬŭŮůŰűŲųƯưƱƲǓǔǕǖǗǘǙǚǛǜȔȕȖȗɄΰμυϋύ',\n  v: 'νѴѵѶѷ',\n  w: 'ŴŵƜωώϖϢϣШЩшщѡѿ',\n  x: '×ΧχϗϰХхҲҳӼӽӾӿ',\n  y: 'ÝýÿŶŷŸƳƴȲȳɎɏΎΥΫγψϒϓϔЎУучўѰѱҮүҰұӮӯӰӱӲӳ',\n  z: 'ŹźŻżŽžƩƵƶȤȥɀΖζ'\n}; //decompress data into two hashes\n\nvar unicode = {};\nObject.keys(compact).forEach(function (k) {\n  compact[k].split('').forEach(function (s) {\n    unicode[s] = k;\n  });\n});\n\nvar killUnicode = function killUnicode(str) {\n  var chars = str.split('');\n  chars.forEach(function (s, i) {\n    if (unicode[s]) {\n      chars[i] = unicode[s];\n    }\n  });\n  return chars.join('');\n};\n\nvar unicode_1 = killUnicode; // console.log(killUnicode('bjŏȒk—Ɏó'));\n\nvar periodAcronym = /([A-Z]\\.)+[A-Z]?,?$/;\nvar oneLetterAcronym = /^[A-Z]\\.,?$/;\nvar noPeriodAcronym = /[A-Z]{2,}('s|,)?$/;\nvar lowerCaseAcronym = /([a-z]\\.){2,}[a-z]\\.?$/;\n\nvar isAcronym = function isAcronym(str) {\n  //like N.D.A\n  if (periodAcronym.test(str) === true) {\n    return true;\n  } //like c.e.o\n\n\n  if (lowerCaseAcronym.test(str) === true) {\n    return true;\n  } //like 'F.'\n\n\n  if (oneLetterAcronym.test(str) === true) {\n    return true;\n  } //like NDA\n\n\n  if (noPeriodAcronym.test(str) === true) {\n    return true;\n  }\n\n  return false;\n};\n\nvar isAcronym_1 = isAcronym;\n\nvar hasSlash = /[a-z\\u00C0-\\u00FF] ?\\/ ?[a-z\\u00C0-\\u00FF]/;\n/** some basic operations on a string to reduce noise */\n\nvar clean = function clean(str) {\n  str = str || '';\n  str = str.toLowerCase();\n  str = str.trim();\n  var original = str; //(very) rough ASCII transliteration -  bjŏrk -> bjork\n\n  str = unicode_1(str); //rough handling of slashes - 'see/saw'\n\n  if (hasSlash.test(str) === true) {\n    str = str.replace(/\\/.*/, '');\n  } //#tags, @mentions\n\n\n  str = str.replace(/^[#@]/, ''); //punctuation\n\n  str = str.replace(/[,;.!?]+$/, ''); // coerce single curly quotes\n\n  str = str.replace(/[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]+/g, \"'\"); // coerce double curly quotes\n\n  str = str.replace(/[\\u0022\\u00AB\\u00BB\\u201C\\u201D\\u201E\\u201F\\u2033\\u2034\\u2036\\u2037\\u2E42\\u301D\\u301E\\u301F\\uFF02]+/g, '\"'); //coerce Unicode ellipses\n\n  str = str.replace(/\\u2026/g, '...'); //en-dash\n\n  str = str.replace(/\\u2013/g, '-'); //lookin'->looking (make it easier for conjugation)\n\n  str = str.replace(/([aeiou][ktrp])in$/, '$1ing'); //turn re-enactment to reenactment\n\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    str = str.replace('-', '');\n  } //strip leading & trailing grammatical punctuation\n\n\n  if (/^[:;]/.test(str) === false) {\n    str = str.replace(/\\.{3,}$/g, '');\n    str = str.replace(/[\",\\.!:;\\?\\)]+$/g, '');\n    str = str.replace(/^['\"\\(]+/g, '');\n  } //do this again..\n\n\n  str = str.trim(); //oh shucks,\n\n  if (str === '') {\n    str = original;\n  } //compact acronyms\n\n\n  if (isAcronym_1(str)) {\n    str = str.replace(/\\./g, '');\n  } //nice-numbers\n\n\n  str = str.replace(/([0-9]),([0-9])/g, '$1$2');\n  return str;\n};\n\nvar clean_1 = clean; // console.log(normalize('Dr. V Cooper'));\n\n/** reduced is one step further than clean */\nvar reduced = function reduced(str) {\n  // remove apostrophes\n  str = str.replace(/['’]s$/, '');\n  str = str.replace(/s['’]$/, 's');\n  return str;\n};\n\nvar reduce = reduced;\n\n//all punctuation marks, from https://en.wikipedia.org/wiki/Punctuation\n//we have slightly different rules for start/end - like #hashtags.\n\nvar startings = /^[ \\n\\t\\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’;\\/⁄·&*•^†‡°¡¿※№÷×ºª%‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿\\u0022|\\uFF02|\\u0027|\\u201C|\\u2018|\\u201F|\\u201B|\\u201E|\\u2E42|\\u201A|\\u00AB|\\u2039|\\u2035|\\u2036|\\u2037|\\u301D|\\u0060|\\u301F]+/;\nvar endings = /[ \\n\\t\\.’'\\[\\](){}⟨⟩:,،、‒–—―…!.‹›«»‐\\-?‘’;\\/⁄·&*@•^†‡°¡¿※#№÷×ºª‰+−=‱¶′″‴§~|‖¦©℗®℠™¤₳฿\\u0022|\\uFF02|\\u0027|\\u201D|\\u2019|\\u201D|\\u2019|\\u201D|\\u201D|\\u2019|\\u00BB|\\u203A|\\u2032|\\u2033|\\u2034|\\u301E|\\u00B4|\\u301E]+$/; //money = ₵¢₡₢$₫₯֏₠€ƒ₣₲₴₭₺₾ℳ₥₦₧₱₰£៛₽₹₨₪৳₸₮₩¥\n\nvar hasSlash$1 = /\\//;\nvar hasApostrophe = /['’]/;\nvar hasAcronym = /^[a-z]\\.([a-z]\\.)+/i;\nvar minusNumber = /^[-+\\.][0-9]/;\n/** turn given text into a parsed-up object\n * seperate the 'meat' of the word from the whitespace+punctuation\n */\n\nvar parseTerm = function parseTerm(str) {\n  var original = str;\n  var pre = '';\n  var post = '';\n  str = str.replace(startings, function (found) {\n    pre = found; // support '-40'\n\n    if ((pre === '-' || pre === '+' || pre === '.') && minusNumber.test(str)) {\n      pre = '';\n      return found;\n    }\n\n    return '';\n  });\n  str = str.replace(endings, function (found) {\n    post = found; // keep s-apostrophe - \"flanders'\" or \"chillin'\"\n\n    if (hasApostrophe.test(found) && /[sn]['’]$/.test(original) && hasApostrophe.test(pre) === false) {\n      post = post.replace(hasApostrophe, '');\n      return \"'\";\n    } //keep end-period in acronym\n\n\n    if (hasAcronym.test(str) === true) {\n      post = post.replace(/\\./, '');\n      return '.';\n    }\n\n    return '';\n  }); //we went too far..\n\n  if (str === '') {\n    // do a very mild parse, and hope for the best.\n    original = original.replace(/ *$/, function (after) {\n      post = after || '';\n      return '';\n    });\n    str = original;\n    pre = '';\n    post = post;\n  } // create the various forms of our text,\n\n\n  var clean = clean_1(str);\n  var parsed = {\n    text: str,\n    clean: clean,\n    reduced: reduce(clean),\n    pre: pre,\n    post: post\n  }; // support aliases for slashes\n\n  if (hasSlash$1.test(str)) {\n    str.split(hasSlash$1).forEach(function (word) {\n      parsed.alias = parsed.alias || {};\n      parsed.alias[word.trim()] = true;\n    });\n  }\n\n  return parsed;\n};\n\nvar parse = parseTerm;\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t  path: basedir,\n\t  exports: {},\n\t  require: function (path, base) {\n      return commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n    }\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nvar _01Case = createCommonjsModule(function (module, exports) {\n  var titleCase = /^[A-Z][a-z'\\u00C0-\\u00FF]/;\n  var upperCase = /^[A-Z]+s?$/;\n  /** convert all text to uppercase */\n\n  exports.toUpperCase = function () {\n    this.text = this.text.toUpperCase();\n    return this;\n  };\n  /** convert all text to lowercase */\n\n\n  exports.toLowerCase = function () {\n    this.text = this.text.toLowerCase();\n    return this;\n  };\n  /** only set the first letter to uppercase\n   * leave any existing uppercase alone\n   */\n\n\n  exports.toTitleCase = function () {\n    this.text = this.text.replace(/^ *[a-z\\u00C0-\\u00FF]/, function (x) {\n      return x.toUpperCase();\n    }); //support unicode?\n\n    return this;\n  };\n  /** if all letters are uppercase */\n\n\n  exports.isUpperCase = function () {\n    return upperCase.test(this.text);\n  };\n  /** if the first letter is uppercase, and the rest are lowercase */\n\n\n  exports.isTitleCase = function () {\n    return titleCase.test(this.text);\n  };\n\n  exports.titleCase = exports.isTitleCase;\n});\n\nvar _02Punctuation = createCommonjsModule(function (module, exports) {\n  // these methods are called with '@hasComma' in the match syntax\n  // various unicode quotation-mark formats\n  var startQuote = /(\\u0022|\\uFF02|\\u0027|\\u201C|\\u2018|\\u201F|\\u201B|\\u201E|\\u2E42|\\u201A|\\u00AB|\\u2039|\\u2035|\\u2036|\\u2037|\\u301D|\\u0060|\\u301F)/;\n  var endQuote = /(\\u0022|\\uFF02|\\u0027|\\u201D|\\u2019|\\u201D|\\u2019|\\u201D|\\u201D|\\u2019|\\u00BB|\\u203A|\\u2032|\\u2033|\\u2034|\\u301E|\\u00B4|\\u301E)/;\n  /** search the term's 'post' punctuation  */\n\n  exports.hasPost = function (punct) {\n    return this.post.indexOf(punct) !== -1;\n  };\n  /** search the term's 'pre' punctuation  */\n\n\n  exports.hasPre = function (punct) {\n    return this.pre.indexOf(punct) !== -1;\n  };\n  /** does it have a quotation symbol?  */\n\n\n  exports.hasQuote = function () {\n    return startQuote.test(this.pre) || endQuote.test(this.post);\n  };\n\n  exports.hasQuotation = exports.hasQuote;\n  /** does it have a comma?  */\n\n  exports.hasComma = function () {\n    return this.hasPost(',');\n  };\n  /** does it end in a period? */\n\n\n  exports.hasPeriod = function () {\n    return this.hasPost('.') === true && this.hasPost('...') === false;\n  };\n  /** does it end in an exclamation */\n\n\n  exports.hasExclamation = function () {\n    return this.hasPost('!');\n  };\n  /** does it end with a question mark? */\n\n\n  exports.hasQuestionMark = function () {\n    return this.hasPost('?') || this.hasPost('¿');\n  };\n  /** is there a ... at the end? */\n\n\n  exports.hasEllipses = function () {\n    return this.hasPost('..') || this.hasPost('…') || this.hasPre('..') || this.hasPre('…');\n  };\n  /** is there a semicolon after this word? */\n\n\n  exports.hasSemicolon = function () {\n    return this.hasPost(';');\n  };\n  /** is there a slash '/' in this word? */\n\n\n  exports.hasSlash = function () {\n    return /\\//.test(this.text);\n  };\n  /** a hyphen connects two words like-this */\n\n\n  exports.hasHyphen = function () {\n    var hyphen = /(-|–|—)/;\n    return hyphen.test(this.post) || hyphen.test(this.pre);\n  };\n  /** a dash separates words - like that */\n\n\n  exports.hasDash = function () {\n    var hyphen = / (-|–|—) /;\n    return hyphen.test(this.post) || hyphen.test(this.pre);\n  };\n  /** is it multiple words combinded */\n\n\n  exports.hasContraction = function () {\n    return Boolean(this.implicit);\n  };\n  /** try to sensibly put this punctuation mark into the term */\n\n\n  exports.addPunctuation = function (punct) {\n    // dont add doubles\n    if (punct === ',' || punct === ';') {\n      this.post = this.post.replace(punct, '');\n    }\n\n    this.post = punct + this.post;\n    return this;\n  };\n});\n\n//declare it up here\nvar wrapMatch = function wrapMatch() {};\n/** ignore optional/greedy logic, straight-up term match*/\n\n\nvar doesMatch = function doesMatch(t, reg, index, length) {\n  // support id matches\n  if (reg.id === t.id) {\n    return true;\n  } // support '.'\n\n\n  if (reg.anything === true) {\n    return true;\n  } // support '^' (in parentheses)\n\n\n  if (reg.start === true && index !== 0) {\n    return false;\n  } // support '$' (in parentheses)\n\n\n  if (reg.end === true && index !== length - 1) {\n    return false;\n  } //support a text match\n\n\n  if (reg.word !== undefined) {\n    //match contractions\n    if (t.implicit !== null && t.implicit === reg.word) {\n      return true;\n    } // term aliases for slashes and things\n\n\n    if (t.alias !== undefined && t.alias.hasOwnProperty(reg.word)) {\n      return true;\n    } // support ~ match\n\n\n    if (reg.soft === true && reg.word === t.root) {\n      return true;\n    } //match either .clean or .text\n\n\n    return reg.word === t.clean || reg.word === t.text || reg.word === t.reduced;\n  } //support #Tag\n\n\n  if (reg.tag !== undefined) {\n    return t.tags[reg.tag] === true;\n  } //support @method\n\n\n  if (reg.method !== undefined) {\n    if (typeof t[reg.method] === 'function' && t[reg.method]() === true) {\n      return true;\n    }\n\n    return false;\n  } //support /reg/\n\n\n  if (reg.regex !== undefined) {\n    return reg.regex.test(t.clean);\n  } // support optimized (one|two)\n\n\n  if (reg.oneOf !== undefined) {\n    return reg.oneOf.hasOwnProperty(t.reduced) || reg.oneOf.hasOwnProperty(t.text);\n  } //support (one|two)\n\n\n  if (reg.choices !== undefined) {\n    // try to support && operator\n    if (reg.operator === 'and') {\n      // must match them all\n      return reg.choices.every(function (r) {\n        return wrapMatch(t, r, index, length);\n      });\n    } // or must match one\n\n\n    return reg.choices.some(function (r) {\n      return wrapMatch(t, r, index, length);\n    });\n  }\n\n  return false;\n}; // wrap result for !negative match logic\n\n\nwrapMatch = function wrapMatch(t, reg, index, length) {\n  var result = doesMatch(t, reg, index, length);\n\n  if (reg.negative === true) {\n    return !result;\n  }\n\n  return result;\n};\n\nvar _doesMatch = wrapMatch;\n\nvar boring = {};\n/** check a match object against this term */\n\nvar doesMatch_1 = function doesMatch_1(reg, index, length) {\n  return _doesMatch(this, reg, index, length);\n};\n/** does this term look like an acronym? */\n\n\nvar isAcronym_1$1 = function isAcronym_1$1() {\n  return isAcronym_1(this.text);\n};\n/** is this term implied by a contraction? */\n\n\nvar isImplicit = function isImplicit() {\n  return this.text === '' && Boolean(this.implicit);\n};\n/** does the term have at least one good tag? */\n\n\nvar isKnown = function isKnown() {\n  return Object.keys(this.tags).some(function (t) {\n    return boring[t] !== true;\n  });\n};\n/** cache the root property of the term */\n\n\nvar setRoot = function setRoot(world) {\n  var transform = world.transforms;\n  var str = this.implicit || this.clean;\n\n  if (this.tags.Plural) {\n    str = transform.toSingular(str, world);\n  }\n\n  if (this.tags.Verb && !this.tags.Negative && !this.tags.Infinitive) {\n    var tense = null;\n\n    if (this.tags.PastTense) {\n      tense = 'PastTense';\n    } else if (this.tags.Gerund) {\n      tense = 'Gerund';\n    } else if (this.tags.PresentTense) {\n      tense = 'PresentTense';\n    } else if (this.tags.Participle) {\n      tense = 'Participle';\n    } else if (this.tags.Actor) {\n      tense = 'Actor';\n    }\n\n    str = transform.toInfinitive(str, world, tense);\n  }\n\n  this.root = str;\n};\n\nvar _03Misc = {\n  doesMatch: doesMatch_1,\n  isAcronym: isAcronym_1$1,\n  isImplicit: isImplicit,\n  isKnown: isKnown,\n  setRoot: setRoot\n};\n\nvar hasSpace = /[\\s-]/;\nvar isUpperCase = /^[A-Z-]+$/; // const titleCase = str => {\n//   return str.charAt(0).toUpperCase() + str.substr(1)\n// }\n\n/** return various text formats of this term */\n\nvar textOut = function textOut(options, showPre, showPost) {\n  options = options || {};\n  var word = this.text;\n  var before = this.pre;\n  var after = this.post; // -word-\n\n  if (options.reduced === true) {\n    word = this.reduced || '';\n  }\n\n  if (options.root === true) {\n    word = this.root || '';\n  }\n\n  if (options.implicit === true && this.implicit) {\n    word = this.implicit || '';\n  }\n\n  if (options.normal === true) {\n    word = this.clean || this.text || '';\n  }\n\n  if (options.root === true) {\n    word = this.root || this.reduced || '';\n  }\n\n  if (options.unicode === true) {\n    word = unicode_1(word);\n  } // cleanup case\n\n\n  if (options.titlecase === true) {\n    if (this.tags.ProperNoun && !this.titleCase()) ; else if (this.tags.Acronym) {\n      word = word.toUpperCase(); //uppercase acronyms\n    } else if (isUpperCase.test(word) && !this.tags.Acronym) {\n      // lowercase everything else\n      word = word.toLowerCase();\n    }\n  }\n\n  if (options.lowercase === true) {\n    word = word.toLowerCase();\n  } // remove the '.'s from 'F.B.I.' (safely)\n\n\n  if (options.acronyms === true && this.tags.Acronym) {\n    word = word.replace(/\\./g, '');\n  } // -before/after-\n\n\n  if (options.whitespace === true || options.root === true) {\n    before = '';\n    after = ' ';\n\n    if ((hasSpace.test(this.post) === false || options.last) && !this.implicit) {\n      after = '';\n    }\n  }\n\n  if (options.punctuation === true && !options.root) {\n    //normalized end punctuation\n    if (this.hasPost('.') === true) {\n      after = '.' + after;\n    } else if (this.hasPost('?') === true) {\n      after = '?' + after;\n    } else if (this.hasPost('!') === true) {\n      after = '!' + after;\n    } else if (this.hasPost(',') === true) {\n      after = ',' + after;\n    } else if (this.hasEllipses() === true) {\n      after = '...' + after;\n    }\n  }\n\n  if (showPre !== true) {\n    before = '';\n  }\n\n  if (showPost !== true) {\n    // let keep = after.match(/\\)/) || ''\n    after = ''; //keep //after.replace(/[ .?!,]+/, '')\n  } // remove the '.' from 'Mrs.' (safely)\n\n\n  if (options.abbreviations === true && this.tags.Abbreviation) {\n    after = after.replace(/^\\./, '');\n  }\n\n  return before + word + after;\n};\n\nvar _04Text = {\n  textOut: textOut\n};\n\nvar boringTags = {\n  Auxiliary: 1,\n  Possessive: 1\n};\n/** a subjective ranking of tags kinda tfidf-based */\n\nvar rankTags = function rankTags(term, world) {\n  var tags = Object.keys(term.tags);\n  var tagSet = world.tags;\n  tags = tags.sort(function (a, b) {\n    //bury the tags we dont want\n    if (boringTags[b] || !tagSet[b]) {\n      return -1;\n    } // unknown tags are interesting\n\n\n    if (!tagSet[b]) {\n      return 1;\n    }\n\n    if (!tagSet[a]) {\n      return 0;\n    } // then sort by #of parent tags (most-specific tags first)\n\n\n    if (tagSet[a].lineage.length > tagSet[b].lineage.length) {\n      return 1;\n    }\n\n    if (tagSet[a].isA.length > tagSet[b].isA.length) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return tags;\n};\n\nvar _bestTag = rankTags;\n\nvar jsonDefault = {\n  text: true,\n  tags: true,\n  implicit: true,\n  whitespace: true,\n  clean: false,\n  id: false,\n  index: false,\n  offset: false,\n  bestTag: false\n};\n/** return various metadata for this term */\n\nvar json = function json(options, world) {\n  options = options || {};\n  options = Object.assign({}, jsonDefault, options);\n  var result = {}; // default on\n\n  if (options.text) {\n    result.text = this.text;\n  }\n\n  if (options.normal) {\n    result.normal = this.normal;\n  }\n\n  if (options.tags) {\n    result.tags = Object.keys(this.tags);\n  } // default off\n\n\n  if (options.clean) {\n    result.clean = this.clean;\n  }\n\n  if (options.id || options.offset) {\n    result.id = this.id;\n  }\n\n  if (options.implicit && this.implicit !== null) {\n    result.implicit = this.implicit;\n  }\n\n  if (options.whitespace) {\n    result.pre = this.pre;\n    result.post = this.post;\n  }\n\n  if (options.bestTag) {\n    result.bestTag = _bestTag(this, world)[0];\n  }\n\n  return result;\n};\n\nvar _05Json = {\n  json: json\n};\n\nvar methods = Object.assign({}, _01Case, _02Punctuation, _03Misc, _04Text, _05Json);\n\nfunction isClientSide() {\n  return typeof window !== 'undefined' && window.document;\n}\n/** add spaces at the end */\n\n\nvar padEnd = function padEnd(str, width) {\n  str = str.toString();\n\n  while (str.length < width) {\n    str += ' ';\n  }\n\n  return str;\n};\n/** output for verbose-mode */\n\n\nvar logTag = function logTag(t, tag, reason) {\n  if (isClientSide()) {\n    console.log('%c' + padEnd(t.clean, 3) + '  + ' + tag + ' ', 'color: #6accb2;');\n    return;\n  } //server-side\n\n\n  var log = '\\x1b[33m' + padEnd(t.clean, 15) + '\\x1b[0m + \\x1b[32m' + tag + '\\x1b[0m ';\n\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason + '';\n  }\n\n  console.log(log);\n};\n/** output for verbose mode  */\n\n\nvar logUntag = function logUntag(t, tag, reason) {\n  if (isClientSide()) {\n    console.log('%c' + padEnd(t.clean, 3) + '  - ' + tag + ' ', 'color: #AB5850;');\n    return;\n  } //server-side\n\n\n  var log = '\\x1b[33m' + padEnd(t.clean, 3) + ' \\x1b[31m - #' + tag + '\\x1b[0m ';\n\n  if (reason) {\n    log = padEnd(log, 35) + ' ' + reason;\n  }\n\n  console.log(log);\n};\n\nvar isArray = function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n};\n\nvar titleCase = function titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n};\n\nvar fns = {\n  logTag: logTag,\n  logUntag: logUntag,\n  isArray: isArray,\n  titleCase: titleCase\n};\n\n/** add a tag, and its descendents, to a term */\n\nvar addTag = function addTag(t, tag, reason, world) {\n  var tagset = world.tags; //support '.' or '-' notation for skipping the tag\n\n  if (tag === '' || tag === '.' || tag === '-') {\n    return;\n  }\n\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '');\n  }\n\n  tag = fns.titleCase(tag); //if we already got this one\n\n  if (t.tags[tag] === true) {\n    return;\n  } // log it?\n\n\n  var isVerbose = world.isVerbose();\n\n  if (isVerbose === true) {\n    fns.logTag(t, tag, reason);\n  } //add tag\n\n\n  t.tags[tag] = true; //whee!\n  //check tagset for any additional things to do...\n\n  if (tagset.hasOwnProperty(tag) === true) {\n    //add parent Tags\n    tagset[tag].isA.forEach(function (down) {\n      t.tags[down] = true;\n\n      if (isVerbose === true) {\n        fns.logTag(t, '→ ' + down);\n      }\n    }); //remove any contrary tags\n\n    t.unTag(tagset[tag].notA, '←', world);\n  }\n};\n/** support an array of tags */\n\n\nvar addTags = function addTags(term, tags, reason, world) {\n  if (typeof tags !== 'string') {\n    for (var i = 0; i < tags.length; i++) {\n      addTag(term, tags[i], reason, world);\n    } // tags.forEach(tag => addTag(term, tag, reason, world))\n\n  } else {\n    addTag(term, tags, reason, world);\n  }\n};\n\nvar add = addTags;\n\nvar lowerCase = /^[a-z]/;\n\nvar titleCase$1 = function titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n};\n/** remove this tag, and its descentents from the term */\n\n\nvar unTag = function unTag(t, tag, reason, world) {\n  var isVerbose = world.isVerbose(); //support '*' for removing all tags\n\n  if (tag === '*') {\n    t.tags = {};\n    return t;\n  }\n\n  tag = tag.replace(/^#/, '');\n\n  if (lowerCase.test(tag) === true) {\n    tag = titleCase$1(tag);\n  } // remove the tag\n\n\n  if (t.tags[tag] === true) {\n    delete t.tags[tag]; //log in verbose-mode\n\n    if (isVerbose === true) {\n      fns.logUntag(t, tag, reason);\n    }\n  } //delete downstream tags too\n\n\n  var tagset = world.tags;\n\n  if (tagset[tag]) {\n    var lineage = tagset[tag].lineage;\n\n    for (var i = 0; i < lineage.length; i++) {\n      if (t.tags[lineage[i]] === true) {\n        delete t.tags[lineage[i]];\n\n        if (isVerbose === true) {\n          fns.logUntag(t, ' - ' + lineage[i]);\n        }\n      }\n    }\n  }\n\n  return t;\n}; //handle an array of tags\n\n\nvar untagAll = function untagAll(term, tags, reason, world) {\n  if (typeof tags !== 'string' && tags) {\n    for (var i = 0; i < tags.length; i++) {\n      unTag(term, tags[i], reason, world);\n    }\n\n    return;\n  }\n\n  unTag(term, tags, reason, world);\n};\n\nvar unTag_1 = untagAll;\n\nvar canBe = function canBe(term, tag, world) {\n  var tagset = world.tags; // cleanup tag\n\n  if (tag[0] === '#') {\n    tag = tag.replace(/^#/, '');\n  } //fail-fast\n\n\n  if (tagset[tag] === undefined) {\n    return true;\n  } //loop through tag's contradictory tags\n\n\n  var enemies = tagset[tag].notA || [];\n\n  for (var i = 0; i < enemies.length; i++) {\n    if (term.tags[enemies[i]] === true) {\n      return false;\n    }\n  }\n\n  if (tagset[tag].isA !== undefined) {\n    return canBe(term, tagset[tag].isA, world); //recursive\n  }\n\n  return true;\n};\n\nvar canBe_1 = canBe;\n\n/** add a tag or tags, and their descendents to this term\n * @param  {string | string[]} tags - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\n\nvar tag_1 = function tag_1(tags, reason, world) {\n  add(this, tags, reason, world);\n  return this;\n};\n/** only tag this term if it's consistent with it's current tags */\n\n\nvar tagSafe = function tagSafe(tags, reason, world) {\n  if (canBe_1(this, tags, world)) {\n    add(this, tags, reason, world);\n  }\n\n  return this;\n};\n/** remove a tag or tags, and their descendents from this term\n * @param {string | string[]} tags  - a tag or tags\n * @param {string?} [reason] a clue for debugging\n */\n\n\nvar unTag_1$1 = function unTag_1$1(tags, reason, world) {\n  unTag_1(this, tags, reason, world);\n  return this;\n};\n/** is this tag consistent with the word's current tags?\n * @param {string | string[]} tags - a tag or tags\n * @returns {boolean}\n */\n\n\nvar canBe_1$1 = function canBe_1$1(tags, world) {\n  return canBe_1(this, tags, world);\n};\n\nvar tag = {\n  tag: tag_1,\n  tagSafe: tagSafe,\n  unTag: unTag_1$1,\n  canBe: canBe_1$1\n};\n\nvar Term = /*#__PURE__*/function () {\n  function Term() {\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n    _classCallCheck(this, Term);\n\n    text = String(text);\n    var obj = parse(text); // the various forms of our text\n\n    this.text = obj.text || '';\n    this.clean = obj.clean;\n    this.reduced = obj.reduced;\n    this.root =  null;\n    this.implicit =  null;\n    this.pre = obj.pre || '';\n    this.post = obj.post || '';\n    this.tags = {};\n    this.prev = null;\n    this.next = null;\n    this.id = _id(obj.clean);\n    this.isA = 'Term'; // easier than .constructor...\n    // support alternative matches\n\n    if (obj.alias) {\n      this.alias = obj.alias;\n    }\n  }\n  /** set the text of the Term to something else*/\n\n\n  _createClass(Term, [{\n    key: \"set\",\n    value: function set(str) {\n      var obj = parse(str);\n      this.text = obj.text;\n      this.clean = obj.clean;\n      return this;\n    }\n  }]);\n\n  return Term;\n}();\n/** create a deep-copy of this term */\n\n\nTerm.prototype.clone = function () {\n  var term = new Term(this.text);\n  term.pre = this.pre;\n  term.post = this.post;\n  term.tags = Object.assign({}, this.tags); //use the old id, so it can be matched with .match(doc)\n  // term.id = this.id\n\n  return term;\n};\n\nObject.assign(Term.prototype, methods);\nObject.assign(Term.prototype, tag);\nvar Term_1 = Term;\n\n/** return a flat array of Term objects */\nvar terms = function terms(n) {\n  if (this.length === 0) {\n    return [];\n  } // use cache, if it exists\n\n\n  if (this.cache.terms) {\n    if (n !== undefined) {\n      return this.cache.terms[n];\n    }\n\n    return this.cache.terms;\n  }\n\n  var terms = [this.pool.get(this.start)];\n\n  for (var i = 0; i < this.length - 1; i += 1) {\n    var id = terms[terms.length - 1].next;\n\n    if (id === null) {\n      // throw new Error('linked-list broken')\n      console.error(\"Compromise error: Linked list broken in phrase '\" + this.start + \"'\");\n      break;\n    }\n\n    var term = this.pool.get(id);\n    terms.push(term); //return this one?\n\n    if (n !== undefined && n === i) {\n      return terms[n];\n    }\n  }\n\n  if (n === undefined) {\n    this.cache.terms = terms;\n  }\n\n  if (n !== undefined) {\n    return terms[n];\n  }\n\n  return terms;\n};\n/** return a shallow or deep copy of this phrase  */\n\n\nvar clone = function clone(isShallow) {\n  var _this = this;\n\n  if (isShallow) {\n    var p = this.buildFrom(this.start, this.length);\n    p.cache = this.cache;\n    return p;\n  } //how do we clone part of the pool?\n\n\n  var terms = this.terms();\n  var newTerms = terms.map(function (t) {\n    return t.clone();\n  }); //connect these new ids up\n\n  newTerms.forEach(function (t, i) {\n    //add it to the pool..\n    _this.pool.add(t);\n\n    if (newTerms[i + 1]) {\n      t.next = newTerms[i + 1].id;\n    }\n\n    if (newTerms[i - 1]) {\n      t.prev = newTerms[i - 1].id;\n    }\n  });\n  return this.buildFrom(newTerms[0].id, newTerms.length);\n};\n/** return last term object */\n\n\nvar lastTerm = function lastTerm() {\n  var terms = this.terms();\n  return terms[terms.length - 1];\n};\n/** quick lookup for a term id */\n\n\nvar hasId = function hasId(wantId) {\n  if (this.length === 0 || !wantId) {\n    return false;\n  }\n\n  if (this.start === wantId) {\n    return true;\n  } // use cache, if available\n\n\n  if (this.cache.terms) {\n    var _terms = this.cache.terms;\n\n    for (var i = 0; i < _terms.length; i++) {\n      if (_terms[i].id === wantId) {\n        return true;\n      }\n    }\n\n    return false;\n  } // otherwise, go through each term\n\n\n  var lastId = this.start;\n\n  for (var _i = 0; _i < this.length - 1; _i += 1) {\n    var term = this.pool.get(lastId);\n\n    if (term === undefined) {\n      console.error(\"Compromise error: Linked list broken. Missing term '\".concat(lastId, \"' in phrase '\").concat(this.start, \"'\\n\")); // throw new Error('linked List error')\n\n      return false;\n    }\n\n    if (term.next === wantId) {\n      return true;\n    }\n\n    lastId = term.next;\n  }\n\n  return false;\n};\n/** how many seperate, non-empty words is it? */\n\n\nvar wordCount = function wordCount() {\n  return this.terms().filter(function (t) {\n    return t.text !== '';\n  }).length;\n};\n/** get the full-sentence this phrase belongs to */\n\n\nvar fullSentence = function fullSentence() {\n  var t = this.terms(0); //find first term in sentence\n\n  while (t.prev) {\n    t = this.pool.get(t.prev);\n  }\n\n  var start = t.id;\n  var len = 1; //go to end of sentence\n\n  while (t.next) {\n    t = this.pool.get(t.next);\n    len += 1;\n  }\n\n  return this.buildFrom(start, len);\n};\n\nvar _01Utils = {\n  terms: terms,\n  clone: clone,\n  lastTerm: lastTerm,\n  hasId: hasId,\n  wordCount: wordCount,\n  fullSentence: fullSentence\n};\n\nvar trimEnd = function trimEnd(str) {\n  return str.replace(/ +$/, '');\n};\n/** produce output in the given format */\n\n\nvar text = function text() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var isFirst = arguments.length > 1 ? arguments[1] : undefined;\n  var isLast = arguments.length > 2 ? arguments[2] : undefined;\n\n  if (typeof options === 'string') {\n    if (options === 'normal') {\n      options = {\n        whitespace: true,\n        unicode: true,\n        lowercase: true,\n        punctuation: true,\n        acronyms: true,\n        abbreviations: true,\n        implicit: true,\n        normal: true\n      };\n    } else if (options === 'clean') {\n      options = {\n        titlecase: false,\n        lowercase: true,\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n        implicit: true\n      };\n    } else if (options === 'reduced') {\n      options = {\n        titlecase: false,\n        lowercase: true,\n        punctuation: false,\n        //FIXME: reversed?\n        whitespace: true,\n        unicode: true,\n        implicit: true,\n        reduced: true\n      };\n    } else if (options === 'root') {\n      options = {\n        titlecase: false,\n        lowercase: true,\n        punctuation: true,\n        whitespace: true,\n        unicode: true,\n        implicit: true,\n        root: true\n      };\n    } else {\n      options = {};\n    }\n  }\n\n  var terms = this.terms(); //this this phrase a complete sentence?\n\n  var isFull = false;\n\n  if (terms[0] && terms[0].prev === null && terms[terms.length - 1].next === null) {\n    isFull = true;\n  }\n\n  var text = terms.reduce(function (str, t, i) {\n    options.last = isLast && i === terms.length - 1;\n    var showPre = true;\n    var showPost = true;\n\n    if (isFull === false) {\n      // dont show beginning whitespace\n      if (i === 0 && isFirst) {\n        showPre = false;\n      } // dont show end-whitespace\n\n\n      if (i === terms.length - 1 && isLast) {\n        showPost = false;\n      }\n    }\n\n    var txt = t.textOut(options, showPre, showPost); // if (options.titlecase && i === 0) {\n    // txt = titleCase(txt)\n    // }\n\n    return str + txt;\n  }, ''); //full-phrases show punctuation, but not whitespace\n\n  if (isFull === true && isLast) {\n    text = trimEnd(text);\n  }\n\n  if (options.trim === true) {\n    text = text.trim();\n  }\n\n  return text;\n};\n\nvar _02Text = {\n  text: text\n};\n\n/** remove start and end whitespace */\nvar trim = function trim() {\n  var terms = this.terms();\n\n  if (terms.length > 0) {\n    //trim starting\n    terms[0].pre = terms[0].pre.replace(/^\\s+/, ''); //trim ending\n\n    var lastTerm = terms[terms.length - 1];\n    lastTerm.post = lastTerm.post.replace(/\\s+$/, '');\n  }\n\n  return this;\n};\n\nvar _03Change = {\n  trim: trim\n};\n\nvar endOfSentence = /[.?!]\\s*$/; // replacing a 'word.' with a 'word!'\n\nvar combinePost = function combinePost(before, after) {\n  //only transfer the whitespace\n  if (endOfSentence.test(after)) {\n    var whitespace = before.match(/\\s*$/);\n    return after + whitespace;\n  }\n\n  return before;\n}; //add whitespace to the start of the second bit\n\n\nvar addWhitespace = function addWhitespace(beforeTerms, newTerms) {\n  // add any existing pre-whitespace to beginning\n  newTerms[0].pre = beforeTerms[0].pre;\n  var lastTerm = beforeTerms[beforeTerms.length - 1]; //add any existing punctuation to end of our new terms\n\n  var newTerm = newTerms[newTerms.length - 1];\n  newTerm.post = combinePost(lastTerm.post, newTerm.post); // remove existing punctuation\n\n  lastTerm.post = ''; //before ←[space]  - after\n\n  if (lastTerm.post === '') {\n    lastTerm.post += ' ';\n  }\n}; //insert this segment into the linked-list\n\n\nvar stitchIn = function stitchIn(beforeTerms, newTerms, pool) {\n  var lastBefore = beforeTerms[beforeTerms.length - 1];\n  var lastNew = newTerms[newTerms.length - 1];\n  var afterId = lastBefore.next; //connect ours in (main → newPhrase)\n\n  lastBefore.next = newTerms[0].id; //stich the end in  (newPhrase → after)\n\n  lastNew.next = afterId; //do it backwards, too\n\n  if (afterId) {\n    // newPhrase ← after\n    var afterTerm = pool.get(afterId);\n    afterTerm.prev = lastNew.id;\n  } // before ← newPhrase\n\n\n  var beforeId = beforeTerms[0].id;\n\n  if (beforeId) {\n    var newTerm = newTerms[0];\n    newTerm.prev = beforeId;\n  }\n}; // avoid stretching a phrase twice.\n\n\nvar unique = function unique(list) {\n  return list.filter(function (o, i) {\n    return list.indexOf(o) === i;\n  });\n}; //append one phrase onto another.\n\n\nvar appendPhrase = function appendPhrase(before, newPhrase, doc) {\n  var beforeTerms = before.terms();\n  var newTerms = newPhrase.terms(); //spruce-up the whitespace issues\n\n  addWhitespace(beforeTerms, newTerms); //insert this segment into the linked-list\n\n  stitchIn(beforeTerms, newTerms, before.pool); // stretch!\n  // make each effected phrase longer\n\n  var toStretch = [before];\n  var hasId = before.start;\n  var docs = [doc];\n  docs = docs.concat(doc.parents()); // find them all!\n\n  docs.forEach(function (parent) {\n    // only the phrases that should change\n    var shouldChange = parent.list.filter(function (p) {\n      return p.hasId(hasId);\n    });\n    toStretch = toStretch.concat(shouldChange);\n  }); // don't double-count a phrase\n\n  toStretch = unique(toStretch);\n  toStretch.forEach(function (p) {\n    p.length += newPhrase.length;\n  });\n  before.cache = {};\n  return before;\n};\n\nvar append = appendPhrase;\n\nvar hasSpace$1 = / /; //a new space needs to be added, either on the new phrase, or the old one\n// '[new] [◻old]'   -or-   '[old] [◻new] [old]'\n\nvar addWhitespace$1 = function addWhitespace(newTerms) {\n  //add a space before our new text?\n  // add a space after our text\n  var lastTerm = newTerms[newTerms.length - 1];\n\n  if (hasSpace$1.test(lastTerm.post) === false) {\n    lastTerm.post += ' ';\n  }\n\n  return;\n}; //insert this segment into the linked-list\n\n\nvar stitchIn$1 = function stitchIn(main, newPhrase, newTerms) {\n  // [newPhrase] → [main]\n  var lastTerm = newTerms[newTerms.length - 1];\n  lastTerm.next = main.start; // [before] → [main]\n\n  var pool = main.pool;\n  var start = pool.get(main.start);\n\n  if (start.prev) {\n    var before = pool.get(start.prev);\n    before.next = newPhrase.start;\n  } //do it backwards, too\n  // before ← newPhrase\n\n\n  newTerms[0].prev = main.terms(0).prev; // newPhrase ← main\n\n  main.terms(0).prev = lastTerm.id;\n};\n\nvar unique$1 = function unique(list) {\n  return list.filter(function (o, i) {\n    return list.indexOf(o) === i;\n  });\n}; //append one phrase onto another\n\n\nvar joinPhrase = function joinPhrase(original, newPhrase, doc) {\n  var starterId = original.start;\n  var newTerms = newPhrase.terms(); //spruce-up the whitespace issues\n\n  addWhitespace$1(newTerms); //insert this segment into the linked-list\n\n  stitchIn$1(original, newPhrase, newTerms); //increase the length of our phrases\n\n  var toStretch = [original];\n  var docs = [doc];\n  docs = docs.concat(doc.parents());\n  docs.forEach(function (d) {\n    // only the phrases that should change\n    var shouldChange = d.list.filter(function (p) {\n      return p.hasId(starterId) || p.hasId(newPhrase.start);\n    });\n    toStretch = toStretch.concat(shouldChange);\n  }); // don't double-count\n\n  toStretch = unique$1(toStretch); // stretch these phrases\n\n  toStretch.forEach(function (p) {\n    p.length += newPhrase.length; // change the start too, if necessary\n\n    if (p.start === starterId) {\n      p.start = newPhrase.start;\n    }\n\n    p.cache = {};\n  });\n  return original;\n};\n\nvar prepend = joinPhrase;\n\n//recursively decrease the length of all the parent phrases\nvar shrinkAll = function shrinkAll(doc, id, deleteLength, after) {\n  var arr = doc.parents();\n  arr.push(doc);\n  arr.forEach(function (d) {\n    //find our phrase to shrink\n    var phrase = d.list.find(function (p) {\n      return p.hasId(id);\n    });\n\n    if (!phrase) {\n      return;\n    }\n\n    phrase.length -= deleteLength; // does it start with this soon-removed word?\n\n    if (phrase.start === id) {\n      phrase.start = after.id;\n    }\n\n    phrase.cache = {};\n  }); // cleanup empty phrase objects\n\n  doc.list = doc.list.filter(function (p) {\n    if (!p.start || !p.length) {\n      return false;\n    }\n\n    return true;\n  });\n};\n/** wrap the linked-list around these terms\n * so they don't appear any more\n */\n\n\nvar deletePhrase = function deletePhrase(phrase, doc) {\n  var pool = doc.pool();\n  var terms = phrase.terms(); //grab both sides of the chain,\n\n  var prev = pool.get(terms[0].prev) || {};\n  var after = pool.get(terms[terms.length - 1].next) || {};\n\n  if (terms[0].implicit && prev.implicit) {\n    prev.set(prev.implicit);\n    prev.post += ' ';\n  } // //first, change phrase lengths\n\n\n  shrinkAll(doc, phrase.start, phrase.length, after); // connect [prev]->[after]\n\n  if (prev) {\n    prev.next = after.id;\n  } // connect [prev]<-[after]\n\n\n  if (after) {\n    after.prev = prev.id;\n  } // lastly, actually delete the terms from the pool?\n  // for (let i = 0; i < terms.length; i++) {\n  //   pool.remove(terms[i].id)\n  // }\n\n};\n\nvar _delete = deletePhrase;\n\n/** put this text at the end */\n\nvar append_1 = function append_1(newPhrase, doc) {\n  append(this, newPhrase, doc);\n  return this;\n};\n/** add this text to the beginning */\n\n\nvar prepend_1 = function prepend_1(newPhrase, doc) {\n  prepend(this, newPhrase, doc);\n  return this;\n};\n\nvar _delete$1 = function _delete$1(doc) {\n  _delete(this, doc);\n  return this;\n}; // stich-in newPhrase, stretch 'doc' + parents\n\n\nvar replace = function replace(newPhrase, doc) {\n  //add it do the end\n  var firstLength = this.length;\n  append(this, newPhrase, doc); //delete original terms\n\n  var tmp = this.buildFrom(this.start, this.length);\n  tmp.length = firstLength;\n  _delete(tmp, doc);\n};\n/**\n * Turn this phrase object into 3 phrase objects\n */\n\n\nvar splitOn = function splitOn(p) {\n  var terms = this.terms();\n  var result = {\n    before: null,\n    match: null,\n    after: null\n  };\n  var index = terms.findIndex(function (t) {\n    return t.id === p.start;\n  });\n\n  if (index === -1) {\n    return result;\n  } //make all three sections into phrase-objects\n\n\n  var start = terms.slice(0, index);\n\n  if (start.length > 0) {\n    result.before = this.buildFrom(start[0].id, start.length);\n  }\n\n  var match = terms.slice(index, index + p.length);\n\n  if (match.length > 0) {\n    result.match = this.buildFrom(match[0].id, match.length);\n  }\n\n  var end = terms.slice(index + p.length, terms.length);\n\n  if (end.length > 0) {\n    result.after = this.buildFrom(end[0].id, end.length, this.pool);\n  }\n\n  return result;\n};\n\nvar _04Insert = {\n  append: append_1,\n  prepend: prepend_1,\n  \"delete\": _delete$1,\n  replace: replace,\n  splitOn: splitOn\n};\n\n/** return json metadata for this phrase */\nvar json$1 = function json() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var world = arguments.length > 1 ? arguments[1] : undefined;\n  var res = {}; // text data\n\n  if (options.text) {\n    res.text = this.text();\n  }\n\n  if (options.normal) {\n    res.normal = this.text('normal');\n  }\n\n  if (options.clean) {\n    res.clean = this.text('clean');\n  }\n\n  if (options.reduced) {\n    res.reduced = this.text('reduced');\n  }\n\n  if (options.root) {\n    res.root = this.text('root');\n  }\n\n  if (options.trim) {\n    if (res.text) {\n      res.text = res.text.trim();\n    }\n\n    if (res.normal) {\n      res.normal = res.normal.trim();\n    }\n\n    if (res.reduced) {\n      res.reduced = res.reduced.trim();\n    }\n  } // terms data\n\n\n  if (options.terms) {\n    if (options.terms === true) {\n      options.terms = {};\n    }\n\n    res.terms = this.terms().map(function (t) {\n      return t.json(options.terms, world);\n    });\n  }\n\n  return res;\n};\n\nvar _05Json$1 = {\n  json: json$1\n};\n\n/** match any terms after this phrase */\nvar lookAhead = function lookAhead(regs) {\n  // if empty match string, return everything after\n  if (!regs) {\n    regs = '.*';\n  }\n\n  var pool = this.pool; // get a list of all terms preceding our start\n\n  var terms = [];\n\n  var getAfter = function getAfter(id) {\n    var term = pool.get(id);\n\n    if (!term) {\n      return;\n    }\n\n    terms.push(term);\n\n    if (term.prev) {\n      getAfter(term.next); //recursion\n    }\n  };\n\n  var all = this.terms();\n  var lastTerm = all[all.length - 1];\n  getAfter(lastTerm.next);\n\n  if (terms.length === 0) {\n    return [];\n  } // got the terms, make a phrase from them\n\n\n  var p = this.buildFrom(terms[0].id, terms.length);\n  return p.match(regs);\n};\n/** match any terms before this phrase */\n\n\nvar lookBehind = function lookBehind(regs) {\n  // if empty match string, return everything before\n  if (!regs) {\n    regs = '.*';\n  }\n\n  var pool = this.pool; // get a list of all terms preceding our start\n\n  var terms = [];\n\n  var getBefore = function getBefore(id) {\n    var term = pool.get(id);\n\n    if (!term) {\n      return;\n    }\n\n    terms.push(term);\n\n    if (term.prev) {\n      getBefore(term.prev); //recursion\n    }\n  };\n\n  var term = pool.get(this.start);\n  getBefore(term.prev);\n\n  if (terms.length === 0) {\n    return [];\n  } // got the terms, make a phrase from them\n\n\n  var p = this.buildFrom(terms[terms.length - 1].id, terms.length);\n  return p.match(regs);\n};\n\nvar _06Lookahead = {\n  lookAhead: lookAhead,\n  lookBehind: lookBehind\n};\n\nvar methods$1 = Object.assign({}, _01Utils, _02Text, _03Change, _04Insert, _05Json$1, _06Lookahead);\n\n// try to avoid doing the match\nvar failFast = function failFast(p, regs) {\n  if (regs.length === 0) {\n    return true;\n  }\n\n  for (var i = 0; i < regs.length; i += 1) {\n    var reg = regs[i]; //logical quick-ones\n\n    if (reg.optional !== true && reg.negative !== true) {\n      //start/end impossibilites\n      if (reg.start === true && i > 0) {\n        return true;\n      }\n    } //this is not possible\n\n\n    if (reg.anything === true && reg.negative === true) {\n      return true;\n    }\n  }\n\n  return false;\n};\n\nvar _02FailFast = failFast;\n\n//found a match? it's greedy? keep going!\n\nvar getGreedy = function getGreedy(terms, t, reg, until, index, length) {\n  var start = t;\n\n  for (; t < terms.length; t += 1) {\n    //stop for next-reg match\n    if (until && terms[t].doesMatch(until, index + t, length)) {\n      return t;\n    }\n\n    var count = t - start + 1; // is it max-length now?\n\n    if (reg.max !== undefined && count === reg.max) {\n      return t;\n    } //stop here\n\n\n    if (terms[t].doesMatch(reg, index + t, length) === false) {\n      // is it too short?\n      if (reg.min !== undefined && count < reg.min) {\n        return null;\n      }\n\n      return t;\n    }\n  }\n\n  return t;\n}; //'unspecific greedy' is a weird situation.\n\n\nvar greedyTo = function greedyTo(terms, t, nextReg, index, length) {\n  //if there's no next one, just go off the end!\n  if (!nextReg) {\n    return terms.length;\n  } //otherwise, we're looking for the next one\n\n\n  for (; t < terms.length; t += 1) {\n    if (terms[t].doesMatch(nextReg, index + t, length) === true) {\n      return t;\n    }\n  } //guess it doesn't exist, then.\n\n\n  return null;\n}; // get or create named group\n\n\nvar getOrCreateGroup = function getOrCreateGroup(namedGroups, namedGroupId, terms, startIndex, group) {\n  var g = namedGroups[namedGroupId];\n\n  if (g) {\n    return g;\n  }\n\n  var id = terms[startIndex].id;\n  namedGroups[namedGroupId] = {\n    group: String(group),\n    start: id,\n    length: 0\n  };\n  return namedGroups[namedGroupId];\n};\n/** tries to match a sequence of terms, starting from here */\n\n\nvar tryHere = function tryHere(terms, regs, index, length) {\n  var namedGroups = {};\n  var previousGroupId = null;\n  var t = 0; // we must satisfy each rule in 'regs'\n\n  for (var r = 0; r < regs.length; r += 1) {\n    var reg = regs[r]; // Check if this reg has a named capture group\n\n    var isNamedGroup = typeof reg.named === 'string' || typeof reg.named === 'number';\n    var namedGroupId = null; // Reuse previous capture group if same\n\n    if (isNamedGroup) {\n      var prev = regs[r - 1];\n\n      if (prev && prev.named === reg.named && previousGroupId) {\n        namedGroupId = previousGroupId;\n      } else {\n        namedGroupId = _id(reg.named);\n        previousGroupId = namedGroupId;\n      }\n    } //should we fail here?\n\n\n    if (!terms[t]) {\n      //are all remaining regs optional?\n      var hasNeeds = regs.slice(r).some(function (remain) {\n        return !remain.optional;\n      });\n\n      if (hasNeeds === false) {\n        break;\n      } // have unmet needs\n\n\n      return [false, null];\n    } //support 'unspecific greedy' .* properly\n\n\n    if (reg.anything === true && reg.greedy === true) {\n      var skipto = greedyTo(terms, t, regs[r + 1], reg, index); // ensure it's long enough\n\n      if (reg.min !== undefined && skipto - t < reg.min) {\n        return [false, null];\n      } // reduce it back, if it's too long\n\n\n      if (reg.max !== undefined && skipto - t > reg.max) {\n        t = t + reg.max;\n        continue;\n      }\n\n      if (skipto === null) {\n        return [false, null]; //couldn't find it\n      } // is it really this easy?....\n\n\n      if (isNamedGroup) {\n        var g = getOrCreateGroup(namedGroups, namedGroupId, terms, t, reg.named); // Update group\n\n        g.length = skipto - t;\n      }\n\n      t = skipto;\n      continue;\n    } //if it looks like a match, continue\n    //we have a special case where an end-anchored greedy match may need to\n    //start matching before the actual end; we do this by (temporarily!)\n    //removing the \"end\" property from the matching token... since this is\n    //very situation-specific, we *only* do this when we really need to.\n\n\n    if (reg.anything === true || reg.end === true && reg.greedy === true && index + t < length - 1 && terms[t].doesMatch(Object.assign({}, reg, {\n      end: false\n    }), index + t, length) === true || terms[t].doesMatch(reg, index + t, length) === true) {\n      var startAt = t; // okay, it was a match, but if it optional too,\n      // we should check the next reg too, to skip it?\n\n      if (reg.optional && regs[r + 1]) {\n        // does the next reg match it too?\n        if (terms[t].doesMatch(regs[r + 1], index + t, length) === true) {\n          // but does the next reg match the next term??\n          // only skip if it doesn't\n          if (!terms[t + 1] || terms[t + 1].doesMatch(regs[r + 1], index + t, length) === false) {\n            r += 1;\n          }\n        }\n      } //advance to the next term!\n\n\n      t += 1; //check any ending '$' flags\n\n      if (reg.end === true) {\n        //if this isn't the last term, refuse the match\n        if (t !== terms.length && reg.greedy !== true) {\n          return [false, null];\n        }\n      } //try keep it going!\n\n\n      if (reg.greedy === true) {\n        // for greedy checking, we no longer care about the reg.start\n        // value, and leaving it can cause failures for anchored greedy\n        // matches.  ditto for end-greedy matches: we need an earlier non-\n        // ending match to succceed until we get to the actual end.\n        t = getGreedy(terms, t, Object.assign({}, reg, {\n          start: false,\n          end: false\n        }), regs[r + 1], index, length);\n\n        if (t === null) {\n          return [false, null]; //greedy was too short\n        } // if this was also an end-anchor match, check to see we really\n        // reached the end\n\n\n        if (reg.end === true && index + t !== length) {\n          return [false, null]; //greedy didn't reach the end\n        }\n      }\n\n      if (isNamedGroup) {\n        // Get or create capture group\n        var _g = getOrCreateGroup(namedGroups, namedGroupId, terms, startAt, reg.named); // Update group - add greedy or increment length\n\n\n        if (t > 1 && reg.greedy) {\n          _g.length += t - startAt;\n        } else {\n          _g.length++;\n        }\n      }\n\n      continue;\n    } //bah, who cares, keep going\n\n\n    if (reg.optional === true) {\n      continue;\n    } // should we skip-over an implicit word?\n\n\n    if (terms[t].isImplicit() && regs[r - 1] && terms[t + 1]) {\n      // does the next one match?\n      if (terms[t + 1].doesMatch(reg, index + t, length)) {\n        t += 2;\n        continue;\n      }\n    } // console.log('   ❌\\n\\n')\n\n\n    return [false, null];\n  } //return our result\n\n\n  return [terms.slice(0, t), namedGroups];\n};\n\nvar _03TryMatch = tryHere;\n\nvar postProcess = function postProcess(terms, regs, matches) {\n  if (!matches || matches.length === 0) {\n    return matches;\n  } // ensure end reg has the end term\n\n\n  var atEnd = regs.some(function (r) {\n    return r.end;\n  });\n\n  if (atEnd) {\n    var lastTerm = terms[terms.length - 1];\n    matches = matches.filter(function (_ref) {\n      var arr = _ref.match;\n      return arr.indexOf(lastTerm) !== -1;\n    });\n  }\n\n  return matches;\n};\n\nvar _04PostProcess = postProcess;\n\n/* break-down a match expression into this:\n{\n  word:'',\n  tag:'',\n  regex:'',\n\n  start:false,\n  end:false,\n  negative:false,\n  anything:false,\n  greedy:false,\n  optional:false,\n\n  named:'',\n  choices:[],\n}\n*/\nvar hasMinMax = /\\{([0-9]+,?[0-9]*)\\}/;\nvar andSign = /&&/;\nvar captureName = new RegExp(/^<(\\S+)>/);\n\nvar titleCase$2 = function titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n};\n\nvar end = function end(str) {\n  return str[str.length - 1];\n};\n\nvar start = function start(str) {\n  return str[0];\n};\n\nvar stripStart = function stripStart(str) {\n  return str.substr(1);\n};\n\nvar stripEnd = function stripEnd(str) {\n  return str.substr(0, str.length - 1);\n};\n\nvar stripBoth = function stripBoth(str) {\n  str = stripStart(str);\n  str = stripEnd(str);\n  return str;\n}; //\n\n\nvar parseToken = function parseToken(w) {\n  var obj = {}; //collect any flags (do it twice)\n\n  for (var i = 0; i < 2; i += 1) {\n    //end-flag\n    if (end(w) === '$') {\n      obj.end = true;\n      w = stripEnd(w);\n    } //front-flag\n\n\n    if (start(w) === '^') {\n      obj.start = true;\n      w = stripStart(w);\n    } //capture group (this one can span multiple-terms)\n\n\n    if (start(w) === '[' || end(w) === ']') {\n      obj.named = true;\n\n      if (start(w) === '[') {\n        obj.groupType = end(w) === ']' ? 'single' : 'start';\n      } else {\n        obj.groupType = 'end';\n      }\n\n      w = w.replace(/^\\[/, '');\n      w = w.replace(/\\]$/, ''); // Use capture group name\n\n      if (start(w) === '<') {\n        var res = captureName.exec(w);\n\n        if (res.length >= 2) {\n          obj.named = res[1];\n          w = w.replace(res[0], '');\n        }\n      }\n    } //back-flags\n\n\n    if (end(w) === '+') {\n      obj.greedy = true;\n      w = stripEnd(w);\n    }\n\n    if (w !== '*' && end(w) === '*' && w !== '\\\\*') {\n      obj.greedy = true;\n      w = stripEnd(w);\n    }\n\n    if (end(w) === '?') {\n      obj.optional = true;\n      w = stripEnd(w);\n    }\n\n    if (start(w) === '!') {\n      obj.negative = true;\n      w = stripStart(w);\n    } //wrapped-flags\n\n\n    if (start(w) === '(' && end(w) === ')') {\n      // support (one && two)\n      if (andSign.test(w)) {\n        obj.choices = w.split(andSign);\n        obj.operator = 'and';\n      } else {\n        obj.choices = w.split('|');\n        obj.operator = 'or';\n      } //remove '(' and ')'\n\n\n      obj.choices[0] = stripStart(obj.choices[0]);\n      var last = obj.choices.length - 1;\n      obj.choices[last] = stripEnd(obj.choices[last]); // clean up the results\n\n      obj.choices = obj.choices.map(function (s) {\n        return s.trim();\n      });\n      obj.choices = obj.choices.filter(function (s) {\n        return s;\n      }); //recursion alert!\n\n      obj.choices = obj.choices.map(parseToken);\n      w = '';\n    } //regex\n\n\n    if (start(w) === '/' && end(w) === '/') {\n      w = stripBoth(w);\n      obj.regex = new RegExp(w); //potential vuln - security/detect-non-literal-regexp\n\n      return obj;\n    } //soft-match\n\n\n    if (start(w) === '~' && end(w) === '~') {\n      w = stripBoth(w);\n      obj.soft = true;\n      obj.word = w;\n      return obj;\n    }\n  } // support #Tag{0,9}\n\n\n  if (hasMinMax.test(w) === true) {\n    w = w.replace(hasMinMax, function (a, b) {\n      var arr = b.split(/,/g);\n\n      if (arr.length === 1) {\n        // '{3}'\tExactly three times\n        obj.min = Number(arr[0]);\n        obj.max = Number(arr[0]);\n      } else {\n        // '{2,4}' Two to four times\n        // '{3,}' Three or more times\n        obj.min = Number(arr[0]);\n        obj.max = Number(arr[1] || 999);\n      }\n\n      obj.greedy = true;\n      return '';\n    });\n  } //do the actual token content\n\n\n  if (start(w) === '#') {\n    obj.tag = stripStart(w);\n    obj.tag = titleCase$2(obj.tag);\n    return obj;\n  } //dynamic function on a term object\n\n\n  if (start(w) === '@') {\n    obj.method = stripStart(w);\n    return obj;\n  }\n\n  if (w === '.') {\n    obj.anything = true;\n    return obj;\n  } //support alone-astrix\n\n\n  if (w === '*') {\n    obj.anything = true;\n    obj.greedy = true;\n    obj.optional = true;\n    return obj;\n  }\n\n  if (w) {\n    //somehow handle encoded-chars?\n    w = w.replace('\\\\*', '*');\n    w = w.replace('\\\\.', '.');\n    obj.word = w.toLowerCase();\n  }\n\n  return obj;\n};\n\nvar parseToken_1 = parseToken;\n\nvar isNamed = function isNamed(capture) {\n  return typeof capture === 'string' || typeof capture === 'number';\n};\n\nvar fillGroups = function fillGroups(tokens) {\n  var convert = false;\n  var index = -1;\n  var current; //'fill in' capture groups between start-end\n\n  for (var i = 0; i < tokens.length; i++) {\n    var n = tokens[i]; // Give name to un-named single tokens\n\n    if (n.groupType === 'single' && n.named === true) {\n      index += 1;\n      n.named = index;\n      continue;\n    } // Start converting tokens\n\n\n    if (n.groupType === 'start') {\n      convert = true;\n\n      if (isNamed(n.named)) {\n        current = n.named;\n      } else {\n        index += 1;\n        current = index;\n      }\n    } // Ensure this token has the right name\n\n\n    if (convert) {\n      n.named = current;\n    } // Stop converting tokens\n\n\n    if (n.groupType === 'end') {\n      convert = false;\n    }\n  }\n\n  return tokens;\n};\n\nvar useOneOf = function useOneOf(tokens) {\n  return tokens.map(function (token) {\n    if (token.choices !== undefined) {\n      // are they all straight non-optional words?\n      var shouldPack = token.choices.every(function (c) {\n        return c.optional !== true && c.negative !== true && c.word !== undefined;\n      });\n\n      if (shouldPack === true) {\n        var oneOf = {};\n        token.choices.forEach(function (c) {\n          return oneOf[c.word] = true;\n        });\n        token.oneOf = oneOf;\n        delete token.choices;\n      }\n    }\n\n    return token;\n  });\n};\n\nvar postProcess$1 = function postProcess(tokens) {\n  // ensure all capture groups are filled between start and end\n  // give all capture groups names\n  var count = tokens.filter(function (t) {\n    return t.groupType;\n  }).length;\n\n  if (count > 0) {\n    tokens = fillGroups(tokens);\n  } // convert 'choices' format to 'oneOf' format\n\n\n  tokens = useOneOf(tokens); // console.log(tokens)\n\n  return tokens;\n};\n\nvar postProcess_1 = postProcess$1;\n\nvar isArray$1 = function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n}; //split-up by (these things)\n\n\nvar byParentheses = function byParentheses(str) {\n  var arr = str.split(/([\\^\\[\\!]*(?:<\\S+>)?\\(.*?\\)[?+*]*\\]?\\$?)/);\n  arr = arr.map(function (s) {\n    return s.trim();\n  });\n  return arr;\n};\n\nvar byWords = function byWords(arr) {\n  var words = [];\n  arr.forEach(function (a) {\n    //keep brackets lumped together\n    if (/^[[^_/]?\\(/.test(a[0])) {\n      words.push(a);\n      return;\n    }\n\n    var list = a.split(' ');\n    list = list.filter(function (w) {\n      return w;\n    });\n    words = words.concat(list);\n  });\n  return words;\n}; //turn an array into a 'choices' list\n\n\nvar byArray = function byArray(arr) {\n  return [{\n    choices: arr.map(function (s) {\n      return {\n        word: s\n      };\n    })\n  }];\n};\n\nvar fromDoc = function fromDoc(doc) {\n  if (!doc || !doc.list || !doc.list[0]) {\n    return [];\n  }\n\n  var ids = [];\n  doc.list.forEach(function (p) {\n    p.terms().forEach(function (t) {\n      ids.push({\n        id: t.id\n      });\n    });\n  });\n  return [{\n    choices: ids,\n    greedy: true\n  }];\n};\n/** parse a match-syntax string into json */\n\n\nvar syntax = function syntax(input) {\n  // fail-fast\n  if (input === null || input === undefined || input === '') {\n    return [];\n  } //try to support a ton of different formats:\n\n\n  if (_typeof(input) === 'object') {\n    if (isArray$1(input)) {\n      if (input.length === 0 || !input[0]) {\n        return [];\n      } //is it a pre-parsed reg-list?\n\n\n      if (_typeof(input[0]) === 'object') {\n        return input;\n      } //support a flat array of normalized words\n\n\n      if (typeof input[0] === 'string') {\n        return byArray(input);\n      }\n    } //support passing-in a compromise object as a match\n\n\n    if (input && input.isA === 'Doc') {\n      return fromDoc(input);\n    }\n\n    return [];\n  }\n\n  if (typeof input === 'number') {\n    input = String(input); //go for it?\n  }\n\n  var tokens = byParentheses(input);\n  tokens = byWords(tokens);\n  tokens = tokens.map(parseToken_1); //clean up anything weird\n\n  tokens = postProcess_1(tokens); // console.log(JSON.stringify(tokens, null, 2))\n\n  return tokens;\n};\n\nvar syntax_1 = syntax;\n\n/**  returns a simple array of arrays */\n\nvar matchAll = function matchAll(p, regs) {\n  var matchOne = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n  //if we forgot to parse it..\n  if (typeof regs === 'string') {\n    regs = syntax_1(regs);\n  } //try to dismiss it, at-once\n\n\n  if (_02FailFast(p, regs) === true) {\n    return [];\n  } //any match needs to be this long, at least\n\n\n  var minLength = regs.filter(function (r) {\n    return r.optional !== true;\n  }).length;\n  var terms = p.terms();\n  var matches = []; //optimisation for '^' start logic\n\n  if (regs[0].start === true) {\n    var _tryMatch = _03TryMatch(terms, regs, 0, terms.length),\n        _tryMatch2 = _slicedToArray(_tryMatch, 2),\n        match = _tryMatch2[0],\n        groups = _tryMatch2[1];\n\n    if (match !== false && match.length > 0) {\n      match = match.filter(function (m) {\n        return m;\n      });\n      matches.push({\n        match: match,\n        groups: groups\n      });\n    }\n\n    return _04PostProcess(terms, regs, matches);\n  } //try starting, from every term\n\n\n  for (var i = 0; i < terms.length; i += 1) {\n    // slice may be too short\n    if (i + minLength > terms.length) {\n      break;\n    } //try it!\n\n\n    var _tryMatch3 = _03TryMatch(terms.slice(i), regs, i, terms.length),\n        _tryMatch4 = _slicedToArray(_tryMatch3, 2),\n        _match = _tryMatch4[0],\n        _groups = _tryMatch4[1];\n\n    if (_match !== false && _match.length > 0) {\n      //zoom forward!\n      i += _match.length - 1; //[capture-groups] return some null responses\n\n      _match = _match.filter(function (m) {\n        return m;\n      });\n      matches.push({\n        match: _match,\n        groups: _groups\n      }); //ok, maybe that's enough?\n\n      if (matchOne === true) {\n        return _04PostProcess(terms, regs, matches);\n      }\n    }\n  }\n\n  return _04PostProcess(terms, regs, matches);\n};\n\nvar _01MatchAll = matchAll;\n\n/** return anything that doesn't match.\n * returns a simple array of arrays\n */\n\nvar notMatch = function notMatch(p, regs) {\n  var found = {};\n  var arr = _01MatchAll(p, regs);\n  arr.forEach(function (_ref) {\n    var ts = _ref.match;\n    ts.forEach(function (t) {\n      found[t.id] = true;\n    });\n  }); //return anything not found\n\n  var terms = p.terms();\n  var result = [];\n  var current = [];\n  terms.forEach(function (t) {\n    if (found[t.id] === true) {\n      if (current.length > 0) {\n        result.push(current);\n        current = [];\n      }\n\n      return;\n    }\n\n    current.push(t);\n  });\n\n  if (current.length > 0) {\n    result.push(current);\n  }\n\n  return result;\n};\n\nvar not = notMatch;\n\n/** return an array of matching phrases */\n\nvar match_1 = function match_1(regs) {\n  var _this = this;\n\n  var justOne = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  var matches = _01MatchAll(this, regs, justOne); //make them phrase objects\n\n  matches = matches.map(function (_ref) {\n    var match = _ref.match,\n        groups = _ref.groups;\n\n    var p = _this.buildFrom(match[0].id, match.length, groups);\n\n    p.cache.terms = match;\n    return p;\n  });\n  return matches;\n};\n/** return boolean if one match is found */\n\n\nvar has = function has(regs) {\n  var matches = _01MatchAll(this, regs, true);\n  return matches.length > 0;\n};\n/** remove all matches from the result */\n\n\nvar not$1 = function not$1(regs) {\n  var _this2 = this;\n\n  var matches = not(this, regs); //make them phrase objects\n\n  matches = matches.map(function (list) {\n    return _this2.buildFrom(list[0].id, list.length);\n  });\n  return matches;\n};\n/** return a list of phrases that can have this tag */\n\n\nvar canBe$1 = function canBe(tag, world) {\n  var _this3 = this;\n\n  var results = [];\n  var terms = this.terms();\n  var previous = false;\n\n  for (var i = 0; i < terms.length; i += 1) {\n    var can = terms[i].canBe(tag, world);\n\n    if (can === true) {\n      if (previous === true) {\n        //add it to the end\n        results[results.length - 1].push(terms[i]);\n      } else {\n        results.push([terms[i]]); //make a new one\n      }\n\n      previous = can;\n    }\n  } //turn them into Phrase objects\n\n\n  results = results.filter(function (a) {\n    return a.length > 0;\n  }).map(function (arr) {\n    return _this3.buildFrom(arr[0].id, arr.length);\n  });\n  return results;\n};\n\nvar match = {\n  match: match_1,\n  has: has,\n  not: not$1,\n  canBe: canBe$1\n};\n\nvar Phrase = function Phrase(id, length, pool) {\n  _classCallCheck(this, Phrase);\n\n  this.start = id;\n  this.length = length;\n  this.isA = 'Phrase'; // easier than .constructor...\n\n  Object.defineProperty(this, 'pool', {\n    enumerable: false,\n    writable: true,\n    value: pool\n  });\n  Object.defineProperty(this, 'cache', {\n    enumerable: false,\n    writable: true,\n    value: {}\n  });\n  Object.defineProperty(this, 'groups', {\n    enumerable: false,\n    writable: true,\n    value: {}\n  });\n};\n/** create a new Phrase object from an id and length */\n\n\nPhrase.prototype.buildFrom = function (id, length, groups) {\n  var p = new Phrase(id, length, this.pool); //copy-over or replace capture-groups too\n\n  if (groups && Object.keys(groups).length > 0) {\n    p.groups = groups;\n  } else {\n    p.groups = this.groups;\n  }\n\n  return p;\n}; //apply methods\n\n\nObject.assign(Phrase.prototype, match);\nObject.assign(Phrase.prototype, methods$1); //apply aliases\n\nvar aliases = {\n  term: 'terms'\n};\nObject.keys(aliases).forEach(function (k) {\n  return Phrase.prototype[k] = Phrase.prototype[aliases[k]];\n});\nvar Phrase_1 = Phrase;\n\n/** a key-value store of all terms in our Document */\nvar Pool = /*#__PURE__*/function () {\n  function Pool() {\n    var words = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _classCallCheck(this, Pool);\n\n    //quiet this property in console.logs\n    Object.defineProperty(this, 'words', {\n      enumerable: false,\n      value: words\n    });\n  }\n  /** throw a new term object in */\n\n\n  _createClass(Pool, [{\n    key: \"add\",\n    value: function add(term) {\n      this.words[term.id] = term;\n      return this;\n    }\n    /** find a term by it's id */\n\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      return this.words[id];\n    }\n    /** find a term by it's id */\n\n  }, {\n    key: \"remove\",\n    value: function remove(id) {\n      delete this.words[id];\n    }\n  }, {\n    key: \"merge\",\n    value: function merge(pool) {\n      Object.assign(this.words, pool.words);\n      return this;\n    }\n    /** helper method */\n\n  }, {\n    key: \"stats\",\n    value: function stats() {\n      return {\n        words: Object.keys(this.words).length\n      };\n    }\n  }]);\n\n  return Pool;\n}();\n/** make a deep-copy of all terms */\n\n\nPool.prototype.clone = function () {\n  var _this = this;\n\n  var keys = Object.keys(this.words);\n  var words = keys.reduce(function (h, k) {\n    var t = _this.words[k].clone();\n\n    h[t.id] = t;\n    return h;\n  }, {});\n  return new Pool(words);\n};\n\nvar Pool_1 = Pool;\n\n//add forward/backward 'linked-list' prev/next ids\nvar linkTerms = function linkTerms(terms) {\n  terms.forEach(function (term, i) {\n    if (i > 0) {\n      term.prev = terms[i - 1].id;\n    }\n\n    if (terms[i + 1]) {\n      term.next = terms[i + 1].id;\n    }\n  });\n};\n\nvar _linkTerms = linkTerms;\n\n//(Rule-based sentence boundary segmentation) - chop given text into its proper sentences.\n// Ignore periods/questions/exclamations used in acronyms/abbreviations/numbers, etc.\n// @spencermountain 2017 MIT\n//proper nouns with exclamation marks\n// const blacklist = {\n//   yahoo: true,\n//   joomla: true,\n//   jeopardy: true,\n// }\n//regs-\nvar initSplit = /(\\S.+?[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049])(?=\\s+|$)/g;\nvar hasSomething = /\\S/;\nvar isAcronym$1 = /[ .][A-Z]\\.? *$/i;\nvar hasEllipse = /(?:\\u2026|\\.{2,}) *$/;\nvar newLine = /((?:\\r?\\n|\\r)+)/; // Match different new-line formats\n\nvar hasLetter = /[a-z0-9\\u00C0-\\u00FF\\u00a9|\\u00ae|[\\u2000-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff]/i;\nvar startWhitespace = /^\\s+/; // Start with a regex:\n\nvar naiive_split = function naiive_split(text) {\n  var all = []; //first, split by newline\n\n  var lines = text.split(newLine);\n\n  for (var i = 0; i < lines.length; i++) {\n    //split by period, question-mark, and exclamation-mark\n    var arr = lines[i].split(initSplit);\n\n    for (var o = 0; o < arr.length; o++) {\n      all.push(arr[o]);\n    }\n  }\n\n  return all;\n};\n/** does this look like a sentence? */\n\n\nvar isSentence = function isSentence(str, abbrevs) {\n  // check for 'F.B.I.'\n  if (isAcronym$1.test(str) === true) {\n    return false;\n  } //check for '...'\n\n\n  if (hasEllipse.test(str) === true) {\n    return false;\n  } // must have a letter\n\n\n  if (hasLetter.test(str) === false) {\n    return false;\n  }\n\n  var txt = str.replace(/[.!?\\u203D\\u2E18\\u203C\\u2047-\\u2049] *$/, '');\n  var words = txt.split(' ');\n  var lastWord = words[words.length - 1].toLowerCase(); // check for 'Mr.'\n\n  if (abbrevs.hasOwnProperty(lastWord)) {\n    return false;\n  } // //check for jeopardy!\n  // if (blacklist.hasOwnProperty(lastWord)) {\n  //   return false\n  // }\n\n\n  return true;\n};\n\nvar splitSentences = function splitSentences(text, world) {\n  var abbrevs = world.cache.abbreviations;\n  text = text || '';\n  text = String(text);\n  var sentences = []; // First do a greedy-split..\n\n  var chunks = []; // Ensure it 'smells like' a sentence\n\n  if (!text || typeof text !== 'string' || hasSomething.test(text) === false) {\n    return sentences;\n  } // cleanup unicode-spaces\n\n\n  text = text.replace('\\xa0', ' '); // Start somewhere:\n\n  var splits = naiive_split(text); // Filter-out the crap ones\n\n  for (var i = 0; i < splits.length; i++) {\n    var s = splits[i];\n\n    if (s === undefined || s === '') {\n      continue;\n    } //this is meaningful whitespace\n\n\n    if (hasSomething.test(s) === false) {\n      //add it to the last one\n      if (chunks[chunks.length - 1]) {\n        chunks[chunks.length - 1] += s;\n        continue;\n      } else if (splits[i + 1]) {\n        //add it to the next one\n        splits[i + 1] = s + splits[i + 1];\n        continue;\n      }\n    } //else, only whitespace, no terms, no sentence\n\n\n    chunks.push(s);\n  } //detection of non-sentence chunks:\n  //loop through these chunks, and join the non-sentence chunks back together..\n\n\n  for (var _i = 0; _i < chunks.length; _i++) {\n    var c = chunks[_i]; //should this chunk be combined with the next one?\n\n    if (chunks[_i + 1] && isSentence(c, abbrevs) === false) {\n      chunks[_i + 1] = c + (chunks[_i + 1] || '');\n    } else if (c && c.length > 0) {\n      //&& hasLetter.test(c)\n      //this chunk is a proper sentence..\n      sentences.push(c);\n      chunks[_i] = '';\n    }\n  } //if we never got a sentence, return the given text\n\n\n  if (sentences.length === 0) {\n    return [text];\n  } //move whitespace to the ends of sentences, when possible\n  //['hello',' world'] -> ['hello ','world']\n\n\n  for (var _i2 = 1; _i2 < sentences.length; _i2 += 1) {\n    var ws = sentences[_i2].match(startWhitespace);\n\n    if (ws !== null) {\n      sentences[_i2 - 1] += ws[0];\n      sentences[_i2] = sentences[_i2].replace(startWhitespace, '');\n    }\n  }\n\n  return sentences;\n};\n\nvar _01Sentences = splitSentences; // console.log(sentence_parser('john f. kennedy'));\n\nvar wordlike = /\\S/;\nvar isBoundary = /^[!?.]+$/;\nvar naiiveSplit = /(\\S+)/;\nvar isSlash = /[a-z] ?\\/ ?[a-z]*$/;\nvar notWord = {\n  '.': true,\n  '-': true,\n  //dash\n  '–': true,\n  //en-dash\n  '—': true,\n  //em-dash\n  '--': true,\n  '...': true // '/': true, // 'one / two'\n\n};\n\nvar hasHyphen = function hasHyphen(str) {\n  //dont split 're-do'\n  if (/^(re|un)-?[^aeiou]./.test(str) === true) {\n    return false;\n  } //letter-number\n\n\n  var reg = /^([a-z\\u00C0-\\u00FF`\"'/]+)(-|–|—)([a-z0-9\\u00C0-\\u00FF].*)/i;\n\n  if (reg.test(str) === true) {\n    return true;\n  } //support weird number-emdash combo '2010–2011'\n  // let reg2 = /^([0-9]+)(–|—)([0-9].*)/i\n  // if (reg2.test(str)) {\n  //   return true\n  // }\n\n\n  return false;\n}; // 'he / she' should be one word\n\n\nvar combineSlashes = function combineSlashes(arr) {\n  for (var i = 1; i < arr.length - 1; i++) {\n    if (isSlash.test(arr[i])) {\n      arr[i - 1] += arr[i] + arr[i + 1];\n      arr[i] = null;\n      arr[i + 1] = null;\n    }\n  }\n\n  return arr;\n};\n\nvar splitHyphens = function splitHyphens(word) {\n  var arr = []; //support multiple-hyphenated-terms\n\n  var hyphens = word.split(/[-–—]/);\n  var whichDash = '-';\n  var found = word.match(/[-–—]/);\n\n  if (found && found[0]) {\n    whichDash = found;\n  }\n\n  for (var o = 0; o < hyphens.length; o++) {\n    if (o === hyphens.length - 1) {\n      arr.push(hyphens[o]);\n    } else {\n      arr.push(hyphens[o] + whichDash);\n    }\n  }\n\n  return arr;\n};\n\nvar isArray$2 = function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n}; //turn a string into an array of strings (naiive for now, lumped later)\n\n\nvar splitWords = function splitWords(str) {\n  var result = [];\n  var arr = []; //start with a naiive split\n\n  str = str || '';\n\n  if (typeof str === 'number') {\n    str = String(str);\n  }\n\n  if (isArray$2(str)) {\n    return str;\n  }\n\n  var words = str.split(naiiveSplit);\n\n  for (var i = 0; i < words.length; i++) {\n    //split 'one-two'\n    if (hasHyphen(words[i]) === true) {\n      arr = arr.concat(splitHyphens(words[i]));\n      continue;\n    }\n\n    arr.push(words[i]);\n  } //greedy merge whitespace+arr to the right\n\n\n  var carry = '';\n\n  for (var _i = 0; _i < arr.length; _i++) {\n    var word = arr[_i]; //if it's more than a whitespace\n\n    if (wordlike.test(word) === true && notWord.hasOwnProperty(word) === false && isBoundary.test(word) === false) {\n      //put whitespace on end of previous term, if possible\n      if (result.length > 0) {\n        result[result.length - 1] += carry;\n        result.push(word);\n      } else {\n        //otherwise, but whitespace before\n        result.push(carry + word);\n      }\n\n      carry = '';\n    } else {\n      carry += word;\n    }\n  } //handle last one\n\n\n  if (carry) {\n    if (result.length === 0) {\n      result[0] = '';\n    }\n\n    result[result.length - 1] += carry; //put it on the end\n  } // combine 'one / two'\n\n\n  result = combineSlashes(result); // remove empty results\n\n  result = result.filter(function (s) {\n    return s;\n  });\n  return result;\n};\n\nvar _02Words = splitWords;\n\nvar isArray$3 = function isArray(arr) {\n  return Object.prototype.toString.call(arr) === '[object Array]';\n};\n/** turn a string into an array of Phrase objects */\n\n\nvar fromText = function fromText() {\n  var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var world = arguments.length > 1 ? arguments[1] : undefined;\n  var pool = arguments.length > 2 ? arguments[2] : undefined;\n  var sentences = null; //a bit of validation, first\n\n  if (typeof text !== 'string') {\n    if (typeof text === 'number') {\n      text = String(text);\n    } else if (isArray$3(text)) {\n      sentences = text;\n    }\n  } //tokenize into words\n\n\n  sentences = sentences || _01Sentences(text, world);\n  sentences = sentences.map(function (str) {\n    return _02Words(str);\n  }); //turn them into proper objects\n\n  pool = pool || new Pool_1();\n  var phrases = sentences.map(function (terms) {\n    terms = terms.map(function (str) {\n      var term = new Term_1(str);\n      pool.add(term);\n      return term;\n    }); //add next/previous ids\n\n    _linkTerms(terms); //return phrase objects\n\n    var p = new Phrase_1(terms[0].id, terms.length, pool);\n    p.cache.terms = terms;\n    return p;\n  }); //return them ready for a Document object\n\n  return phrases;\n};\n\nvar _01Tokenizer = fromText;\n\nvar fromJSON = function fromJSON(json, world) {\n  var pool = new Pool_1();\n  var phrases = json.map(function (p, k) {\n    var terms = p.terms.map(function (o, i) {\n      var term = new Term_1(o.text);\n      term.pre = o.pre !== undefined ? o.pre : '';\n\n      if (o.post === undefined) {\n        o.post = ' '; //no given space for very last term\n\n        if (i >= p.terms.length - 1) {\n          o.post = '. ';\n\n          if (k >= p.terms.length - 1) {\n            o.post = '.';\n          }\n        }\n      }\n\n      term.post = o.post !== undefined ? o.post : ' ';\n\n      if (o.tags) {\n        o.tags.forEach(function (tag) {\n          return term.tag(tag, '', world);\n        });\n      }\n\n      pool.add(term);\n      return term;\n    }); //add prev/next links\n\n    _linkTerms(terms); // return a proper Phrase object\n\n    return new Phrase_1(terms[0].id, terms.length, pool);\n  });\n  return phrases;\n};\n\nvar fromJSON_1 = fromJSON;\n\nvar _version = '13.3.1';\n\nvar _data = {\n  \"Comparative\": \"true¦better\",\n  \"Superlative\": \"true¦earlier\",\n  \"PresentTense\": \"true¦is,sounds\",\n  \"Value\": \"true¦a few\",\n  \"Noun\": \"true¦a5b4c2f1here,ie,lit,m0no doubt,pd,tce;a,d;t,y;a,ca,o0;l,rp;a,l;d,l,rc\",\n  \"Copula\": \"true¦a1is,w0;as,ere;m,re\",\n  \"PastTense\": \"true¦be3came,d2had,lied,meant,sa2taken,w0;as,e0;nt,re;id;en,gan\",\n  \"Condition\": \"true¦if,unless\",\n  \"Gerund\": \"true¦accord0be0develop0go0result0stain0;ing\",\n  \"Negative\": \"true¦n0;ever,o0;!n,t\",\n  \"QuestionWord\": \"true¦how3wh0;at,e1ich,o0y;!m,se;n,re; come,'s\",\n  \"Plural\": \"true¦records\",\n  \"Conjunction\": \"true¦&,aEbAcuz,how8in caDno7o6p4supposing,t1vers5wh0yet;eth8ile;h0o;eref9o0;!uC;l0rovided that;us;r,therwi6; matt1r;!ev0;er;e0ut;cau1f0;ore;se;lthou1nd,s 0;far as,if;gh\",\n  \"Pronoun\": \"true¦'em,elle,h4i3me,ourselves,she5th1us,we,you0;!rself;e0ou;m,y;!l,t;e0im;!'s\",\n  \"Singular\": \"true¦0:0X;1:10;a0Wb0Kc0Bd04e02fXgShOici1jel0kitty,lNmJnIoHpDquestion mark,rBs7t4u2womW;nc0Rs 2;doll0Dst0F; rex,a3h2ic,ragedy,v show;ere,i1;l0x return;ist0Pky,omeone,t2uper bowl,yst0W;ep3ri1u2;de0Pff;faMmoM;al0i1o2;om,se;a4i0Jl05r3u2;dLrpoD;erogaVobl0O;rt,te0I;bjSceGthers;othi1umb0E;a4ee04o2;del,m2nopo0th0C;!my;n,yf0;i0unch;ead start,o2;l0me3u2;se;! run;adf0entlem5irlZlaci04od,rand3u2;l0y; slam,fa2mo2;th01;an;a5ella,ly,ol0r3un2;di1;iTo2;ntiWsN;mi0thV;conomy,gg,ner5veWx2;ampQecu7;ad7e4innSo2ragonf0ude;cumentFg2i0l0or;gy;ath,t2;ec2;tive;!dy;a8eili1h6i4o2redit card;ttage,u2;riJsin;ty,vil w2;ar;andeliGocol2;ate;n2rD;ary;aAel0lesHo6r4u2;n2tterf0;ti1;eakfast,o2;!th8;dy,tt4y2;!fri2;end;le;nki1r2;ri2;er;d4l0noma0u2;nt;ly; homin4verti2;si1;ng;em\",\n  \"Actor\": \"true¦aJbGcFdCengineIfAgardenIh9instructPjournalLlawyIm8nurse,opeOp5r3s1t0;echnCherapK;ailNcientJoldiGu0;pervKrgeon;e0oofE;ceptionGsearC;hotographClumbColi1r0sychologF;actitionBogrammB;cem6t5;echanic,inist9us4;airdress8ousekeep8;arm7ire0;fight6m2;eputy,iet0;ici0;an;arpent2lerk;ricklay1ut0;ch0;er;ccoun6d2ge7r0ssis6ttenda7;chitect,t0;ist;minist1v0;is1;rat0;or;ta0;nt\",\n  \"Honorific\": \"true¦a03b00cSdReQfiLgKhon,jr,king,lJmEoDp8queen,r4s0taoiseach,vice7;e1fc,gt,ir,r,u0;ltTpt,rg;c0nDrgeaL;ond liJretary;abbi,e0;ar1pAs,v0;!erend; admirY;astPhd,r0vt;esideEi1of0;!essN;me mini5nce0;!ss;fficOp,rd;a3essrs,i2lle,me,r1s0;!tr;!s;stK;gistrate,j,r6yF;i3lb,t;en,ov;eld mar3rst l0;ady,i0;eutena0;nt;shG;sq,xcellency;et,oct6r,utchess;apt6hance4mdr,o0pl;lonel,m2ngress0unci3;m0wom0;an;dr,mand5;ll0;or;!ain;ldg,rig0;!adi0;er;d0sst,tty,yatullah;j,m0v;!ir0;al\",\n  \"SportsTeam\": \"true¦0:1A;1:1H;2:1G;a1Eb16c0Td0Kfc dallas,g0Ihouston 0Hindiana0Gjacksonville jagua0k0El0Bm01newToQpJqueens parkIreal salt lake,sAt5utah jazz,vancouver whitecaps,w3yW;ashington 3est ham0Rh10;natio1Oredski2wizar0W;ampa bay 6e5o3;ronto 3ttenham hotspur;blue ja0Mrapto0;nnessee tita2xasC;buccanee0ra0K;a7eattle 5heffield0Kporting kansas0Wt3;. louis 3oke0V;c1Frams;marine0s3;eah15ounG;cramento Rn 3;antonio spu0diego 3francisco gJjose earthquak1;char08paA; ran07;a8h5ittsburgh 4ortland t3;imbe0rail blaze0;pirat1steele0;il3oenix su2;adelphia 3li1;eagl1philNunE;dr1;akland 3klahoma city thunder,rlando magic;athle0Mrai3;de0; 3castle01;england 7orleans 6york 3;city fc,g4je0FknXme0Fred bul0Yy3;anke1;ian0D;pelica2sain0C;patrio0Brevolut3;ion;anchester Be9i3ontreal impact;ami 7lwaukee b6nnesota 3;t4u0Fvi3;kings;imberwolv1wi2;rewe0uc0K;dolphi2heat,marli2;mphis grizz3ts;li1;cXu08;a4eicesterVos angeles 3;clippe0dodDla9; galaxy,ke0;ansas city 3nE;chiefs,roya0E; pace0polis colU;astr06dynamo,rockeTtexa2;olden state warrio0reen bay pac3;ke0;.c.Aallas 7e3i05od5;nver 5troit 3;lio2pisto2ti3;ge0;broncZnuggeM;cowbo4maver3;ic00;ys; uQ;arCelKh8incinnati 6leveland 5ol3;orado r3umbus crew sc;api5ocki1;brow2cavalie0india2;bengaWre3;ds;arlotte horAicago 3;b4cubs,fire,wh3;iteB;ea0ulR;diff3olina panthe0; c3;ity;altimore 9lackburn rove0oston 5rooklyn 3uffalo bilN;ne3;ts;cel4red3; sox;tics;rs;oriol1rave2;rizona Ast8tlanta 3;brav1falco2h4u3;nited;aw9;ns;es;on villa,r3;os;c5di3;amondbac3;ks;ardi3;na3;ls\",\n  \"Uncountable\": \"true¦a1Ib1Ac11d0Ye0Rf0Lg0Hh0Ci08j07knowled1Hl02mUnews,oTpQrLsAt5vi4w0;a2ea05i1oo0;d,l;ldlife,ne;rmth,t17;neg0Yol06tae;e3h2oothpaste,r0una;affPou0;ble,sers,t;ermod1Eund12;a,nnis;a8cene04eri0Oh7il6kittl0Onow,o5p3t1u0;g0Rnshi0H;ati1De0;am,el;ace16e0;ci0Jed;ap,cc0U;k,v0T;eep,ingl0G;d04fe10l0nd;m0St;a3e1ic0;e,ke0D;c0laxa09search;ogni08rea08;bi09in;aJe1hys10last5o0ressV;lit0Zrk,w0J;a0Vtrol;bstetr0Xil,xygen;a5e3ilk,o2u0;mps,s0;ic;nGo0A;a0chan0S;slZt;chine0il,themat0Q; learn05ry;aught08e2i1ogi0Nu0;ck,g0C;ce,ghtn02ngui0LteratH;a0isG;th04;ewel7usti0G;ce,mp0nformaOtself;a0ortan0E;ti0;en0C;a3isto2o0;ck0mework,n0spitali06;ey;ry;ir,libut,ppi7;en01o1r0um,ymna08;a6ound;l0ssip;d,f;i4lour,o1urnit0;ure;od,rgive0uriNwl;ne0;ss;c6sh;conomZduca5lectr4n2quip3thZvery0;body,o0thE;ne;joy0tertain0;ment;iciNonU;tiF;ar1iabet0raugh1;es;ts;a7elcius,h3ivPl2o0urrency;al,ld w0nfusiAttA;ar;assMoth2;aos,e0;e1w0;ing;se;r4sh;a4eef,i1lood,owls,read,utt0;er;lliar1s0;on;ds;g0ss;ga0;ge;c6dvi5ero3ir2mnes1rt,thl0;et7;ty;craft;b4d0naut4;ynam3;ce;id,ou0;st0;ics\",\n  \"Infinitive\": \"true¦0:6K;1:6Y;2:57;3:6V;4:6W;5:5Z;6:67;7:6Q;8:6I;9:6U;A:6P;B:6S;C:6D;D:6Z;E:56;F:5P;a6Cb61c52d4Ae3Uf3Hg3Bh34i2Rj2Pk2Nl2Fm25n22o1Xp1Iques3Ir0Qs05tXuSvOwHyG;awn,ield;aJe1Yhist6iIoGre65;nd0rG;k,ry;pe,sh,th0;lk,nHrGsh,tCve;n,raD;d0t;aIiGo9;eGsA;!w;l6Cry;nHpGr3se;gra4Mli3Z;dGi9lo5Spub3O;erGo;mi58w1I;aMeLhKoJrHuGwi7;ne,rn;aGe0Mi5Nu7y;de,in,nsf0p,v5F;r2XuC;ank,reat2N;nd,st;lk,rg1Ps9;aZcWeVhTi4Akip,lSmRnee3Jo4YpQtJuGwitC;bmAck,ff0gge7ppHrGspe5;ge,pri1rou4Vvi4;ly,o34;aLeKoJrHuG;dy,mb6;aEeGi4;ngth2Dss,tC;p,re;m,p;in,ke,r0Qy;laFoil,rink6;e1Xi6o3H;am,ip;a2iv0oG;ck,ut;arCem,le5n1r4tt6;aHo2rG;atCew;le,re;il,ve;a05eIisk,oHuG;in,le,sh;am,ll;a01cZdu8fYgXje5lUmTnt,pQquPsKtJvGwa5O;eGiew,o34;al,l,rG;se,t;aEi2u40;eJi7oItG;!o2rG;i5uc1Y;l4rt;mb6nt,r4;e7i2;air,eHlGo3ZreseD;a8y;at;aEemb0i3Vo4;aHeGi4y;a1nt;te,x;a56r0I;act1Wer,le5u1;a11ei4k5IoGyc6;gni2Anci6rd;ch,li29s5G;i1nG;ge,k;aTerSiRlOoMrIuG;b1Zll,mp,rGsh;cha1s4J;ai1eIiDoG;cGdu8greBhibAmi1te7vi2T;eBlaim;di5pa2ss,veD;iDp,rtr3ZsGur;e,t;aHuG;g,n3;n,y;ck,le;fo30mAsi7;ck,iDrt4Fss,u1;bJccur,ff0pera9utweIverGwe;co40lap,ta20u1wG;helm;igh;ser4taE;eHotG;e,i8;ed,gle5;aLeKiIoHuG;ltip3Crd0;nit11ve;nGrr10;d,g6us;asu2lt,n0Nr3;intaEna3rHtG;ch,t0;ch,kGry;et;aLeKiIoGu1B;aGck,ok,ve;d,n;ft,ke,mAnGst2Wve;e,k;a2Dc0Et;b0Nck,uG;gh,nC;iGno2Z;ck,ll,ss;am,oEuG;d3mp;gno2mQnGss3C;cOdica9flu0MhNsKtIvG;eGol4;nt,st;erGrodu8;a5fe2;i7tG;aGru5;ll;abAibA;lu1Er1C;agi22pG;lemeDo20ro4;aKeIi2oHuG;nt,rry;n02pe,st;aGlp;d,t;nd6ppGrm,te;en;aKloBove1MrIuG;arGeBi13;ant33d;aGip,umb6;b,sp;in,th0ze;aQeaPiNlLoIracHuncG;ti3D;tu2;cus,lHrG;ce,eca7m,s2V;d,l1Z;aFoG;at,od,w;gu2lGniFx;e,l;r,tu2;il,vG;or;a13cho,le5mSnPstNvalua9xG;a0AcLerKi7pGte17;a16eHi2laEoGreB;rt,se;ct,riG;en8;ci1t;el,han3;abGima9;liF;ab6couXdHfor8ga3han8j03riCsu2t0vG;isi2Qy;!u2;body,er3pG;hasiGow0;ze;a06eUiLoKrHuG;mp;aHeBiG;ft;g,in;d3ubt;ff0p,re5sHvG;iYor8;aKcHliGmiBpl16tinguiF;ke;oGuB;uGv0;ra3;gr1TppG;ear,ro4;cNem,fLliv0ma0Dny,pKsHterG;mi0E;cribe,er4iHtrG;oy;gn,re;a09e08i5osA;eGi09y;at,ct;iIlHrG;ea1;a2i05;de;ma3n8re,te;a0Ae09h06i9l04oJrG;aHeGoBuFy;a9dA;ck,ve;llZmSnHok,py,uGv0;gh,nt;cePdu5fMsKtIvG;eGin8;rt,y;aEin0SrG;a7ibu9ol;iGtitu9;d0st;iHoGroD;rm;gu2rm;rn;biLfoKmaJpG;a2laE;in;re;nd;rt;ne;ap1e5;aGip,o1;im,w;aHeG;at,ck,w;llen3n3r3se;a1nt0;ll,ncIrGt0u1;eGry;!en;el;aPeMloLoJruFuG;lGry;ly;sh;a7mb,o7rrGth0un8;ow;ck;ar,lHnefAtrG;ay;ie4ong;ng,se;band0Jc0Bd06ffo05gr04id,l01mu1nYppTrQsKttGvoid,waA;acIeHra5;ct;m0Fnd;h,k;k,sG;eIiHocia9uG;me;gn,st;mb6rt;le;chHgGri4;ue;!i4;eaJlIroG;aCve;ch;aud,y;l,r;noun8sw0tG;icipa9;ce;lHt0;er;e3ow;ee;rd;aRdIju7mAoR;it;st;!reB;ss;cJhie4knowled3tiva9;te;ge;ve;eIouDu1;se;nt;pt;on\",\n  \"Unit\": \"true¦0:19;a14b12c0Od0Ne0Lf0Gg0Ch09in0Hjoule0k02l00mNnMoLpIqHsqCt7volts,w6y4z3°2µ1;g,s;c,f,n;b,e2;a0Nb,d0Dears old,o1;tt0H;att0b;able4b3d,e2on1sp;!ne0;a2r0D;!l,sp;spo04; ft,uare 1;c0Id0Hf3i0Fkilo0Jm1ya0E;e0Mil1;e0li0H;eet0o0D;t,uart0;ascals,e2i1ou0Pt;c0Mnt0;rcent,t02;hms,uYz;an0JewtT;/s,b,e9g,i3l,m2p1²,³;h,s;!²;!/h,cro5l1;e1li08;! pFs1²;! 1;anEpD;g06s0B;gQter1;! 2s1;! 1;per second;b,i00m,u1x;men0x0;b,elvin0g,ilo2m1nR;!/h,ph,²;byZgXmeter1;! p2s1;! p1;er1; hour;e1g,r0z;ct1rtz0;aXogQ;al2b,igAra1;in0m0;!l1;on0;a4emtPl2t1;²,³; oz,uid ou1;nce0;hrenheit0rad0;b,x1;abyH;eciCg,l,mA;arat0eAg,m9oulomb0u1;bic 1p0;c5d4fo3i2meAya1;rd0;nch0;ot0;eci2;enti1;me4;!²,³;lsius0nti1;g2li1me1;ter0;ram0;bl,y1;te0;c4tt1;os1;eco1;nd0;re0;!s\",\n  \"Organization\": \"true¦0:46;a3Ab2Qc2Ad21e1Xf1Tg1Lh1Gi1Dj19k17l13m0Sn0Go0Dp07qu06rZsStFuBv8w3y1;amaha,m0Xou1w0X;gov,tu2S;a3e1orld trade organizati41;lls fargo,st1;fie22inghou16;l1rner br3D;-m11gree31l street journ25m11;an halNeriz3Wisa,o1;dafo2Gl1;kswagLvo;bs,kip,n2ps,s1;a tod2Rps;es35i1;lev2Xted natio2Uv; mobi2Kaco bePd bMeAgi frida9h3im horto2Tmz,o1witt2W;shiba,y1;ota,s r Y;e 1in lizzy;b3carpen33daily ma2Xguess w2holli0rolling st1Ms1w2;mashing pumpki2Ouprem0;ho;ea1lack eyed pe3Fyrds;ch bo1tl0;ys;l2s1;co,la m12;efoni07us;a6e4ieme2Gnp,o2pice gir5ta1ubaru;rbucks,to2N;ny,undgard1;en;a2Rx pisto1;ls;few25insbu26msu1X;.e.m.,adiohead,b6e3oyal 1yan2X;b1dutch she4;ank;/max,aders dige1Ed 1vl32;bu1c1Uhot chili peppe2Klobst28;ll;c,s;ant2Vizno2F;an5bs,e3fiz24hilip morrBi2r1;emier27octer & gamb1Rudenti14;nk floyd,zza hut;psi28tro1uge08;br2Qchina,n2Q; 2ason1Xda2G;ld navy,pec,range juli2xf1;am;us;a9b8e5fl,h4i3o1sa,wa;kia,tre dame,vart1;is;ke,ntendo,ss0K;l,s;c,st1Etflix,w1; 1sweek;kids on the block,york08;a,c;nd1Us2t1;ional aca2Fo,we0Q;a,cYd0O;aAcdonald9e5i3lb,o1tv,yspace;b1Nnsanto,ody blu0t1;ley crue,or0O;crosoft,t1;as,subisO;dica3rcedes2talli1;ca;!-benz;id,re;'s,s;c's milk,tt13z1Y;'ore09a3e1g,ittle caesa1Ktd;novo,x1;is,mark; pres5-z-boy,bour party;atv,fc,kk,m1od1K;art;iffy lu0Lo3pmorgan1sa;! cha1;se;hnson & johns1Sy d1R;bm,hop,n1tv;c,g,te1;l,rpol; & m,asbro,ewlett-packaTi3o1sbc,yundai;me dep1n1J;ot;tac1zbollah;hi;eneral 6hq,l5mb,o2reen d0Iu1;cci,ns n ros0;ldman sachs,o1;dye1g0B;ar;axo smith kliZencore;electr0Im1;oto0V;a3bi,da,edex,i1leetwood mac,oGrito-l0A;at,nancial1restoV; tim0;cebook,nnie mae;b06sa,u3xxon1; m1m1;ob0H;!rosceptics;aiml0Ae5isney,o3u1;nkin donuts,po0Wran dur1;an;j,w j1;on0;a,f leppa3ll,p2r spiegZstiny's chi1;ld;eche mode,t;rd;aEbc,hBi9nn,o3r1;aigsli5eedence clearwater reviv1ossra05;al;!ca c5l4m1o0Ast05;ca2p1;aq;st;dplMgate;ola;a,sco1tigroup;! systems;ev2i1;ck fil-a,na daily;r0Hy;dbury,pital o1rl's jr;ne;aGbc,eCfAl6mw,ni,o2p,r1;exiteeWos;ei3mbardiJston 1;glo1pizza;be;ng;ack & deckFo2ue c1;roX;ckbuster video,omingda1;le; g1g1;oodriN;cht3e ge0n & jer2rkshire hathaw1;ay;ryH;el;nana republ3s1xt5y5;f,kin robbi1;ns;ic;bXcSdidRerosmith,ig,lLmFnheuser-busEol,ppleAr7s3t&t,v2y1;er;is,on;hland2s1;n,ociated F; o1;il;by4g2m1;co;os; compu2bee1;'s;te1;rs;ch;c,d,erican3t1;!r1;ak; ex1;pre1;ss; 4catel2t1;air;!-luce1;nt;jazeera,qae1;da;as;/dc,a3er,t1;ivisi1;on;demy of scienc0;es;ba,c\",\n  \"Demonym\": \"true¦0:16;1:13;a0Wb0Nc0Cd0Ae09f07g04h02iYjVkTlPmLnIomHpDqatari,rBs7t5u4v3wel0Rz2;am0Fimbabwe0;enezuel0ietnam0H;g9krai1;aiwThai,rinida0Iu2;ni0Qrkmen;a4cot0Ke3ingapoOlovak,oma0Tpa05udRw2y0X;edi0Kiss;negal0Br08;mo0uU;o6us0Lw2;and0;a3eru0Hhilipp0Po2;li0Ertugu06;kist3lesti1na2raguay0;ma1;ani;amiZi2orweP;caragu0geri2;an,en;a3ex0Mo2;ngo0Erocc0;cedo1la2;gasy,y08;a4eb9i2;b2thua1;e0Dy0;o,t02;azakh,eny0o2uwaiti;re0;a2orda1;ma0Bp2;anN;celandic,nd4r2sraeli,ta02vo06;a2iT;ni0qi;i0oneV;aiDin2ondur0unN;di;amDe2hanai0reek,uatemal0;or2rm0;gi0;i2ren7;lipino,n4;cuadoVgyp6ngliJsto1thiopi0urope0;a2ominXut4;niH;a9h6o4roa3ub0ze2;ch;ti0;lom2ngol5;bi0;a6i2;le0n2;ese;lifor1m2na3;bo2eroo1;di0;angladeshi,el8o6r3ul2;gaG;aziBi2;ti2;sh;li2s1;vi0;aru2gi0;si0;fAl7merBngol0r5si0us2;sie,tr2;a2i0;li0;gent2me1;ine;ba1ge2;ri0;ni0;gh0r2;ic0;an\",\n  \"Possessive\": \"true¦anyAh5its,m3noCo1sometBthe0yo1;ir1mselves;ur0;!s;i8y0;!se4;er1i0;mse2s;!s0;!e0;lf;o1t0;hing;ne\",\n  \"Currency\": \"true¦$,aud,bScQdLeurKfJgbp,hkd,iIjpy,kGlEp8r7s3usd,x2y1z0¢,£,¥,ден,лв,руб,฿,₡,₨,€,₭,﷼;lotySł;en,uanR;af,of;h0t5;e0il5;k0q0;elM;iel,oubleLp,upeeL;e2ound st0;er0;lingI;n0soH;ceGn0;ies,y;e0i8;i,mpi7;n,r0wanzaCyatC;!onaBw;ls,nr;ori7ranc9;!o8;en3i2kk,o0;b0ll2;ra5;me4n0rham4;ar3;ad,e0ny;nt1;aht,itcoin0;!s\",\n  \"City\": \"true¦a2Wb26c1Wd1Re1Qf1Og1Ih1Ai18jakar2Hk0Zl0Tm0Gn0Co0ApZquiYrVsLtCuBv8w3y1z0;agreb,uri1Z;ang1Te0okohama;katerin1Hrev34;ars3e2i0rocl3;ckl0Vn0;nipeg,terth0W;llingt1Oxford;aw;a1i0;en2Hlni2Z;lenc2Uncouv0Gr2G;lan bat0Dtrecht;a6bilisi,e5he4i3o2rondheim,u0;nVr0;in,ku;kyo,ronIulouC;anj23l13miso2Jra2A; haJssaloni0X;gucigalpa,hr2Ol av0L;i0llinn,mpe2Bngi07rtu;chu22n2MpT;a3e2h1kopje,t0ydney;ockholm,uttga12;angh1Fenzh1X;o0KvZ;int peters0Ul3n0ppo1F; 0ti1B;jo0salv2;se;v0z0Q;adU;eykjavik,i1o0;me,sario,t25;ga,o de janei17;to;a8e6h5i4o2r0ueb1Qyongya1N;a0etor24;gue;rt0zn24; elizabe3o;ls1Grae24;iladelph1Znom pe07oenix;r0tah tik19;th;lerJr0tr10;is;dessa,s0ttawa;a1Hlo;a2ew 0is;delTtaip0york;ei;goya,nt0Upl0Uv1R;a5e4i3o1u0;mb0Lni0I;nt0scH;evideo,real;l1Mn01skolc;dellín,lbour0S;drid,l5n3r0;ib1se0;ille;or;chest0dalWi0Z;er;mo;a4i1o0vAy01;nd00s angel0F;ege,ma0nz,sbZverpo1;!ss0;ol; pla0Iusan0F;a5hark4i3laipeda,o1rak0uala lump2;ow;be,pavog0sice;ur;ev,ng8;iv;b3mpa0Kndy,ohsiu0Hra0un03;c0j;hi;ncheMstanb0̇zmir;ul;a5e3o0; chi mi1ms,u0;stI;nh;lsin0rakliG;ki;ifa,m0noi,va0A;bu0SiltD;alw4dan3en2hent,iza,othen1raz,ua0;dalaj0Gngzhou;bu0P;eUoa;sk;ay;es,rankfu0;rt;dmont4indhovU;a1ha01oha,u0;blRrb0Eshanbe;e0kar,masc0FugavpiJ;gu,je0;on;a7ebu,h2o0raioJuriti01;lo0nstanJpenhagNrk;gFmbo;enn3i1ristchur0;ch;ang m1c0ttagoL;ago;ai;i0lgary,pe town,rac4;ro;aHeBirminghWogoAr5u0;char3dap3enos air2r0sZ;g0sa;as;es;est;a2isba1usse0;ls;ne;silPtisla0;va;ta;i3lgrade,r0;g1l0n;in;en;ji0rut;ng;ku,n3r0sel;celo1ranquil0;la;na;g1ja lu0;ka;alo0kok;re;aBb9hmedabad,l7m4n2qa1sh0thens,uckland;dod,gabat;ba;k0twerp;ara;m5s0;terd0;am;exandr0maty;ia;idj0u dhabi;an;lbo1rh0;us;rg\",\n  \"Abbreviation\": \"true¦a0Tb0Qc0Kd0Ie0Ff0Cg0Ah08i06j04k02l00mRnOoNpIqHrFs9t6u5v2w0yb,µg;is0r,y0L;!c;a,b,e1i0ol,s,t;tro,vo;r,t;niv,safa,t;b1ce,d,e0sp;l,mp,nn,x;!l,sp;ask,e3fc,gt,i2q1r,s,t,u0;pt,rg;! ft;r,tu;c,nVp0;!t;b,d,e0;pSs,v;t,ue;a,d,enn3hd,l,p,r1s0t,vt;!a,eud;ef,o0;b,f,n;!a;ct,kla,nt,p,rd,z;e0ov;b0e;!r;a7b,d,essrs,g,i4l3m2p1rHs0t;!tr;h,s;!e;!le;!n1s0;c,ter;!n;!j,r,sc;at,b,it,lb,m,ng,t0x;!d;an6b,g,m0;!ph;an,d,r,u0;l,n;a,da,e,n0;c,f;g,on,r0wy,z;!s;a0b,en,ov;!l;e1ig,l0m,r,t,y;! oz,a;b,m;a,g,ng,s1tc,x0;!p;p,q,t;ak,e0g,ist,l,m,r;c,f,pt,t;a3ca,g,l,m2o0pl,res,t,yn;!l0mdr,nn,rp;!o;!dr;!l0pt;!if;a,c,l1r0;ig,os;!dg,vd;d4l3p2r1ss0tty,ug,ve;n,t;c,iz;prox,r,t;!ta;!j,m,v\",\n  \"Country\": \"true¦0:38;1:2L;a2Wb2Dc21d1Xe1Rf1Lg1Bh19i13j11k0Zl0Um0Gn05om3CpZqat1JrXsKtCu6v4wal3yemTz2;a24imbabwe;es,lis and futu2X;a2enezue31ietnam;nuatu,tican city;.5gTkraiZnited 3ruXs2zbeE;a,sr;arab emirat0Kkingdom,states2;! of am2X;k.,s.2; 27a.;a7haBimor-les0Bo6rinidad4u2;nis0rk2valu;ey,me2Xs and caic1T; and 2-2;toba1J;go,kel0Ynga;iw2Vji2nz2R;ki2T;aCcotl1eBi8lov7o5pa2Bri lanka,u4w2yr0;az2ed9itzerl1;il1;d2Qriname;lomon1Vmal0uth 2;afr2IkLsud2O;ak0en0;erra leoEn2;gapo1Wt maart2;en;negKrb0ychellY;int 2moa,n marino,udi arab0;hele24luc0mart1Z;epublic of ir0Com2Cuss0w2;an25;a3eHhilippinTitcairn1Ko2uerto riM;l1rtugE;ki2Bl3nama,pua new0Tra2;gu6;au,esti2;ne;aAe8i6or2;folk1Gth3w2;ay; k2ern mariana1B;or0M;caragua,ger2ue;!ia;p2ther18w zeal1;al;mib0u2;ru;a6exi5icro09o2yanm04;ldova,n2roc4zamb9;a3gol0t2;enegro,serrat;co;c9dagascZl6r4urit3yot2;te;an0i14;shall0Vtin2;ique;a3div2i,ta;es;wi,ys0;ao,ed00;a5e4i2uxembourg;b2echtenste10thu1E;er0ya;ban0Gsotho;os,tv0;azakh1De2iriba02osovo,uwait,yrgyz1D;eling0Jnya;a2erF;ma15p1B;c6nd5r3s2taly,vory coast;le of m19rael;a2el1;n,q;ia,oI;el1;aiSon2ungary;dur0Mg kong;aAermany,ha0Pibralt9re7u2;a5ern4inea2ya0O;!-biss2;au;sey;deloupe,m,tema0P;e2na0M;ce,nl1;ar;bTmb0;a6i5r2;ance,ench 2;guia0Dpoly2;nes0;ji,nl1;lklandTroeT;ast tim6cu5gypt,l salv5ngl1quatorial3ritr4st2thiop0;on0; guin2;ea;ad2;or;enmark,jibou4ominica3r con2;go;!n B;ti;aAentral african 9h7o4roat0u3yprQzech2; 8ia;ba,racao;c3lo2morPngo-brazzaville,okFsta r03te d'ivoiK;mb0;osD;i2ristmasF;le,na;republic;m2naTpe verde,yman9;bod0ero2;on;aFeChut00o8r4u2;lgar0r2;kina faso,ma,undi;azil,itish 2unei;virgin2; is2;lands;liv0nai4snia and herzegoviGtswaGuvet2; isl1;and;re;l2n7rmuF;ar2gium,ize;us;h3ngladesh,rbad2;os;am3ra2;in;as;fghaFlCmAn5r3ustr2zerbaijH;al0ia;genti2men0uba;na;dorra,g4t2;arct6igua and barbu2;da;o2uil2;la;er2;ica;b2ger0;an0;ia;ni2;st2;an\",\n  \"Region\": \"true¦0:1U;a20b1Sc1Id1Des1Cf19g13h10i0Xj0Vk0Tl0Qm0FnZoXpSqPrMsDtAut9v6w3y1zacatec22;o05u1;cat18kZ;a1est vi4isconsin,yomi14;rwick0shington1;! dc;er2i1;rgin1S;acruz,mont;ah,tar pradesh;a2e1laxca1DuscaA;nnessee,x1R;bas0Kmaulip1QsmJ;a6i4o2taf0Ou1ylh13;ffVrr00s0Y;me10no1Auth 1;cSdR;ber1Ic1naloa;hu0Sily;n2skatchew0Rxo1;ny; luis potosi,ta catari1I;a1hode7;j1ngp02;asth0Mshahi;inghai,u1;e1intana roo;bec,ensWreta0E;ara4e2rince edward1; isU;i,nnsylv1rnambu02;an14;!na;axa0Ndisha,h1klaho1Bntar1reg4x04;io;ayarit,eBo3u1;evo le1nav0L;on;r1tt0Rva scot0X;f6mandy,th1; 1ampton0;c3d2yo1;rk0;ako0Y;aroli0V;olk;bras0Xva01w1; 2foundland1;! and labrador;brunswick,hamp0jers1mexiJyork state;ey;a6i2o1;nta0Nrelos;ch3dlanBn2ss1;issippi,ouri;as geraGneso0M;igQoacQ;dhya,harasht04ine,ni3r1ssachusetts;anhao,y1;land;p1toba;ur;anca0e1incoln0ouis8;e1iH;ds;a1entucky,hul0A;ns08rnata0Dshmir;alis1iangxi;co;daho,llino2nd1owa;ia05;is;a2ert1idalEunA;ford0;mp0waii;ansu,eorgWlou5u1;an2erre1izhou,jarat;ro;ajuato,gdo1;ng;cester0;lori2uji1;an;da;sex;e4o2uran1;go;rs1;et;lawaErby0;a8ea7hi6o1umbrH;ahui4l3nnectic2rsi1ventry;ca;ut;iMorado;la;apEhuahua;ra;l8m1;bridge0peche;a5r4uck1;ingham0;shi1;re;emen,itish columb3;h2ja cal1sque,var2;iforn1;ia;guascalientes,l4r1;izo2kans1;as;na;a2ber1;ta;ba2s1;ka;ma\",\n  \"FemaleName\": \"true¦0:FY;1:G2;2:FR;3:FD;4:FC;5:EP;6:ER;7:FS;8:GF;9:EZ;A:GB;B:E5;C:FO;D:FL;E:G8;F:EG;aE2bD4cB8dAIe9Gf91g8Hh83i7Sj6Uk60l4Om38n2To2Qp2Fqu2Er1Os0Qt04ursu6vUwOyLzG;aJeHoG;e,la,ra;lGna;da,ma;da,ra;as7EeHol1TvG;et5onB9;le0sen3;an9endBNhiB4iG;lInG;if3AniGo0;e,f39;a,helmi0lGma;a,ow;aMeJiG;cHviG;an9XenG1;kCZtor3;da,l8Vnus,rG;a,nGoniD2;a,iDC;leGnesEC;nDLrG;i1y;aSePhNiMoJrGu6y4;acG3iGu0E;c3na,sG;h9Mta;nHrG;a,i;i9Jya;a5IffaCGna,s7;al3eGomasi0;a,l8Go6Xres1;g7Uo6WrHssG;!a,ie;eFi,ri8;bNliMmKnIrHs7tGwa0;ia0um;a,yn;iGya;a,ka,s7;a4e4iGmCAra;!ka;a,t7;at7it7;a05carlet2Ye04hUiSkye,oQtMuHyG;bFJlvi1;e,sHzG;an2Tet5ie,y;anGi8;!a,e,nG;aDe;aIeG;fGl3DphG;an2;cF8r6;f3nGphi1;d4ia,ja,ya;er4lv3mon1nGobh75;dy;aKeGirlBLo0y6;ba,e0i6lIrG;iGrBPyl;!d70;ia,lBV;ki4nIrHu0w0yG;la,na;i,leAon,ron;a,da,ia,nGon;a,on;l5Yre0;bMdLi9lKmIndHrGs7vannaD;aDi0;ra,y;aGi4;nt7ra;lBNome;e,ie;in1ri0;a02eXhViToHuG;by,thBK;bQcPlOnNsHwe0xG;an94ie,y;aHeGie,lE;ann8ll1marBFtB;!lGnn1;iGyn;e,nG;a,d7W;da,i,na;an9;hel53io;bin,erByn;a,cGkki,na,ta;helBZki;ea,iannDXoG;da,n12;an0bIgi0i0nGta,y0;aGee;!e,ta;a,eG;cARkaD;chGe,i0mo0n5EquCDvCy0;aCCelGi9;!e,le;een2ia0;aMeLhJoIrG;iGudenAW;scil1Uyamva9;lly,rt3;ilome0oebe,ylG;is,lis;arl,ggy,nelope,r6t4;ige,m0Fn4Oo6rvaBBtHulG;a,et5in1;ricGsy,tA8;a,e,ia;ctav3deHfAWlGphAW;a,ga,iv3;l3t5;aQePiJoGy6;eHrG;aDeCma;ll1mi;aKcIkGla,na,s7ta;iGki;!ta;hoB2k8BolG;a,eBH;!mh;l7Tna,risF;dIi5PnHo23taG;li1s7;cy,et5;eAiCO;a01ckenz2eViLoIrignayani,uriBGyG;a,rG;a,na,tAS;i4ll9XnG;a,iG;ca,ka,qB4;a,chOkaNlJmi,nIrGtzi;aGiam;!n9;a,dy,erva,h,n2;a,dIi9JlG;iGy;cent,e;red;!e6;ae6el3G;ag4KgKi,lHrG;edi61isFyl;an2iGliF;nGsAM;a,da;!an,han;b08c9Ed06e,g04i03l01nZrKtJuHv6Sx87yGz2;a,bell,ra;de,rG;a,eC;h75il9t2;a,cSgOiJjor2l6In2s7tIyG;!aGbe5QjaAlou;m,n9S;a,ha,i0;!aIbALeHja,lEna,sGt53;!a,ol,sa;!l06;!h,m,nG;!a,e,n1;arIeHie,oGr3Kueri5;!t;!ry;et3IiB;elGi61y;a,l1;dGon,ue6;akranBy;iGlo36;a,ka,n9;a,re,s2;daGg2;!l2W;alEd2elGge,isBGon0;eiAin1yn;el,le;a0Ie08iWoQuKyG;d3la,nG;!a,dHe9SnGsAQ;!a,e9R;a,sAO;aB1cJelIiFlHna,pGz;e,iB;a,u;a,la;iGy;a2Ae,l25n9;is,l1GrHtt2uG;el6is1;aIeHi8na,rG;a6Zi8;lei,n1tB;!in1;aQbPd3lLnIsHv3zG;!a,be4Ket5z2;a,et5;a,dG;a,sGy;ay,ey,i,y;a,iaIlG;iGy;a8Ge;!n4F;b7Terty;!n5R;aNda,e0iLla,nKoIslARtGx2;iGt2;c3t3;la,nGra;a,ie,o4;a,or1;a,gh,laG;!ni;!h,nG;a,d4e,n4N;cNdon7Si6kes7na,rMtKurIvHxGy6;mi;ern1in3;a,eGie,yn;l,n;as7is7oG;nya,ya;a,isF;ey,ie,y;aZeUhadija,iMoLrIyG;lGra;a,ee,ie;istGy5B;a,en,iGy;!e,n48;ri,urtn9A;aMerLl99mIrGzzy;a,stG;en,in;!berlG;eGi,y;e,y;a,stC;!na,ra;el6PiJlInHrG;a,i,ri;d4na;ey,i,l9Qs2y;ra,s7;c8Wi5XlOma6nyakumari,rMss5LtJviByG;!e,lG;a,eG;e,i78;a5EeHhGi3PlEri0y;ar5Cer5Cie,leCr9Fy;!lyn73;a,en,iGl4Uyn;!ma,n31sF;ei72i,l2;a04eVilToMuG;anKdJliGst56;aHeGsF;!nAt0W;!n8X;i2Ry;a,iB;!anLcelEd5Vel71han6IlJni,sHva0yG;a,ce;eGie;fi0lEph4X;eGie;en,n1;!a,e,n36;!i10lG;!i0Z;anLle0nIrHsG;i5Qsi5Q;i,ri;!a,el6Pif1RnG;a,et5iGy;!e,f1P;a,e72iHnG;a,e71iG;e,n1;cLd1mi,nHqueliAsmin2Uvie4yAzG;min8;a8eHiG;ce,e,n1s;!lGsFt06;e,le;inHk2lEquelG;in1yn;da,ta;lPmNnMo0rLsHvaG;!na;aHiGob6U;do4;!belGdo4;!a,e,l2G;en1i0ma;a,di4es,gr5R;el9ogG;en1;a,eAia0o0se;aNeKilHoGyacin1N;ll2rten1H;aHdGlaH;a,egard;ry;ath0WiHlGnrietBrmiAst0W;en24ga;di;il75lKnJrGtt2yl75z6D;iGmo4Fri4G;etG;!te;aDnaD;ey,l2;aYeTiOlMold12rIwG;enGyne18;!dolE;acHetGisel9;a,chC;e,ieG;!la;adys,enGor3yn1Y;a,da,na;aJgi,lHna,ov71selG;a,e,le;da,liG;an;!n0;mYnIorgHrG;ald35i,m2Stru73;et5i5T;a,eGna;s1Nvieve;briel3Fil,le,rnet,yle;aReOio0loMrG;anHe9iG;da,e9;!cG;esHiGoi0G;n1s3V;!ca;!rG;a,en43;lHrnG;!an9;ec3ic3;rHtiGy8;ma;ah,rah;d0FileCkBl00mUn4ArRsMtLuKvG;aIelHiG;e,ta;in0Ayn;!ngel2H;geni1la,ni3R;h52ta;meral9peranJtG;eHhGrel6;er;l2Pr;za;iGma,nest29yn;cGka,n;a,ka;eJilImG;aGie,y;!liA;ee,i1y;lGrald;da,y;aTeRiMlLma,no4oJsIvG;a,iG;na,ra;a,ie;iGuiG;se;a,en,ie,y;a0c3da,nJsGzaH;aGe;!beG;th;!a,or;anor,nG;!a;in1na;en,iGna,wi0;e,th;aWeKiJoGul2U;lor51miniq3Yn30rGtt2;a,eCis,la,othGthy;ea,y;an09naDonAx2;anPbOde,eNiLja,lImetr3nGsir4U;a,iG;ce,se;a,iHla,orGphiA;es,is;a,l5J;dGrdG;re;!d4Mna;!b2CoraDra;a,d4nG;!a,e;hl3i0mMnKphn1rHvi1WyG;le,na;a,by,cHia,lG;a,en1;ey,ie;a,et5iG;!ca,el1Aka;arGia;is;a0Qe0Mh04i02lUoJrHynG;di,th3;istGy04;al,i0;lOnLrHurG;tn1D;aId28iGn28riA;!nG;a,e,n1;!l1S;n2sG;tanGuelo;ce,za;eGleC;en,t5;aIeoHotG;il4B;!pat4;ir8rIudG;et5iG;a,ne;a,e,iG;ce,sX;a4er4ndG;i,y;aPeMloe,rG;isHyG;stal;sy,tG;aHen,iGy;!an1e,n1;!l;lseHrG;!i8yl;a,y;nLrG;isJlHmG;aiA;a,eGot5;n1t5;!sa;d4el1PtG;al,el1O;cHlG;es5i3F;el3ilG;e,ia,y;iYlXmilWndVrNsLtGy6;aJeIhGri0;erGleCrEy;in1;ri0;li0ri0;a2GsG;a2Fie;a,iMlKmeIolHrG;ie,ol;!e,in1yn;lGn;!a,la;a,eGie,y;ne,y;na,sF;a0Di0D;a,e,l1;isBl2;tlG;in,yn;arb0CeYianXlVoTrG;andRePiIoHyG;an0nn;nwEok8;an2NdgKg0ItG;n27tG;!aHnG;ey,i,y;ny;etG;!t8;an0e,nG;da,na;i8y;bbi8nG;iBn2;ancGossom,ythe;a,he;ca;aRcky,lin9niBrNssMtIulaDvG;!erlG;ey,y;hHsy,tG;e,i0Zy8;!anG;ie,y;!ie;nGt7yl;adHiG;ce;et5iA;!triG;ce,z;a4ie,ra;aliy29b24d1Lg1Hi19l0Sm0Nn01rWsNthe0uJvIyG;anGes7;a,na;a,r25;drIgusHrG;el3;ti0;a,ey,i,y;hHtrG;id;aKlGt1P;eHi8yG;!n;e,iGy;gh;!nG;ti;iIleHpiB;ta;en,n1t5;an19elG;le;aYdWeUgQiOja,nHtoGya;inet5n3;!aJeHiGmI;e,ka;!mGt5;ar2;!belHliFmT;sa;!le;ka,sGta;a,sa;elGie;a,iG;a,ca,n1qG;ue;!t5;te;je6rea;la;!bHmGstas3;ar3;el;aIberHel3iGy;e,na;!ly;l3n9;da;aTba,eNiKlIma,yG;a,c3sG;a,on,sa;iGys0J;e,s0I;a,cHna,sGza;a,ha,on,sa;e,ia;c3is7jaIna,ssaIxG;aGia;!nd4;nd4;ra;ia;i0nHyG;ah,na;a,is,naD;c7da,leCmLnslKsG;haDlG;inGyW;g,n;!h;ey;ee;en;at7g2nG;es;ie;ha;aVdiSelLrG;eIiG;anLenG;a,e,ne;an0;na;aKeJiHyG;nn;a,n1;a,e;!ne;!iG;de;e,lEsG;on;yn;!lG;iAyn;ne;agaJbHiG;!gaI;ey,i8y;!e;il;ah\",\n  \"Place\": \"true¦a07b05cZdYeXfVgRhQiOjfk,kMlKmHneEoDp9que,rd,s8t5u4v3w0yyz;is1y0;!o;!c;a,t;pYsafa,t;e1he 0;bronx,hamptons;nn,x;ask,fo,oho,t,under6yd;a2e1h0;l,x;k,nnK;!cifX;kla,nt;b1w eng0;land;!r;a1co,i0t,uc;dKnn;libu,nhattS;a0gw,hr;s,x;an0ul;!s;a0cn,da,ndianMst;!x;arlem,kg,nd,wy;a2re0;at 0enwich;britain,lak6;!y village;co,l0ra;!a;urope,verglad2;ak,en,fw,ist,own4xb;al4dg,gk,hina3l2o1r0t;es;lo,nn;!t;town;!if;cn,e0kk,lvd,rooklyn;l air,verly hills;frica,lta,m5ntarct2r1sia,tl0ve;!ant1;ct0iz;ic0; oce0;an;ericas,s\",\n  \"WeekDay\": \"true¦fri2mon2s1t0wednesd3;hurs1ues1;aturd1und1;!d0;ay0;!s\",\n  \"Month\": \"true¦aBdec9feb7j2mar,nov9oct1sep0;!t8;!o8;an3u0;l1n0;!e;!y;!u1;!ru0;ary;!em0;ber;pr1ug0;!ust;!il\",\n  \"Date\": \"true¦t0weekend,yesterd2;mr2o0;d0morrow;ay;!w\",\n  \"FirstName\": \"true¦aEblair,cCdevBj8k6lashawn,m3nelly,quinn,re2sh0;ay,e0iloh;a,lby;g1ne;ar1el,org0;an;ion,lo;as8e0r9;ls7nyatta,rry;am0ess1ude;ie,m0;ie;an,on;as0heyenne;ey,sidy;lex1ndra,ubr0;ey;is\",\n  \"LastName\": \"true¦0:34;1:39;2:3B;3:2Y;4:2E;5:30;a3Bb31c2Od2Ee2Bf25g1Zh1Pi1Kj1Ek17l0Zm0Nn0Jo0Gp05rYsMtHvFwCxBy8zh6;a6ou,u;ng,o;a6eun2Uoshi1Kun;ma6ng;da,guc1Zmo27sh21zaR;iao,u;a7eb0il6o3right,u;li3Bs1;gn0lk0ng,tanabe;a6ivaldi;ssilj37zqu2;a9h8i2Go7r6sui,urn0;an,ynisJ;lst0Prr1Uth;at1Uomps1;kah0Vnaka,ylor;aEchDeChimizu,iBmiAo9t7u6zabo;ar2lliv2AzuE;a6ein0;l23rm0;sa,u3;rn4th;lva,mmo24ngh;mjon4rrano;midt,neid0ulz;ito,n7sa6to;ki;ch2dLtos,z;amBeag1Zi9o7u6;bio,iz,sD;b6dri1MgIj0Tme24osevelt,ssi,ux;erts,ins1;c6ve0F;ci,hards1;ir2os;aEeAh8ic6ow20;as6hl0;so;a6illips;m,n1T;ders5et8r7t6;e0Nr4;ez,ry;ers;h21rk0t6vl4;el,te0J;baBg0Blivei01r6;t6w1O;ega,iz;a6eils1guy5ix1owak,ym1E;gy,ka6var1K;ji6muW;ma;aEeCiBo8u6;ll0n6rr0Bssolini,ñ6;oz;lina,oKr6zart;al0Me6r0U;au,no;hhail4ll0;rci0ssi6y0;!er;eWmmad4r6tsu07;in6tin2;!o;aCe8i6op2uo;!n6u;coln,dholm;fe7n0Qr6w0J;oy;bv6v6;re;mmy,rs5u;aBennedy,imuAle0Lo8u7wo6;k,n;mar,znets4;bay6vacs;asY;ra;hn,rl9to,ur,zl4;aAen9ha3imen2o6u3;h6nYu3;an6ns1;ss1;ki0Es5;cks1nsse0D;glesi9ke8noue,shik7to,vano6;u,v;awa;da;as;aBe8itchcock,o7u6;!a3b0ghNynh;a3ffmann,rvat;mingw7nde6rN;rs1;ay;ns5rrQs7y6;asDes;an4hi6;moJ;a9il,o8r7u6;o,tierr2;ayli3ub0;m2nzal2;nd6o,rcia;hi;erAis9lor8o7uj6;ita;st0urni0;es;ch0;nand2;d7insteHsposi6vaL;to;is1wards;aCeBi9omin8u6;bo6rand;is;gu2;az,mitr4;ov;lgado,vi;nkula,rw7vi6;es,s;in;aFhBlarkAo6;h5l6op0rbyn,x;em7li6;ns;an;!e;an8e7iu,o6ristens5u3we;i,ng,u3w,y;!n,on6u3;!g;mpb7rt0st6;ro;ell;aBe8ha3lanco,oyko,r6yrne;ooks,yant;ng;ck7ethov5nnett;en;er,ham;ch,h8iley,rn6;es,i0;er;k,ng;dDl9nd6;ers6rA;en,on,s1;on;eks7iy8var2;ez;ej6;ev;ams\",\n  \"MaleName\": \"true¦0:CE;1:BL;2:C2;3:BT;4:B5;5:9V;6:BZ;7:AT;8:BD;9:AX;A:AO;aB4bA8c97d87e7Gf6Yg6Gh5Wi5Ij4Lk4Bl3Rm2Pn2Eo28p22qu20r1As0Qt06u05v00wNxavi3yGzB;aBor0;cBh8Ine;hCkB;!aB1;ar51eB0;ass2i,oCuB;sDu25;nEsDusB;oBsC;uf;ef;at0g;aJeHiCoByaAP;lfgang,odrow;lBn1O;bDey,frBJlB;aA5iB;am,e,s;e89ur;i,nde5sB;!l7t1;de,lCrr6yB;l1ne;lBt3;a93y;aEern1iB;cCha0kt5CnceBrg9Bva0;!nt;ente,t5A;lentin49n8Yughn;lyss4Msm0;aTeOhKiIoErCyB;!l3ro8s1;av9QeBist0oy,um0;nt9Iv54y;bDd7XmBny;!as,mBoharu;aAYie,y;i83y;mBt9;!my,othy;adDeoCia7DomB;!as;!do7M;!de9;dErB;en8HrB;an8GeBy;ll,n8F;!dy;dgh,ic9Tnn3req,ts45;aRcotPeNhJiHoFpenc3tBur1Oylve8Hzym1;anDeBua7B;f0phAFvBwa7A;e57ie;!islaw,l7;lom1nA3uB;leyma8ta;dBl7Jm1;!n7;aDeB;lBrm0;d1t1;h6Sne,qu0Uun,wn,y8;aBbasti0k1Xl41rg40th,ymo9I;m9n;!tB;!ie,y;lCmBnti21q4Iul;!mAu4;ik,vato6V;aWeShe92iOoFuCyB;an,ou;b6LdCf9pe6QssB;!elAI;ol2Uy;an,bIcHdGel,geFh0landA9mEnDry,sCyB;!ce;coe,s;!a95nA;an,eo;l3Jr;e4Qg3n7olfo,ri68;co,ky;bAe9U;cBl7;ar5Oc5NhCkBo;!ey,ie,y;a85ie;gCid,ub6x,yBza;ansh,nS;g8WiB;na8Ss;ch5Yfa4lDmCndBpha4sh6Uul,ymo70;al9Yol2By;i9Ion;f,ph;ent2inB;cy,t1;aFeDhilCier62ol,reB;st1;!ip,lip;d9Brcy,tB;ar,e2V;b3Sdra6Ft44ul;ctav2Vliv3m96rFsCtBum8Uw6;is,to;aCc8SvB;al52;ma;i,l49vJ;athJeHiDoB;aBel,l0ma0r2X;h,m;cCg4i3IkB;h6Uola;hol5XkBol5X;!ol5W;al,d,il,ls1vB;il50;anBy;!a4i4;aWeTiKoFuCyB;l21r1;hamCr5ZstaB;fa,p4G;ed,mF;dibo,e,hamDis1XntCsBussa;es,he;e,y;ad,ed,mB;ad,ed;cGgu4kElDnCtchB;!e5;a78ik;house,o03t1;e,olB;aj;ah,hBk7;a4eB;al,l;hClv2rB;le,ri5v2;di,met;ck,hNlLmOnu4rHs1tDuricCxB;!imilian8Cwe5;e,io;eo,hCi52tB;!eo,hew,ia;eBis;us,w;cDio,k86lCqu6Gsha5tBv2;i2Hy;in,on;!el,oKus;achBcolm,ik;ai,y;amBdi,moud;adB;ou;aReNiMlo2RoIuCyB;le,nd1;cEiDkBth3;aBe;!s;gi,s;as,iaB;no;g0nn6RrenDuBwe5;!iB;e,s;!zo;am,on4;a7Bevi,la4SnDoBst3vi;!nB;!a60el;!ny;mCnBr67ur4Twr4T;ce,d1;ar,o4N;aIeDhaled,iBrist4Vu48y3B;er0p,rB;by,k,ollos;en0iEnBrmit,v2;!dCnBt5C;e0Yy;a5ri4N;r,th;na68rBthem;im,l;aYeQiOoDuB;an,liBst2;an,o,us;aqu2eJhnInGrEsB;eChBi7Bue;!ua;!ph;dBge;an,i,on;!aBny;h,s,th4X;!ath4Wie,nA;!l,sBy;ph;an,e,mB;!mA;d,ffGrDsB;sBus;!e;a5JemCmai8oBry;me,ni0O;i6Uy;!e58rB;ey,y;cHd6kGmFrDsCvi3yB;!d6s1;on,p3;ed,od,rBv4M;e4Zod;al,es,is1;e,ob,ub;k,ob,quB;es;aNbrahMchika,gKkeJlija,nuIrGsDtBv0;ai,sB;uki;aBha0i6Fma4sac;ac,iaB;h,s;a,vinBw2;!g;k,nngu52;!r;nacBor;io;im;in,n;aJeFina4VoDuByd56;be25gBmber4CsD;h,o;m3ra33sBwa3X;se2;aDctCitCn4ErB;be20m0;or;th;bKlJmza,nIo,rDsCyB;a43d6;an,s0;lEo4FrDuBv7;hi40ki,tB;a,o;is1y;an,ey;k,s;!im;ib;aQeMiLlenKoIrEuB;illerCsB;!tavo;mo;aDegBov3;!g,orB;io,y;dy,h57nt;nzaBrd1;lo;!n;lbe4Qno,ovan4R;ne,oDrB;aBry;ld,rd4U;ffr7rge;bri4l6rBv2;la1Zr3Eth,y;aReNiLlJorr0IrB;anDedBitz;!dAeBri24;ri23;cDkB;!ie,lB;in,yn;esJisB;!co,zek;etch3oB;yd;d4lBonn;ip;deriDliCng,rnB;an01;pe,x;co;bi0di;arZdUfrTit0lNmGnFo2rCsteb0th0uge8vBym6zra;an,ere2V;gi,iCnBrol,v2w2;est45ie;c07k;och,rique,zo;aGerFiCmB;aFe2P;lCrB;!h0;!io;s1y;nu4;be09d1iEliDmCt1viBwood;n,s;er,o;ot1Ts;!as,j43sB;ha;a2en;!dAg32mEuCwB;a25in;arB;do;o0Su0S;l,nB;est;aYeOiLoErDuCwByl0;ay8ight;a8dl7nc0st2;ag0ew;minFnDri0ugCyB;le;!l03;!a29nBov0;e5ie,y;go,icB;!k;armuCeBll1on,rk;go;id;anIj0lbeHmetri9nFon,rEsDvCwBxt3;ay8ey;en,in;hawn,mo08;ek,ri0F;is,nBv3;is,y;rt;!dB;re;lKmInHrDvB;e,iB;!d;en,iDne5rByl;eBin,yl;l2Vn;n,o,us;!e,i4ny;iBon;an,en,on;e,lB;as;a06e04hWiar0lLoGrEuCyrB;il,us;rtB;!is;aBistobal;ig;dy,lEnCrB;ey,neli9y;or,rB;ad;by,e,in,l2t1;aGeDiByI;fBnt;fo0Ct1;meCt9velaB;nd;nt;rDuCyB;!t1;de;enB;ce;aFeErisCuB;ck;!tB;i0oph3;st3;d,rlBs;eBie;s,y;cBdric,s11;il;lEmer1rB;ey,lCro5y;ll;!os,t1;eb,v2;ar02eUilTlaSoPrCuByr1;ddy,rtI;aJeEiDuCyB;an,ce,on;ce,no;an,ce;nCtB;!t;dCtB;!on;an,on;dCndB;en,on;!foBl7y;rd;bCrByd;is;!by;i8ke;al,lA;nFrBshoi;at,nCtB;!r10;aBie;rd0S;!edict,iCjam2nA;ie,y;to;n7rBt;eBy;tt;ey;ar0Xb0Nd0Jgust2hm0Gid6ja0ElZmXnPputsiOrFsaEuCveBya0ziz;ry;gust9st2;us;hi;aIchHi4jun,maFnDon,tBy0;hBu06;ur;av,oB;ld;an,nd0A;el;ie;ta;aq;dGgel05tB;hoEoB;i8nB;!i02y;ne;ny;reBy;!as,s,w;ir,mBos;ar;an,beOd6eIfFi,lEonDphonHt1vB;aMin;on;so,zo;an,en;onCrB;edP;so;c,jaEksandDssaExB;!and3;er;ar,er;ndB;ro;rtH;ni;en;ad,eB;d,t;in;aColfBri0vik;!o;mBn;!a;dFeEraCuB;!bakr,lfazl;hBm;am;!l;allEel,oulaye,ulB;!lCrahm0;an;ah,o;ah;av,on\",\n  \"Person\": \"true¦ashton kutchSbRcMdKeIgastNhGinez,jEkDleCmBnettJoAp8r4s3t2v0;a0irgin maG;lentino rossi,n go3;heresa may,iger woods,yra banks;addam hussain,carlett johanssJlobodan milosevic,uB;ay romano,eese witherspoIo1ush limbau0;gh;d stewart,nald0;inho,o;a0ipJ;lmIris hiltD;prah winfrFra;essiaen,itt romnEubarek;bron james,e;anye west,iefer sutherland,obe bryant;aime,effers8k rowli0;ng;alle ber0itlBulk hogan;ry;ff0meril lagasse,zekiel;ie;a0enzel washingt2ick wolf;lt1nte;ar1lint0ruz;on;dinal wols1son0;! palm2;ey;arack obama,rock;er\",\n  \"Verb\": \"true¦awak9born,cannot,fr8g7h5k3le2m1s0wors9;e8h3;ake sure,sg;ngth6ss6;eep tabs,n0;own;as0e2;!t2;iv1onna;ight0;en\",\n  \"PhrasalVerb\": \"true¦0:72;1:6Q;2:7E;3:74;4:6J;5:7H;6:76;7:6P;8:6C;9:6D;A:5I;B:71;C:70;a7Hb63c5Dd5Ae58f46g3Oh38iron0j34k2Zl2Km2Bn29o27p1Pr1Es09tQuOvacuum 1wGyammerCzD;eroAip EonD;e0k0;by,up;aJeGhFiEorDrit53;d 1k2R;mp0n4Ape0r8s8;eel Bip 7L;aEiD;gh 06rd0;n Br 3D;it 5Kk8lk6rm 0Qsh 74t67v4P;rgeCsD;e 9herA;aRePhNiJoHrFuDype 0N;ckArn D;d2in,o3Gup;ade YiDot0y 28;ckle68p 7A;ne67p Ds4D;d2o6Lup;ck FdEe Dgh5Tme0p o0Dre0;aw3ba4d2in,up;e5Ky 1;by,o6V;ink Drow 5V;ba4ov7up;aDe 4Ill4O;m 1r W;ckCke Elk D;ov7u4O;aDba4d2in,o31up;ba4ft7p4Tw3;a0Gc0Fe09h05i02lYmXnWoVpSquare RtJuHwD;earFiD;ngEtch D;aw3ba4o6P; by;ck Dit 1m 1ss0;in,up;aIe0RiHoFrD;aigh1MiD;ke 5Yn2Y;p Drm1P;by,in,o6B;n2Zr 1tc3I;c2Ymp0nd Dr6Hve6y 1;ba4d2up;d2o67up;ar2Vell0ill4UlErDurC;ingCuc8;a33it 3U;be4Crt0;ap 4Eow B;ash 4Zoke0;eep EiDow 9;c3Np 1;in,oD;ff,v7;gn Eng2Zt Dz8;d2o5up;in,o5up;aFoDu4F;ot Dut0w 5X;aw3ba4f37o5R;c2FdeAk4Sve6;e Hll0nd GtD; Dtl43;d2in,o5upD;!on;aw3ba4d2in,o1Yup;o5to;al4Lout0rap4L;il6v8;at0eKiJoGuD;b 4Ele0n Dstl8;aDba4d2in53o3Gt30u3E;c1Xw3;ot EuD;g2Knd6;a1Xf2Ro5;ng 4Op6;aDel6inAnt0;c4Yd D;o2Tu0C;aQePiOlMoKrHsyc2AuD;ll Ft D;aDba4d2in,o1Ht34up;p39w3;ap38d2in,o5t32up;attleCess EiGoD;p 1;ah1Hon;iDp 53re3Mur45wer 53;nt0;ay3ZuD;gAmp 9;ck 53g0leCn 9p3W;el 47ncilA;c3Pir 2In0ss FtEy D;ba4o4R; d2c1Y;aw3ba4o12;pDw3K;e3Jt B;arrow3Terd0oD;d6te3S;aJeHiGoEuD;ddl8ll37;c17p 1uth6ve D;al3Bd2in,o5up;ss0x 1;asur8lt 9ss D;a1Aup;ke Dn 9r30s1Lx0;do,o3Yup;aPeNiIoDuck0;a17c37g GoDse0;k Dse35;aft7ba4d2forw2Bin3Wov7uD;nd7p;in,o0J;e GghtFnEsDv1T;ten 4D;e 1k 1; 1e2Y;ar43d2;av1Ht 2YvelD; o3L;p 1sh DtchCugh6y1U;in3Lo5;eEick6nock D;d2o3H;eDyA;l2Hp D;aw3ba4d2fSin,o05to,up;aFoEuD;ic8mpA;ke2St2W;c31zz 1;aPeKiHoEuD;nker2Ts0U;lDneArse2O;d De 1;ba4d2fast,oZup;de Et D;ba4on,up;aw3o5;aDlp0;d Fl22r Dt 1;fDof;rom;in,oRu1A;cZm 1nDve it,ze1Y;d Dg 27kerF;d2in,o5;aReLive Jloss1VoFrEunD; f0M;in39ow 23; Dof 0U;aEb17it,oDr35t0Ou12;ff,n,v7;bo5ft7hJw3;aw3ba4d2in,oDup,w3;ff,n,ut;a17ek0t D;aEb11d2oDr2Zup;ff,n,ut,v7;cEhDl1Pr2Xt,w3;ead;ross;d aEnD;g 1;bo5;a08e01iRlNoJrFuD;cDel 1;k 1;eEighten DownCy 1;aw3o2L;eDshe1G; 1z8;lFol D;aDwi19;bo5r2I;d 9;aEeDip0;sh0;g 9ke0mDrD;e 2K;gLlJnHrFsEzzD;le0;h 2H;e Dm 1;aw3ba4up;d0isD;h 1;e Dl 11;aw3fI;ht ba4ure0;eInEsD;s 1;cFd D;fDo1X;or;e B;dQl 1;cHll Drm0t0O;apYbFd2in,oEtD;hrough;ff,ut,v7;a4ehi1S;e E;at0dge0nd Dy8;o1Mup;o09rD;ess 9op D;aw3bNin,o15;aShPlean 9oDross But 0T;me FoEuntD; o1M;k 1l6;aJbIforGin,oFtEuD;nd7;ogeth7;ut,v7;th,wD;ard;a4y;pDr19w3;art;eDipA;ck BeD;r 1;lJncel0rGsFtch EveA; in;o16up;h Bt6;ry EvD;e V;aw3o12;l Dm02;aDba4d2o10up;r0Vw3;a0He08l01oSrHuD;bbleFcklTilZlEndlTrn 05tDy 10zz6;t B;k 9; ov7;anMeaKiDush6;ghHng D;aEba4d2forDin,o5up;th;bo5lDr0Lw3;ong;teD;n 1;k D;d2in,o5up;ch0;arKgJil 9n8oGssFttlEunce Dx B;aw3ba4;e 9; ar0B;k Bt 1;e 1;d2up; d2;d 1;aIeed0oDurt0;cFw D;aw3ba4d2o5up;ck;k D;in,oK;ck0nk0st6; oJaGef 1nd D;d2ov7up;er;up;r0t D;d2in,oDup;ff,ut;ff,nD;to;ck Jil0nFrgEsD;h B;ainCe B;g BkC; on;in,o5; o5;aw3d2o5up;ay;cMdIsk Fuction6; oD;ff;arDo5;ouD;nd;d D;d2oDup;ff,n;own;t D;o5up;ut\",\n  \"Modal\": \"true¦c5lets,m4ought3sh1w0;ill,o5;a0o4;ll,nt;! to;ay,ight,ust;an,o0;uld\",\n  \"Adjective\": \"true¦0:73;1:7I;2:7O;3:7H;4:7A;5:5B;6:4R;7:49;8:48;9:60;A:7F;a6Eb60c5Md52e4Pf45g3Xh3Mi31j2Zk2Yl2Nm2Cn23o1Np16quack,r0Ws0Ct05uMvJwByear5;arp0eFholeEiDoB;man5oBu67;d69zy;despr6Zs5B;!sa7;eClBste22;co1El o4H;!k5;aCiBola47;b7Nce versa,ol50;ca2gabo5Ynilla;ltSnFpCrb55su4tterB;!mo6U; f30b1KpCsBti1D;ca7et,ide dItairs;er,i3J;aLbeco6Lconvin23deIeHfair,ivers4knGprecedUrEsCwB;iel1Writt5U;i1RuB;pervis0specti3;eBu5;cognHgul6Bl6B;own;ndi3v5Oxpect0;cid0rB;!grou5JsB;iz0tood;b7ppeaHssu6AuthorB;iz0;i20ra;aFeDhough4KoCrB;i1oubl0;geth6p,rp6B;en5LlBm4Vrr2Q;li3;boo,lBn;ent0;aTcSeQhPiNmug,nobbi3AoLpKqueami3AtFuBymb5Y;bDi gener50pBrprisi3;erBre0H;! dup6b,i25;du0seq4P;anda6OeEi0LrBy34;aightBip0; fBfB;or56;adfa5Wreotyp0;a4Uec2Cir1Flend5Wot on; call0le,mb6phist1TrBu0Tvi3X;d5Ury;gnifica2nB;ce4Qg7;am2Le6ocki3ut;cBda1em5lfi2Uni1Spa63re8;o1Cr3R;at53ient24reec53;cr0me,ns serif;aIeEiCoB;bu5Ktt4PuOy4;ghtBv4;!-25f9;ar,bel,condi1du5Xfres4XlDpublic3RsBtard0;is43oB;lu1na2;e1Auc41;b5EciB;al,st;aMeKicayu8lac5Copuli5BrCuB;bl54mp0;eFiCoB;!b06fu5Cmi2Xp6;mCor,sBva1;ti8;a4Re;ci58mB;a0EiB;er,um;ac1WrBti1;feAma2Pplexi3v2Z;rBst;allelDtB;-tiBi4;me;!ed;bMffKkJld fashion0nIpHrg1Dth6utGvB;al,erB;!aDniCt,wB;eiBrouB;ght;ll;do0Rer,g2Hsi41;en,posi1; boa5Ag2Fli8;!ay; gua58bBli8;eat;eDsB;cBer0Dole1;e8u3F;d2Ose;ak0eIiHoBua4J;nFrCtB;ab7;thB;!eB;rn;chala2descri4Ustop;ght5;arby,cessa3Sighbor5xt;aJeHiEoBultip7;bi7derClBnth5ot,st;dy;a1n;nBx0;iaBor;tu2Y;di49naBre;ci3;cBgenta,in,jZkeshift,le,mmoth,ny,sculi8;ab2Uho;aKeFiCoBu0Z;uti0Yvi3;mCteraB;l,te;it0;ftEgBth4;al,eCitiB;ma1;nda38;!-08;ngu3Lst,tt6;ap1Oind5no06;agg0uB;niKstifi0veni7;de4gno46lleg4mOnDpso 1RrB;a1releB;va2; JaIbr0corHdFfluenPiPnEsDtB;aAen3GoxB;ic31;a8i2N;a1er,oce2;iCoB;or;reA;deq3Eppr2T;fBsitu,vitro;ro2;mFpB;arDerfeAoBrop6;li1rtB;a2ed;ti4;eBi0M;d2Ln30;aGelFiDoBumdr36;ne2Uok0rrBs03ur5;if2N;ghfalut1KspB;an2L;liVpf9;lEnDrB;d01roB;wi3;dy,gi3;f,low0;ainf9ener2Eiga1YlHoGraDuB;ilBng ho;ty;cCtB;ef9is;ef9;ne,od;ea28ob4;aQeKinJlIoDrB;a1PeBoz1G;e28q0Ytf9;oDrB; keeps,eBm6tuna1;g00ign;liB;sh;ag2Uue2;al,i1;dFmCrB;ti7;a7ini8;ne;le; up;bl0i2l20r Cux,voB;ri1uri1;oBreac1A;ff;aJfficie2lImiHnFreAthere4veExB;aAcess,pe1JtraCuB;be2Gl0D;!va19;n,ryday; Bcouragi3ti0M;rou1sui1;ne2;abo1YdMe14i1;g6sB;t,ygB;oi3;er;aReJiDoBrea11ue;mina2ne,ubB;le,tf9;dact16fficu1JsCvB;er1F;creDeas0gruntl0hone1AordCtB;a2ress0;er5;et; HadpGfFgene1KliDrang0spe1KtCvoB;ut;ail0ermin0;be1Hca1ghB;tf9;ia2;an;facto;i5magBngeroVs0E;ed,i3;ly;ertaNhief,ivil,oDrB;aBowd0u0D;mp0vYz0;loJmHnCoi3rrBve0K;eAu1D;cre1grEsDtB;emBra0B;po09;ta2;ue2;mer04pleB;te,x;ni4ss4;in;aLeHizarGlFoCrB;and new,isk,okL;gCna fiSttom,urgeoB;is;us;ank,iE;re;autif9hiClov0nBst,yoC;eRt;nd;ul;ckCnkru0SrrB;en;!wards; priori,b0Ic0Fd05fra04g00hZlUma01ntiquTppQrKsIttracti02utheHvEwB;aCkB;wa0P;ke,re;ant garCerB;age;de;ntQ;leep,tonisB;hi3;ab,bitEroDtiB;fiB;ci4;ga2;raB;ry;are2etiLrB;oprB;ia1;at0;arEcohCeBiIl,oof;rt;olB;ic;mi3;ead;ainDgressiConiB;zi3;ve;st;id; IeGuFvB;aCerB;se;nc0;ed;lt;pt,qB;ua1;hoc,infinitB;um;cuCtu4u1;al;ra1;erLlKoIruHsCuB;nda2;e2oCtraA;ct;lu1rbi3;ng;te;pt;aBve;rd;aze,e;ra2;nt\",\n  \"Comparable\": \"true¦0:3Z;1:4G;2:43;3:2W;4:49;5:3V;a4Mb42c3Md3Be33f2Pg2Dh22i1Tj1Sk1Pl1Hm1Bn15o13p0Tqu0Rr0IsRtKuIvFw7y6za11;ell25ou4;aBe9hi1Wi7r6;o4y;ck0Mde,l6n1ry,se;d,y;a6i4Kt;k,ry;n1Rr6sI;m,y;a7e6ulgar;nge5rda2xi4;gue,in,st;g0n6pco3Kse5;like0ti1;aAen9hi8i7ough,r6;anqu2Oen1ue;dy,g3Sme0ny,r09;ck,n,rs2P;d40se;ll,me,rt,s6wd45;te5;aVcarUeThRiQkin0FlMmKoHpGqua1FtAu7w6;eet,ift;b7dd13per0Gr6;e,re2H;sta2Ft3;aAe9iff,r7u6;pXr1;a6ict,o4;ig3Fn0U;a1ep,rn;le,rk;e22i3Fright0;ci28ft,l7o6re,ur;n,thi4;emn,id;a6el0ooth;ll,rt;e8i6ow,y;ck,g35m6;!y;ek,nd3D;ck,l0mp3;a6iTort,rill,y;dy,ll0Xrp;cu0Rve0Rxy;ce,ed,y;d,fe,int0l1Vv14;aBe9i8o6ude;mantic,o1Isy,u6;gh,nd;ch,pe,tzy;a6d,mo0H;dy,l;gg7ndom,p6re,w;id;ed;ai2i6;ck,et;aEhoDi1QlCoBr8u6;ny,r6;e,p3;egna2ic7o6;fouYud;ey,k0;li04or,te1B;ain,easa2;ny;in5le;dd,f6i0ld,ranQ;fi10;aAe8i7o6;b3isy,rm15sy;ce,mb3;a6w;r,t;ive,rr01;aAe8ild,o7u6;nda19te;ist,o1;a6ek,llX;n,s0ty;d,tuQ;aBeAi9o6ucky;f0Un7o1Du6ve0w17y0T;d,sy;e0g;g1Tke0tt3ve0;an,wd;me,r6te;ge;e7i6;nd;en;ol0ui1P;cy,ll,n6;sBt6;e6ima8;llege2r6;es7media6;te;ti4;ecu6ta2;re;aEeBiAo8u6;ge,m6ng1R;b3id;ll6me0t;ow;gh,l0;a6f04sita2;dy,v6;en0y;nd1Hppy,r6te5;d,sh;aGenFhDiClBoofy,r6;a9e8is0o6ue1E;o6ss;vy;at,en,y;nd,y;ad,ib,ooI;a2d1;a6o6;st0;t3uiY;u1y;aIeeb3iDlat,oAr8u6;ll,n6r14;!ny;aHe6iend0;e,sh;a7r6ul;get5mG;my;erce8n6rm,t;an6e;ciC;! ;le;ir,ke,n0Fr,st,t,ulA;aAerie,mp9sse7v6xtre0Q;il;nti6;al;ty;r7s6;tern,y;ly,th0;aFeCi9r7u6;ll,mb;u6y;nk;r7vi6;ne;e,ty;a6ep,nD;d6f,r;!ly;mp,pp03rk;aHhDlAo8r7u6;dd0r0te;isp,uel;ar6ld,mmon,ol,st0ward0zy;se;e6ou1;a6vW;n,r;ar8e6il0;ap,e6;sy;mi4;gey,lm8r6;e5i4;ful;!i4;aNiLlIoEr8u6;r0sy;ly;aAi7o6;ad,wn;ef,g7llia2;nt;ht;sh,ve;ld,r7un6;cy;ed,i4;ng;a7o6ue;nd,o1;ck,nd;g,tt6;er;d,ld,w1;dy;bsu9ng8we6;so6;me;ry;rd\",\n  \"TextValue\": \"true¦bOeJfDhundredNmOninAone,qu8s6t0zeroN;enMh3rNw0;e0o;l0ntD;fHve;ir0ousandKree;d,t6;e0ix8;cond,pt1ven7xt1;adr0int0;illionD;e0th;!t0;e9ie8y;i3o0;rt1ur0;!t2;ie4y;ft0rst,ve;e3h,ie2y;ight0lev2;!e1h,ie0y;th;en0;!th;illion0;!s,th\",\n  \"Ordinal\": \"true¦bGeDf9hundredHmGnin7qu6s4t0zeroH;enGh1rFwe0;lfFn9;ir0ousandE;d,t4;e0ixt9;cond,ptAvent8xtA;adr9int9;et0th;e6ie8;i2o0;r0urt3;tie5;ft1rst;ight0lev1;e0h,ie2;en1;illion0;th\",\n  \"Cardinal\": \"true¦bHeEf8hundred,mHnineAone,qu6s4t0zero;en,h2rGw0;e0o;lve,n8;irt9ousandEree;e0ix5;pt1ven4xt1;adr0int0;illion;i3o0;r1ur0;!t2;ty;ft0ve;e2y;ight0lev1;!e0y;en;illion0;!s\",\n  \"Expression\": \"true¦a02b01dXeVfuck,gShLlImHnGoDpBshAtsk,u7voi04w3y0;a1eLu0;ck,p;!a,hoo,y;h1ow,t0;af,f;e0oa;e,w;gh,h0;! 0h,m;huh,oh;eesh,hh,it;ff,hew,l0sst;ease,z;h1o0w,y;h,o,ps;!h;ah,ope;eh,mm;m1ol0;!s;ao,fao;a4e2i,mm,oly1urr0;ah;! mo6;e,ll0y;!o;ha0i;!ha;ah,ee,o0rr;l0odbye;ly;e0h,t cetera,ww;k,p;'oh,a0uh;m0ng;mit,n0;!it;ah,oo,ye; 1h0rgh;!em;la\",\n  \"Adverb\": \"true¦a07by 05d01eYfShQinPjustOkinda,mMnJoEpCquite,r9s5t2up1very,w0Bye0;p,s; to,wards5;h1o0wiO;o,t6ward;en,us;everal,o0uch;!me1rt0; of;hXtimes,w07;a1e0;alS;ndomRthN;ar excellDer0oint blank; Mhaps;f3n0;ce0ly;! 0;ag00moU; courHten;ewJo0; longEt 0;onHwithstanding;aybe,eanwhiAore0;!ovB;! aboS;deed,steT;en0;ce;or2u0;l9rther0;!moH; 0ev3;examp0good,suF;le;n mas1v0;er;se;e0irect1; 1finite0;ly;ju7trop;far,n0;ow; CbroBd nauseam,gAl5ny2part,side,t 0w3;be5l0mo5wor5;arge,ea4;mo1w0;ay;re;l 1mo0one,ready,so,ways;st;b1t0;hat;ut;ain;ad;lot,posteriori\",\n  \"Preposition\": \"true¦'o,-,aKbHcGdFexcept,fEinDmidPnotwithstandiQoBpRqua,sAt6u3vi2w0;/o,hereMith0;!in,oQ;a,s-a-vis;n1p0;!on;like,til;h0ill,owards;an,r0;ough0u;!oI;ans,ince,o that;',f0n1ut;!f;!to;or,rom;espite,own,u3;hez,irca;ar1e0oAy;low,sides,tween;ri6;',bo7cross,ft6lo5m3propos,round,s1t0;!op;! long 0;as;id0ong0;!st;ng;er;ut\",\n  \"Determiner\": \"true¦aAboth,d8e5few,l3mu7neiCown,plenty,some,th2various,wh0;at0ich0;evB;at,e3is,ose;a,e0;!ast,s;a1i6l0nough,very;!se;ch;e0u;!s;!n0;!o0y;th0;er\"\n};\n\nvar entity = ['Person', 'Place', 'Organization'];\nvar nouns = {\n  Noun: {\n    notA: ['Verb', 'Adjective', 'Adverb']\n  },\n  // - singular\n  Singular: {\n    isA: 'Noun',\n    notA: 'Plural'\n  },\n  //a specific thing that's capitalized\n  ProperNoun: {\n    isA: 'Noun'\n  },\n  // -- people\n  Person: {\n    isA: ['ProperNoun', 'Singular'],\n    notA: ['Place', 'Organization', 'Date']\n  },\n  FirstName: {\n    isA: 'Person'\n  },\n  MaleName: {\n    isA: 'FirstName',\n    notA: ['FemaleName', 'LastName']\n  },\n  FemaleName: {\n    isA: 'FirstName',\n    notA: ['MaleName', 'LastName']\n  },\n  LastName: {\n    isA: 'Person',\n    notA: ['FirstName']\n  },\n  NickName: {\n    isA: 'Person',\n    notA: ['FirstName', 'LastName']\n  },\n  Honorific: {\n    isA: 'Noun',\n    notA: ['FirstName', 'LastName', 'Value']\n  },\n  // -- places\n  Place: {\n    isA: 'Singular',\n    notA: ['Person', 'Organization']\n  },\n  Country: {\n    isA: ['Place', 'ProperNoun'],\n    notA: ['City']\n  },\n  City: {\n    isA: ['Place', 'ProperNoun'],\n    notA: ['Country']\n  },\n  Region: {\n    isA: ['Place', 'ProperNoun']\n  },\n  Address: {\n    isA: 'Place'\n  },\n  //---Orgs---\n  Organization: {\n    isA: ['Singular', 'ProperNoun'],\n    notA: ['Person', 'Place']\n  },\n  SportsTeam: {\n    isA: 'Organization'\n  },\n  School: {\n    isA: 'Organization'\n  },\n  Company: {\n    isA: 'Organization'\n  },\n  // - plural\n  Plural: {\n    isA: 'Noun',\n    notA: ['Singular']\n  },\n  //(not plural or singular)\n  Uncountable: {\n    isA: 'Noun'\n  },\n  Pronoun: {\n    isA: 'Noun',\n    notA: entity\n  },\n  //a word for someone doing something -'plumber'\n  Actor: {\n    isA: 'Noun',\n    notA: entity\n  },\n  //a gerund-as-noun - 'swimming'\n  Activity: {\n    isA: 'Noun',\n    notA: ['Person', 'Place']\n  },\n  //'kilograms'\n  Unit: {\n    isA: 'Noun',\n    notA: entity\n  },\n  //'Canadians'\n  Demonym: {\n    isA: ['Noun', 'ProperNoun'],\n    notA: entity\n  },\n  //`john's`\n  Possessive: {\n    isA: 'Noun' // notA: 'Pronoun',\n\n  }\n};\n\nvar verbs = {\n  Verb: {\n    notA: ['Noun', 'Adjective', 'Adverb', 'Value']\n  },\n  // walks\n  PresentTense: {\n    isA: 'Verb',\n    notA: ['PastTense', 'Copula', 'FutureTense']\n  },\n  // neutral form - 'walk'\n  Infinitive: {\n    isA: 'PresentTense',\n    notA: ['PastTense', 'Gerund']\n  },\n  // walking\n  Gerund: {\n    isA: 'PresentTense',\n    notA: ['PastTense', 'Copula', 'FutureTense']\n  },\n  // walked\n  PastTense: {\n    isA: 'Verb',\n    notA: ['FutureTense']\n  },\n  // will walk\n  FutureTense: {\n    isA: 'Verb'\n  },\n  // is\n  Copula: {\n    isA: 'Verb'\n  },\n  // would have\n  Modal: {\n    isA: 'Verb',\n    notA: ['Infinitive']\n  },\n  // had walked\n  PerfectTense: {\n    isA: 'Verb',\n    notA: 'Gerund'\n  },\n  Pluperfect: {\n    isA: 'Verb'\n  },\n  // shown\n  Participle: {\n    isA: 'Verb'\n  },\n  // show up\n  PhrasalVerb: {\n    isA: 'Verb'\n  },\n  //'up' part\n  Particle: {\n    isA: 'PhrasalVerb'\n  }\n};\n\nvar values = {\n  Value: {\n    notA: ['Verb', 'Adjective', 'Adverb']\n  },\n  Ordinal: {\n    isA: 'Value',\n    notA: ['Cardinal']\n  },\n  Cardinal: {\n    isA: 'Value',\n    notA: ['Ordinal']\n  },\n  RomanNumeral: {\n    isA: 'Cardinal',\n    //can be a person, too\n    notA: ['Ordinal', 'TextValue']\n  },\n  TextValue: {\n    isA: 'Value',\n    notA: ['NumericValue']\n  },\n  NumericValue: {\n    isA: 'Value',\n    notA: ['TextValue']\n  },\n  Money: {\n    isA: 'Cardinal'\n  },\n  Percent: {\n    isA: 'Value'\n  }\n};\n\nvar anything = ['Noun', 'Verb', 'Adjective', 'Adverb', 'Value', 'QuestionWord'];\nvar misc = {\n  //--Adjectives--\n  Adjective: {\n    notA: ['Noun', 'Verb', 'Adverb', 'Value']\n  },\n  // adjectives that can conjugate\n  Comparable: {\n    isA: ['Adjective']\n  },\n  // better\n  Comparative: {\n    isA: ['Adjective']\n  },\n  // best\n  Superlative: {\n    isA: ['Adjective'],\n    notA: ['Comparative']\n  },\n  NumberRange: {\n    isA: ['Contraction']\n  },\n  Adverb: {\n    notA: ['Noun', 'Verb', 'Adjective', 'Value']\n  },\n  // Dates:\n  //not a noun, but usually is\n  Date: {\n    notA: ['Verb', 'Conjunction', 'Adverb', 'Preposition', 'Adjective']\n  },\n  Month: {\n    isA: ['Date', 'Singular'],\n    notA: ['Year', 'WeekDay', 'Time']\n  },\n  WeekDay: {\n    isA: ['Date', 'Noun']\n  },\n  // '9:20pm'\n  Time: {\n    isA: ['Date'],\n    notA: ['Value']\n  },\n  //glue\n  Determiner: {\n    notA: anything\n  },\n  Conjunction: {\n    notA: anything\n  },\n  Preposition: {\n    notA: anything\n  },\n  // what, who, why\n  QuestionWord: {\n    notA: ['Determiner']\n  },\n  // peso, euro\n  Currency: {},\n  // ughh\n  Expression: {\n    notA: ['Noun', 'Adjective', 'Verb', 'Adverb']\n  },\n  // dr.\n  Abbreviation: {},\n  // internet tags\n  Url: {\n    notA: ['HashTag', 'PhoneNumber', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email']\n  },\n  PhoneNumber: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention', 'Email']\n  },\n  HashTag: {},\n  AtMention: {\n    isA: ['Noun'],\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'Email']\n  },\n  Emoji: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention']\n  },\n  Emoticon: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention']\n  },\n  Email: {\n    notA: ['HashTag', 'Verb', 'Adjective', 'Value', 'AtMention']\n  },\n  //non-exclusive\n  Auxiliary: {\n    notA: ['Noun', 'Adjective', 'Value']\n  },\n  Acronym: {\n    notA: ['Plural', 'RomanNumeral']\n  },\n  Negative: {\n    notA: ['Noun', 'Adjective', 'Value']\n  },\n  // if, unless, were\n  Condition: {\n    notA: ['Verb', 'Adjective', 'Noun', 'Value']\n  }\n};\n\n// i just made these up\nvar colorMap = {\n  Noun: 'blue',\n  Verb: 'green',\n  Negative: 'green',\n  Date: 'red',\n  Value: 'red',\n  Adjective: 'magenta',\n  Preposition: 'cyan',\n  Conjunction: 'cyan',\n  Determiner: 'cyan',\n  Adverb: 'cyan'\n};\n/** add a debug color to some tags */\n\nvar addColors = function addColors(tags) {\n  Object.keys(tags).forEach(function (k) {\n    // assigned from plugin, for example\n    if (tags[k].color) {\n      tags[k].color = tags[k].color;\n      return;\n    } // defined above\n\n\n    if (colorMap[k]) {\n      tags[k].color = colorMap[k];\n      return;\n    }\n\n    tags[k].isA.some(function (t) {\n      if (colorMap[t]) {\n        tags[k].color = colorMap[t];\n        return true;\n      }\n\n      return false;\n    });\n  });\n  return tags;\n};\n\nvar _color = addColors;\n\nvar unique$2 = function unique(arr) {\n  return arr.filter(function (v, i, a) {\n    return a.indexOf(v) === i;\n  });\n}; //add 'downward' tags (that immediately depend on this one)\n\n\nvar inferIsA = function inferIsA(tags) {\n  Object.keys(tags).forEach(function (k) {\n    var tag = tags[k];\n    var len = tag.isA.length;\n\n    for (var i = 0; i < len; i++) {\n      var down = tag.isA[i];\n\n      if (tags[down]) {\n        tag.isA = tag.isA.concat(tags[down].isA);\n      }\n    } // clean it up\n\n\n    tag.isA = unique$2(tag.isA);\n  });\n  return tags;\n};\n\nvar _isA = inferIsA;\n\nvar unique$3 = function unique(arr) {\n  return arr.filter(function (v, i, a) {\n    return a.indexOf(v) === i;\n  });\n}; // crawl the tag-graph and infer any conflicts\n// faster than doing this at tag-time\n\n\nvar inferNotA = function inferNotA(tags) {\n  var keys = Object.keys(tags);\n  keys.forEach(function (k) {\n    var tag = tags[k];\n    tag.notA = tag.notA || [];\n    tag.isA.forEach(function (down) {\n      if (tags[down] && tags[down].notA) {\n        // borrow its conflicts\n        var notA = typeof tags[down].notA === 'string' ? [tags[down].isA] : tags[down].notA || [];\n        tag.notA = tag.notA.concat(notA);\n      }\n    }); // any tag that lists us as a conflict, we conflict it back.\n\n    for (var i = 0; i < keys.length; i++) {\n      var key = keys[i];\n\n      if (tags[key].notA.indexOf(k) !== -1) {\n        tag.notA.push(key);\n      }\n    } // clean it up\n\n\n    tag.notA = unique$3(tag.notA);\n  });\n  return tags;\n};\n\nvar _notA = inferNotA;\n\n// a lineage is all 'incoming' tags that have this as 'isA'\nvar inferLineage = function inferLineage(tags) {\n  var keys = Object.keys(tags);\n  keys.forEach(function (k) {\n    var tag = tags[k];\n    tag.lineage = []; // find all tags with it in their 'isA' set\n\n    for (var i = 0; i < keys.length; i++) {\n      if (tags[keys[i]].isA.indexOf(k) !== -1) {\n        tag.lineage.push(keys[i]);\n      }\n    }\n  });\n  return tags;\n};\n\nvar _lineage = inferLineage;\n\nvar validate = function validate(tags) {\n  // cleanup format\n  Object.keys(tags).forEach(function (k) {\n    var tag = tags[k]; // ensure isA is an array\n\n    tag.isA = tag.isA || [];\n\n    if (typeof tag.isA === 'string') {\n      tag.isA = [tag.isA];\n    } // ensure notA is an array\n\n\n    tag.notA = tag.notA || [];\n\n    if (typeof tag.notA === 'string') {\n      tag.notA = [tag.notA];\n    }\n  });\n  return tags;\n}; // build-out the tag-graph structure\n\n\nvar inferTags = function inferTags(tags) {\n  // validate data\n  tags = validate(tags); // build its 'down tags'\n\n  tags = _isA(tags); // infer the conflicts\n\n  tags = _notA(tags); // debug tag color\n\n  tags = _color(tags); // find incoming links\n\n  tags = _lineage(tags);\n  return tags;\n};\n\nvar inference = inferTags;\n\nvar addIn = function addIn(obj, tags) {\n  Object.keys(obj).forEach(function (k) {\n    tags[k] = obj[k];\n  });\n};\n\nvar build = function build() {\n  var tags = {};\n  addIn(nouns, tags);\n  addIn(verbs, tags);\n  addIn(values, tags);\n  addIn(misc, tags); // do the graph-stuff\n\n  tags = inference(tags);\n  return tags;\n};\n\nvar tags = build();\n\nvar seq = \"0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ\",\n    cache = seq.split(\"\").reduce(function (n, o, e) {\n  return n[o] = e, n;\n}, {}),\n    toAlphaCode = function toAlphaCode(n) {\n  if (void 0 !== seq[n]) return seq[n];\n  var o = 1,\n      e = 36,\n      t = \"\";\n\n  for (; n >= e; n -= e, o++, e *= 36) {\n  }\n\n  for (; o--;) {\n    var _o = n % 36;\n\n    t = String.fromCharCode((_o < 10 ? 48 : 55) + _o) + t, n = (n - _o) / 36;\n  }\n\n  return t;\n},\n    fromAlphaCode = function fromAlphaCode(n) {\n  if (void 0 !== cache[n]) return cache[n];\n  var o = 0,\n      e = 1,\n      t = 36,\n      r = 1;\n\n  for (; e < n.length; o += t, e++, t *= 36) {\n  }\n\n  for (var _e = n.length - 1; _e >= 0; _e--, r *= 36) {\n    var _t = n.charCodeAt(_e) - 48;\n\n    _t > 10 && (_t -= 7), o += _t * r;\n  }\n\n  return o;\n};\n\nvar encoding = {\n  toAlphaCode: toAlphaCode,\n  fromAlphaCode: fromAlphaCode\n},\n    symbols = function symbols(n) {\n  var o = new RegExp(\"([0-9A-Z]+):([0-9A-Z]+)\");\n\n  for (var e = 0; e < n.nodes.length; e++) {\n    var t = o.exec(n.nodes[e]);\n\n    if (!t) {\n      n.symCount = e;\n      break;\n    }\n\n    n.syms[encoding.fromAlphaCode(t[1])] = encoding.fromAlphaCode(t[2]);\n  }\n\n  n.nodes = n.nodes.slice(n.symCount, n.nodes.length);\n};\n\nvar indexFromRef = function indexFromRef(n, o, e) {\n  var t = encoding.fromAlphaCode(o);\n  return t < n.symCount ? n.syms[t] : e + t + 1 - n.symCount;\n},\n    toArray = function toArray(n) {\n  var o = [],\n      e = function e(t, r) {\n    var s = n.nodes[t];\n    \"!\" === s[0] && (o.push(r), s = s.slice(1));\n    var c = s.split(/([A-Z0-9,]+)/g);\n\n    for (var _s = 0; _s < c.length; _s += 2) {\n      var u = c[_s],\n          i = c[_s + 1];\n      if (!u) continue;\n      var l = r + u;\n\n      if (\",\" === i || void 0 === i) {\n        o.push(l);\n        continue;\n      }\n\n      var f = indexFromRef(n, i, t);\n      e(f, l);\n    }\n  };\n\n  return e(0, \"\"), o;\n},\n    unpack = function unpack(n) {\n  var o = {\n    nodes: n.split(\";\"),\n    syms: [],\n    symCount: 0\n  };\n  return n.match(\":\") && symbols(o), toArray(o);\n};\n\nvar unpack_1 = unpack,\n    unpack_1$1 = function unpack_1$1(n) {\n  var o = n.split(\"|\").reduce(function (n, o) {\n    var e = o.split(\"¦\");\n    return n[e[0]] = e[1], n;\n  }, {}),\n      e = {};\n  return Object.keys(o).forEach(function (n) {\n    var t = unpack_1(o[n]);\n    \"true\" === n && (n = !0);\n\n    for (var _o2 = 0; _o2 < t.length; _o2++) {\n      var r = t[_o2];\n      !0 === e.hasOwnProperty(r) ? !1 === Array.isArray(e[r]) ? e[r] = [e[r], n] : e[r].push(n) : e[r] = n;\n    }\n  }), e;\n};\n\nvar efrtUnpack_min = unpack_1$1;\n\n//safely add it to the lexicon\nvar addWord = function addWord(word, tag, lex) {\n  if (lex[word] !== undefined) {\n    if (typeof lex[word] === 'string') {\n      lex[word] = [lex[word]];\n    }\n\n    if (typeof tag === 'string') {\n      lex[word].push(tag);\n    } else {\n      lex[word] = lex[word].concat(tag);\n    }\n  } else {\n    lex[word] = tag;\n  }\n}; // blast-out more forms for some given words\n\n\nvar addMore = function addMore(word, tag, world) {\n  var lexicon = world.words;\n  var transform = world.transforms; // cache multi-words\n\n  var words = word.split(' ');\n\n  if (words.length > 1) {\n    //cache the beginning word\n    world.hasCompound[words[0]] = true;\n  } // inflect our nouns\n\n\n  if (tag === 'Singular') {\n    var plural = transform.toPlural(word, world);\n    lexicon[plural] = lexicon[plural] || 'Plural'; // only if it's safe\n  } //conjugate our verbs\n\n\n  if (tag === 'Infinitive') {\n    var conj = transform.conjugate(word, world);\n    var tags = Object.keys(conj);\n\n    for (var i = 0; i < tags.length; i++) {\n      var w = conj[tags[i]];\n      lexicon[w] = lexicon[w] || tags[i]; // only if it's safe\n    }\n  } //derive more adjective forms\n\n\n  if (tag === 'Comparable') {\n    var _conj = transform.adjectives(word);\n\n    var _tags = Object.keys(_conj);\n\n    for (var _i = 0; _i < _tags.length; _i++) {\n      var _w = _conj[_tags[_i]];\n      lexicon[_w] = lexicon[_w] || _tags[_i]; // only if it's safe\n    }\n  } //conjugate phrasal-verbs\n\n\n  if (tag === 'PhrasalVerb') {\n    //add original form\n    addWord(word, 'Infinitive', lexicon); //conjugate first word\n\n    var _conj2 = transform.conjugate(words[0], world);\n\n    var _tags2 = Object.keys(_conj2);\n\n    for (var _i2 = 0; _i2 < _tags2.length; _i2++) {\n      //add it to our cache\n      world.hasCompound[_conj2[_tags2[_i2]]] = true; //first + last words\n\n      var _w2 = _conj2[_tags2[_i2]] + ' ' + words[1];\n\n      addWord(_w2, _tags2[_i2], lexicon);\n      addWord(_w2, 'PhrasalVerb', lexicon);\n    }\n  } // inflect our demonyms - 'germans'\n\n\n  if (tag === 'Demonym') {\n    var _plural = transform.toPlural(word, world);\n\n    lexicon[_plural] = lexicon[_plural] || ['Demonym', 'Plural']; // only if it's safe\n  }\n}; // throw a bunch of words in our lexicon\n// const doWord = function(words, tag, world) {\n//   let lexicon = world.words\n//   for (let i = 0; i < words.length; i++) {\n//     addWord(words[i], tag, lexicon)\n//     // do some fancier stuff\n//     addMore(words[i], tag, world)\n//   }\n// }\n\n\nvar addWords = {\n  addWord: addWord,\n  addMore: addMore\n};\n\n// add words from plurals and conjugations data\nvar addIrregulars = function addIrregulars(world) {\n  //add irregular plural nouns\n  var nouns = world.irregulars.nouns;\n  var words = Object.keys(nouns);\n\n  for (var i = 0; i < words.length; i++) {\n    var w = words[i];\n    world.words[w] = 'Singular';\n    world.words[nouns[w]] = 'Plural';\n  } // add irregular verb conjugations\n\n\n  var verbs = world.irregulars.verbs;\n  var keys = Object.keys(verbs);\n\n  var _loop = function _loop(_i) {\n    var inf = keys[_i]; //add only if it it's safe...\n\n    world.words[inf] = world.words[inf] || 'Infinitive';\n    var forms = world.transforms.conjugate(inf, world);\n    forms = Object.assign(forms, verbs[inf]); //add the others\n\n    Object.keys(forms).forEach(function (tag) {\n      world.words[forms[tag]] = world.words[forms[tag]] || tag;\n    });\n  };\n\n  for (var _i = 0; _i < keys.length; _i++) {\n    _loop(_i);\n  }\n};\n\nvar addIrregulars_1 = addIrregulars;\n\n//words that can't be compressed, for whatever reason\nvar misc$1 = {\n  // numbers\n  '20th century fox': 'Organization',\n  // '3m': 'Organization',\n  '7 eleven': 'Organization',\n  '7-eleven': 'Organization',\n  g8: 'Organization',\n  'motel 6': 'Organization',\n  vh1: 'Organization',\n  q1: 'Date',\n  q2: 'Date',\n  q3: 'Date',\n  q4: 'Date'\n};\n\n//nouns with irregular plural/singular forms\n//used in noun.inflect, and also in the lexicon.\nvar plurals = {\n  addendum: 'addenda',\n  alga: 'algae',\n  alumna: 'alumnae',\n  alumnus: 'alumni',\n  analysis: 'analyses',\n  antenna: 'antennae',\n  appendix: 'appendices',\n  avocado: 'avocados',\n  axis: 'axes',\n  bacillus: 'bacilli',\n  barracks: 'barracks',\n  beau: 'beaux',\n  bus: 'buses',\n  cactus: 'cacti',\n  chateau: 'chateaux',\n  child: 'children',\n  circus: 'circuses',\n  clothes: 'clothes',\n  corpus: 'corpora',\n  criterion: 'criteria',\n  curriculum: 'curricula',\n  database: 'databases',\n  deer: 'deer',\n  diagnosis: 'diagnoses',\n  echo: 'echoes',\n  embargo: 'embargoes',\n  epoch: 'epochs',\n  foot: 'feet',\n  formula: 'formulae',\n  fungus: 'fungi',\n  genus: 'genera',\n  goose: 'geese',\n  halo: 'halos',\n  hippopotamus: 'hippopotami',\n  index: 'indices',\n  larva: 'larvae',\n  leaf: 'leaves',\n  libretto: 'libretti',\n  loaf: 'loaves',\n  man: 'men',\n  matrix: 'matrices',\n  memorandum: 'memoranda',\n  modulus: 'moduli',\n  mosquito: 'mosquitoes',\n  mouse: 'mice',\n  move: 'moves',\n  nebula: 'nebulae',\n  nucleus: 'nuclei',\n  octopus: 'octopi',\n  opus: 'opera',\n  ovum: 'ova',\n  ox: 'oxen',\n  parenthesis: 'parentheses',\n  person: 'people',\n  phenomenon: 'phenomena',\n  prognosis: 'prognoses',\n  quiz: 'quizzes',\n  radius: 'radii',\n  referendum: 'referenda',\n  rodeo: 'rodeos',\n  sex: 'sexes',\n  shoe: 'shoes',\n  sombrero: 'sombreros',\n  stimulus: 'stimuli',\n  stomach: 'stomachs',\n  syllabus: 'syllabi',\n  synopsis: 'synopses',\n  tableau: 'tableaux',\n  thesis: 'theses',\n  thief: 'thieves',\n  tooth: 'teeth',\n  tornado: 'tornados',\n  tuxedo: 'tuxedos',\n  vertebra: 'vertebrae' // virus: 'viri',\n  // zero: 'zeros',\n\n};\n\n// a list of irregular verb conjugations\n// used in verbs().conjugate()\n// but also added to our lexicon\n//use shorter key-names\nvar mapping = {\n  g: 'Gerund',\n  prt: 'Participle',\n  perf: 'PerfectTense',\n  pst: 'PastTense',\n  fut: 'FuturePerfect',\n  pres: 'PresentTense',\n  pluperf: 'Pluperfect',\n  a: 'Actor'\n}; // '_' in conjugations is the infinitive form\n\nvar conjugations = {\n  act: {\n    a: '_or'\n  },\n  ache: {\n    pst: 'ached',\n    g: 'aching'\n  },\n  age: {\n    g: 'ageing',\n    pst: 'aged',\n    pres: 'ages'\n  },\n  aim: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed'\n  },\n  arise: {\n    prt: '_n',\n    pst: 'arose'\n  },\n  babysit: {\n    a: '_ter',\n    pst: 'babysat'\n  },\n  ban: {\n    a: '',\n    g: '_ning',\n    pst: '_ned'\n  },\n  be: {\n    a: '',\n    g: 'am',\n    prt: 'been',\n    pst: 'was',\n    pres: 'is'\n  },\n  beat: {\n    a: '_er',\n    g: '_ing',\n    prt: '_en'\n  },\n  become: {\n    prt: '_'\n  },\n  begin: {\n    g: '_ning',\n    prt: 'begun',\n    pst: 'began'\n  },\n  being: {\n    g: 'are',\n    pst: 'were',\n    pres: 'are'\n  },\n  bend: {\n    prt: 'bent'\n  },\n  bet: {\n    a: '_ter',\n    prt: '_'\n  },\n  bind: {\n    pst: 'bound'\n  },\n  bite: {\n    g: 'biting',\n    prt: 'bitten',\n    pst: 'bit'\n  },\n  bleed: {\n    prt: 'bled',\n    pst: 'bled'\n  },\n  blow: {\n    prt: '_n',\n    pst: 'blew'\n  },\n  boil: {\n    a: '_er'\n  },\n  brake: {\n    prt: 'broken'\n  },\n  \"break\": {\n    pst: 'broke'\n  },\n  breed: {\n    pst: 'bred'\n  },\n  bring: {\n    prt: 'brought',\n    pst: 'brought'\n  },\n  broadcast: {\n    pst: '_'\n  },\n  budget: {\n    pst: '_ed'\n  },\n  build: {\n    prt: 'built',\n    pst: 'built'\n  },\n  burn: {\n    prt: '_ed'\n  },\n  burst: {\n    prt: '_'\n  },\n  buy: {\n    prt: 'bought',\n    pst: 'bought'\n  },\n  can: {\n    a: '',\n    fut: '_',\n    g: '',\n    pst: 'could',\n    perf: 'could',\n    pluperf: 'could',\n    pres: '_'\n  },\n  \"catch\": {\n    pst: 'caught'\n  },\n  choose: {\n    g: 'choosing',\n    prt: 'chosen',\n    pst: 'chose'\n  },\n  cling: {\n    prt: 'clung'\n  },\n  come: {\n    prt: '_',\n    pst: 'came',\n    g: 'coming'\n  },\n  compete: {\n    a: 'competitor',\n    g: 'competing',\n    pst: '_d'\n  },\n  cost: {\n    pst: '_'\n  },\n  creep: {\n    prt: 'crept'\n  },\n  cut: {\n    prt: '_'\n  },\n  deal: {\n    prt: '_t',\n    pst: '_t'\n  },\n  develop: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed'\n  },\n  die: {\n    g: 'dying',\n    pst: '_d'\n  },\n  dig: {\n    g: '_ging',\n    prt: 'dug',\n    pst: 'dug'\n  },\n  dive: {\n    prt: '_d'\n  },\n  \"do\": {\n    pst: 'did',\n    pres: '_es'\n  },\n  draw: {\n    prt: '_n',\n    pst: 'drew'\n  },\n  dream: {\n    prt: '_t'\n  },\n  drink: {\n    prt: 'drunk',\n    pst: 'drank'\n  },\n  drive: {\n    g: 'driving',\n    prt: '_n',\n    pst: 'drove'\n  },\n  drop: {\n    g: '_ping',\n    pst: '_ped'\n  },\n  eat: {\n    a: '_er',\n    g: '_ing',\n    prt: '_en',\n    pst: 'ate'\n  },\n  edit: {\n    pst: '_ed',\n    g: '_ing'\n  },\n  egg: {\n    pst: '_ed'\n  },\n  fall: {\n    prt: '_en',\n    pst: 'fell'\n  },\n  feed: {\n    prt: 'fed',\n    pst: 'fed'\n  },\n  feel: {\n    a: '_er',\n    pst: 'felt'\n  },\n  fight: {\n    prt: 'fought',\n    pst: 'fought'\n  },\n  find: {\n    pst: 'found'\n  },\n  flee: {\n    g: '_ing',\n    prt: 'fled'\n  },\n  fling: {\n    prt: 'flung'\n  },\n  fly: {\n    prt: 'flown',\n    pst: 'flew'\n  },\n  forbid: {\n    pst: 'forbade'\n  },\n  forget: {\n    g: '_ing',\n    prt: 'forgotten',\n    pst: 'forgot'\n  },\n  forgive: {\n    g: 'forgiving',\n    prt: '_n',\n    pst: 'forgave'\n  },\n  free: {\n    a: '',\n    g: '_ing'\n  },\n  freeze: {\n    g: 'freezing',\n    prt: 'frozen',\n    pst: 'froze'\n  },\n  get: {\n    pst: 'got',\n    prt: 'gotten'\n  },\n  give: {\n    g: 'giving',\n    prt: '_n',\n    pst: 'gave'\n  },\n  go: {\n    prt: '_ne',\n    pst: 'went',\n    pres: 'goes'\n  },\n  grow: {\n    prt: '_n'\n  },\n  hang: {\n    prt: 'hung',\n    pst: 'hung'\n  },\n  have: {\n    g: 'having',\n    prt: 'had',\n    pst: 'had',\n    pres: 'has'\n  },\n  hear: {\n    prt: '_d',\n    pst: '_d'\n  },\n  hide: {\n    prt: 'hidden',\n    pst: 'hid'\n  },\n  hit: {\n    prt: '_'\n  },\n  hold: {\n    prt: 'held',\n    pst: 'held'\n  },\n  hurt: {\n    prt: '_',\n    pst: '_'\n  },\n  ice: {\n    g: 'icing',\n    pst: '_d'\n  },\n  imply: {\n    pst: 'implied',\n    pres: 'implies'\n  },\n  is: {\n    a: '',\n    g: 'being',\n    pst: 'was',\n    pres: '_'\n  },\n  keep: {\n    prt: 'kept'\n  },\n  kneel: {\n    prt: 'knelt'\n  },\n  know: {\n    prt: '_n'\n  },\n  lay: {\n    prt: 'laid',\n    pst: 'laid'\n  },\n  lead: {\n    prt: 'led',\n    pst: 'led'\n  },\n  leap: {\n    prt: '_t'\n  },\n  leave: {\n    prt: 'left',\n    pst: 'left'\n  },\n  lend: {\n    prt: 'lent'\n  },\n  lie: {\n    g: 'lying',\n    pst: 'lay'\n  },\n  light: {\n    prt: 'lit',\n    pst: 'lit'\n  },\n  log: {\n    g: '_ging',\n    pst: '_ged'\n  },\n  loose: {\n    prt: 'lost'\n  },\n  lose: {\n    g: 'losing',\n    pst: 'lost'\n  },\n  make: {\n    prt: 'made',\n    pst: 'made'\n  },\n  mean: {\n    prt: '_t',\n    pst: '_t'\n  },\n  meet: {\n    a: '_er',\n    g: '_ing',\n    prt: 'met',\n    pst: 'met'\n  },\n  miss: {\n    pres: '_'\n  },\n  name: {\n    g: 'naming'\n  },\n  pay: {\n    prt: 'paid',\n    pst: 'paid'\n  },\n  prove: {\n    prt: '_n'\n  },\n  puke: {\n    g: 'puking'\n  },\n  put: {\n    prt: '_'\n  },\n  quit: {\n    prt: '_'\n  },\n  read: {\n    prt: '_',\n    pst: '_'\n  },\n  ride: {\n    prt: 'ridden'\n  },\n  ring: {\n    prt: 'rung',\n    pst: 'rang'\n  },\n  rise: {\n    fut: 'will have _n',\n    g: 'rising',\n    prt: '_n',\n    pst: 'rose',\n    pluperf: 'had _n'\n  },\n  rub: {\n    g: '_bing',\n    pst: '_bed'\n  },\n  run: {\n    g: '_ning',\n    prt: '_',\n    pst: 'ran'\n  },\n  say: {\n    prt: 'said',\n    pst: 'said',\n    pres: '_s'\n  },\n  seat: {\n    prt: 'sat'\n  },\n  see: {\n    g: '_ing',\n    prt: '_n',\n    pst: 'saw'\n  },\n  seek: {\n    prt: 'sought'\n  },\n  sell: {\n    prt: 'sold',\n    pst: 'sold'\n  },\n  send: {\n    prt: 'sent'\n  },\n  set: {\n    prt: '_'\n  },\n  sew: {\n    prt: '_n'\n  },\n  shake: {\n    prt: '_n'\n  },\n  shave: {\n    prt: '_d'\n  },\n  shed: {\n    g: '_ding',\n    pst: '_',\n    pres: '_s'\n  },\n  shine: {\n    prt: 'shone',\n    pst: 'shone'\n  },\n  shoot: {\n    prt: 'shot',\n    pst: 'shot'\n  },\n  show: {\n    pst: '_ed'\n  },\n  shut: {\n    prt: '_'\n  },\n  sing: {\n    prt: 'sung',\n    pst: 'sang'\n  },\n  sink: {\n    pst: 'sank',\n    pluperf: 'had sunk'\n  },\n  sit: {\n    pst: 'sat'\n  },\n  ski: {\n    pst: '_ied'\n  },\n  slay: {\n    prt: 'slain'\n  },\n  sleep: {\n    prt: 'slept'\n  },\n  slide: {\n    prt: 'slid',\n    pst: 'slid'\n  },\n  smash: {\n    pres: '_es'\n  },\n  sneak: {\n    prt: 'snuck'\n  },\n  speak: {\n    fut: 'will have spoken',\n    prt: 'spoken',\n    pst: 'spoke',\n    perf: 'have spoken',\n    pluperf: 'had spoken'\n  },\n  speed: {\n    prt: 'sped'\n  },\n  spend: {\n    prt: 'spent'\n  },\n  spill: {\n    prt: '_ed',\n    pst: 'spilt'\n  },\n  spin: {\n    g: '_ning',\n    prt: 'spun',\n    pst: 'spun'\n  },\n  spit: {\n    prt: 'spat'\n  },\n  split: {\n    prt: '_'\n  },\n  spread: {\n    pst: '_'\n  },\n  spring: {\n    prt: 'sprung'\n  },\n  stand: {\n    pst: 'stood'\n  },\n  steal: {\n    a: '_er',\n    pst: 'stole'\n  },\n  stick: {\n    pst: 'stuck'\n  },\n  sting: {\n    pst: 'stung'\n  },\n  stink: {\n    prt: 'stunk',\n    pst: 'stunk'\n  },\n  stream: {\n    a: '_er'\n  },\n  strew: {\n    prt: '_n'\n  },\n  strike: {\n    g: 'striking',\n    pst: 'struck'\n  },\n  suit: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed'\n  },\n  sware: {\n    prt: 'sworn'\n  },\n  swear: {\n    pst: 'swore'\n  },\n  sweep: {\n    prt: 'swept'\n  },\n  swim: {\n    g: '_ming',\n    pst: 'swam'\n  },\n  swing: {\n    pst: 'swung'\n  },\n  take: {\n    fut: 'will have _n',\n    pst: 'took',\n    perf: 'have _n',\n    pluperf: 'had _n'\n  },\n  teach: {\n    pst: 'taught',\n    pres: '_es'\n  },\n  tear: {\n    pst: 'tore'\n  },\n  tell: {\n    pst: 'told'\n  },\n  think: {\n    pst: 'thought'\n  },\n  thrive: {\n    prt: '_d'\n  },\n  tie: {\n    g: 'tying',\n    pst: '_d'\n  },\n  undergo: {\n    prt: '_ne'\n  },\n  understand: {\n    pst: 'understood'\n  },\n  upset: {\n    prt: '_'\n  },\n  wait: {\n    a: '_er',\n    g: '_ing',\n    pst: '_ed'\n  },\n  wake: {\n    pst: 'woke'\n  },\n  wear: {\n    pst: 'wore'\n  },\n  weave: {\n    prt: 'woven'\n  },\n  wed: {\n    pst: 'wed'\n  },\n  weep: {\n    prt: 'wept'\n  },\n  win: {\n    g: '_ning',\n    pst: 'won'\n  },\n  wind: {\n    prt: 'wound'\n  },\n  withdraw: {\n    pst: 'withdrew'\n  },\n  wring: {\n    prt: 'wrung'\n  },\n  write: {\n    g: 'writing',\n    prt: 'written',\n    pst: 'wrote'\n  }\n}; //uncompress our ad-hoc compression scheme\n\nvar keys = Object.keys(conjugations);\n\nvar _loop = function _loop(i) {\n  var inf = keys[i];\n  var _final = {};\n  Object.keys(conjugations[inf]).forEach(function (key) {\n    var str = conjugations[inf][key]; //swap-in infinitives for '_'\n\n    str = str.replace('_', inf);\n    var full = mapping[key];\n    _final[full] = str;\n  }); //over-write original\n\n  conjugations[inf] = _final;\n};\n\nfor (var i = 0; i < keys.length; i++) {\n  _loop(i);\n}\n\nvar conjugations_1 = conjugations;\n\nvar endsWith = {\n  b: [{\n    reg: /([^aeiou][aeiou])b$/i,\n    repl: {\n      pr: '$1bs',\n      pa: '$1bbed',\n      gr: '$1bbing'\n    }\n  }],\n  d: [{\n    reg: /(end)$/i,\n    repl: {\n      pr: '$1s',\n      pa: 'ent',\n      gr: '$1ing',\n      ar: '$1er'\n    }\n  }, {\n    reg: /(eed)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing',\n      ar: '$1er'\n    }\n  }, {\n    reg: /(ed)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ded',\n      ar: '$1der',\n      gr: '$1ding'\n    }\n  }, {\n    reg: /([^aeiou][ou])d$/i,\n    repl: {\n      pr: '$1ds',\n      pa: '$1dded',\n      gr: '$1dding'\n    }\n  }],\n  e: [{\n    reg: /(eave)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1d',\n      gr: 'eaving',\n      ar: '$1r'\n    }\n  }, {\n    reg: /(ide)$/i,\n    repl: {\n      pr: '$1s',\n      pa: 'ode',\n      gr: 'iding',\n      ar: 'ider'\n    }\n  }, {\n    //shake\n    reg: /(t|sh?)(ake)$/i,\n    repl: {\n      pr: '$1$2s',\n      pa: '$1ook',\n      gr: '$1aking',\n      ar: '$1$2r'\n    }\n  }, {\n    //awake\n    reg: /w(ake)$/i,\n    repl: {\n      pr: 'w$1s',\n      pa: 'woke',\n      gr: 'waking',\n      ar: 'w$1r'\n    }\n  }, {\n    //make\n    reg: /m(ake)$/i,\n    repl: {\n      pr: 'm$1s',\n      pa: 'made',\n      gr: 'making',\n      ar: 'm$1r'\n    }\n  }, {\n    reg: /(a[tg]|i[zn]|ur|nc|gl|is)e$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing' // prt: '$1en',\n\n    }\n  }, {\n    reg: /([bd]l)e$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(om)e$/i,\n    repl: {\n      pr: '$1es',\n      pa: 'ame',\n      gr: '$1ing'\n    }\n  }],\n  g: [{\n    reg: /([^aeiou][ou])g$/i,\n    repl: {\n      pr: '$1gs',\n      pa: '$1gged',\n      gr: '$1gging'\n    }\n  }],\n  h: [{\n    reg: /(..)([cs]h)$/i,\n    repl: {\n      pr: '$1$2es',\n      pa: '$1$2ed',\n      gr: '$1$2ing'\n    }\n  }],\n  k: [{\n    reg: /(ink)$/i,\n    repl: {\n      pr: '$1s',\n      pa: 'unk',\n      gr: '$1ing',\n      ar: '$1er'\n    }\n  }],\n  m: [{\n    reg: /([^aeiou][aeiou])m$/i,\n    repl: {\n      pr: '$1ms',\n      pa: '$1mmed',\n      gr: '$1mming'\n    }\n  }],\n  n: [{\n    reg: /(en)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }],\n  p: [{\n    reg: /(e)(ep)$/i,\n    repl: {\n      pr: '$1$2s',\n      pa: '$1pt',\n      gr: '$1$2ing',\n      ar: '$1$2er'\n    }\n  }, {\n    reg: /([^aeiou][aeiou])p$/i,\n    repl: {\n      pr: '$1ps',\n      pa: '$1pped',\n      gr: '$1pping'\n    }\n  }, {\n    reg: /([aeiu])p$/i,\n    repl: {\n      pr: '$1ps',\n      pa: '$1p',\n      gr: '$1pping'\n    }\n  }],\n  r: [{\n    reg: /([td]er)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(er)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }],\n  s: [{\n    reg: /(ish|tch|ess)$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }],\n  t: [{\n    reg: /(ion|end|e[nc]t)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /(.eat)$/i,\n    repl: {\n      pr: '$1s',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }, {\n    reg: /([aeiu])t$/i,\n    repl: {\n      pr: '$1ts',\n      pa: '$1t',\n      gr: '$1tting'\n    }\n  }, {\n    reg: /([^aeiou][aeiou])t$/i,\n    repl: {\n      pr: '$1ts',\n      pa: '$1tted',\n      gr: '$1tting'\n    }\n  }],\n  w: [{\n    reg: /(..)(ow)$/i,\n    repl: {\n      pr: '$1$2s',\n      pa: '$1ew',\n      gr: '$1$2ing',\n      prt: '$1$2n'\n    }\n  }],\n  y: [{\n    reg: /([i|f|rr])y$/i,\n    repl: {\n      pr: '$1ies',\n      pa: '$1ied',\n      gr: '$1ying'\n    }\n  }],\n  z: [{\n    reg: /([aeiou]zz)$/i,\n    repl: {\n      pr: '$1es',\n      pa: '$1ed',\n      gr: '$1ing'\n    }\n  }]\n};\nvar suffixes = endsWith;\n\nvar posMap = {\n  pr: 'PresentTense',\n  pa: 'PastTense',\n  gr: 'Gerund',\n  prt: 'Participle',\n  ar: 'Actor'\n};\n\nvar doTransform = function doTransform(str, obj) {\n  var found = {};\n  var keys = Object.keys(obj.repl);\n\n  for (var i = 0; i < keys.length; i += 1) {\n    var pos = keys[i];\n    found[posMap[pos]] = str.replace(obj.reg, obj.repl[pos]);\n  }\n\n  return found;\n}; //look at the end of the word for clues\n\n\nvar checkSuffix = function checkSuffix() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var c = str[str.length - 1];\n\n  if (suffixes.hasOwnProperty(c) === true) {\n    for (var r = 0; r < suffixes[c].length; r += 1) {\n      var reg = suffixes[c][r].reg;\n\n      if (reg.test(str) === true) {\n        return doTransform(str, suffixes[c][r]);\n      }\n    }\n  }\n\n  return {};\n};\n\nvar _01Suffixes = checkSuffix;\n\n//non-specifc, 'hail-mary' transforms from infinitive, into other forms\nvar hasY = /[bcdfghjklmnpqrstvwxz]y$/;\nvar generic = {\n  Gerund: function Gerund(inf) {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf.replace(/e$/, 'ing');\n    }\n\n    return inf + 'ing';\n  },\n  PresentTense: function PresentTense(inf) {\n    if (inf.charAt(inf.length - 1) === 's') {\n      return inf + 'es';\n    }\n\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ies';\n    }\n\n    return inf + 's';\n  },\n  PastTense: function PastTense(inf) {\n    if (inf.charAt(inf.length - 1) === 'e') {\n      return inf + 'd';\n    }\n\n    if (inf.substr(-2) === 'ed') {\n      return inf;\n    }\n\n    if (hasY.test(inf) === true) {\n      return inf.slice(0, -1) + 'ied';\n    }\n\n    return inf + 'ed';\n  }\n};\nvar _02Generic = generic;\n\n//we assume the input word is a proper infinitive\n\nvar conjugate = function conjugate() {\n  var inf = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var world = arguments.length > 1 ? arguments[1] : undefined;\n  var found = {}; // 1. look at irregulars\n  //the lexicon doesn't pass this in\n\n  if (world && world.irregulars) {\n    if (world.irregulars.verbs.hasOwnProperty(inf) === true) {\n      found = Object.assign({}, world.irregulars.verbs[inf]);\n    }\n  } //2. rule-based regex\n\n\n  found = Object.assign({}, _01Suffixes(inf), found); //3. generic transformations\n  //'buzzing'\n\n  if (found.Gerund === undefined) {\n    found.Gerund = _02Generic.Gerund(inf);\n  } //'buzzed'\n\n\n  if (found.PastTense === undefined) {\n    found.PastTense = _02Generic.PastTense(inf);\n  } //'buzzes'\n\n\n  if (found.PresentTense === undefined) {\n    found.PresentTense = _02Generic.PresentTense(inf);\n  }\n\n  return found;\n};\n\nvar conjugate_1 = conjugate; // console.log(conjugate('bake'))\n\n//turn 'quick' into 'quickest'\nvar do_rules = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /oud$/, /...p$/];\nvar dont_rules = [/ary$/];\nvar irregulars = {\n  nice: 'nicest',\n  late: 'latest',\n  hard: 'hardest',\n  inner: 'innermost',\n  outer: 'outermost',\n  far: 'furthest',\n  worse: 'worst',\n  bad: 'worst',\n  good: 'best',\n  big: 'biggest',\n  large: 'largest'\n};\nvar transforms = [{\n  reg: /y$/i,\n  repl: 'iest'\n}, {\n  reg: /([aeiou])t$/i,\n  repl: '$1ttest'\n}, {\n  reg: /([aeou])de$/i,\n  repl: '$1dest'\n}, {\n  reg: /nge$/i,\n  repl: 'ngest'\n}, {\n  reg: /([aeiou])te$/i,\n  repl: '$1test'\n}];\n\nvar to_superlative = function to_superlative(str) {\n  //irregulars\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  } //known transforms\n\n\n  for (var i = 0; i < transforms.length; i++) {\n    if (transforms[i].reg.test(str)) {\n      return str.replace(transforms[i].reg, transforms[i].repl);\n    }\n  } //dont-rules\n\n\n  for (var _i = 0; _i < dont_rules.length; _i++) {\n    if (dont_rules[_i].test(str) === true) {\n      return null;\n    }\n  } //do-rules\n\n\n  for (var _i2 = 0; _i2 < do_rules.length; _i2++) {\n    if (do_rules[_i2].test(str) === true) {\n      if (str.charAt(str.length - 1) === 'e') {\n        return str + 'st';\n      }\n\n      return str + 'est';\n    }\n  }\n\n  return str + 'est';\n};\n\nvar toSuperlative = to_superlative;\n\n//turn 'quick' into 'quickly'\nvar do_rules$1 = [/ght$/, /nge$/, /ough$/, /ain$/, /uel$/, /[au]ll$/, /ow$/, /old$/, /oud$/, /e[ae]p$/];\nvar dont_rules$1 = [/ary$/, /ous$/];\nvar irregulars$1 = {\n  grey: 'greyer',\n  gray: 'grayer',\n  green: 'greener',\n  yellow: 'yellower',\n  red: 'redder',\n  good: 'better',\n  well: 'better',\n  bad: 'worse',\n  sad: 'sadder',\n  big: 'bigger'\n};\nvar transforms$1 = [{\n  reg: /y$/i,\n  repl: 'ier'\n}, {\n  reg: /([aeiou])t$/i,\n  repl: '$1tter'\n}, {\n  reg: /([aeou])de$/i,\n  repl: '$1der'\n}, {\n  reg: /nge$/i,\n  repl: 'nger'\n}];\n\nvar to_comparative = function to_comparative(str) {\n  //known-irregulars\n  if (irregulars$1.hasOwnProperty(str)) {\n    return irregulars$1[str];\n  } //known-transforms\n\n\n  for (var i = 0; i < transforms$1.length; i++) {\n    if (transforms$1[i].reg.test(str) === true) {\n      return str.replace(transforms$1[i].reg, transforms$1[i].repl);\n    }\n  } //dont-patterns\n\n\n  for (var _i = 0; _i < dont_rules$1.length; _i++) {\n    if (dont_rules$1[_i].test(str) === true) {\n      return null;\n    }\n  } //do-patterns\n\n\n  for (var _i2 = 0; _i2 < do_rules$1.length; _i2++) {\n    if (do_rules$1[_i2].test(str) === true) {\n      return str + 'er';\n    }\n  } //easy-one\n\n\n  if (/e$/.test(str) === true) {\n    return str + 'r';\n  }\n\n  return str + 'er';\n};\n\nvar toComparative = to_comparative;\n\nvar fns$1 = {\n  toSuperlative: toSuperlative,\n  toComparative: toComparative\n};\n/** conjugate an adjective into other forms */\n\nvar conjugate$1 = function conjugate(w) {\n  var res = {}; // 'greatest'\n\n  var sup = fns$1.toSuperlative(w);\n\n  if (sup) {\n    res.Superlative = sup;\n  } // 'greater'\n\n\n  var comp = fns$1.toComparative(w);\n\n  if (comp) {\n    res.Comparative = comp;\n  }\n\n  return res;\n};\n\nvar adjectives = conjugate$1;\n\n/** patterns for turning 'bus' to 'buses'*/\nvar suffixes$1 = {\n  a: [[/(antenn|formul|nebul|vertebr|vit)a$/i, '$1ae'], [/([ti])a$/i, '$1a']],\n  e: [[/(kn|l|w)ife$/i, '$1ives'], [/(hive)$/i, '$1s'], [/([m|l])ouse$/i, '$1ice'], [/([m|l])ice$/i, '$1ice']],\n  f: [[/^(dwar|handkerchie|hoo|scar|whar)f$/i, '$1ves'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)f$/i, '$1ves']],\n  i: [[/(octop|vir)i$/i, '$1i']],\n  m: [[/([ti])um$/i, '$1a']],\n  n: [[/^(oxen)$/i, '$1']],\n  o: [[/(al|ad|at|er|et|ed|ad)o$/i, '$1oes']],\n  s: [[/(ax|test)is$/i, '$1es'], [/(alias|status)$/i, '$1es'], [/sis$/i, 'ses'], [/(bu)s$/i, '$1ses'], [/(sis)$/i, 'ses'], [/^(?!talis|.*hu)(.*)man$/i, '$1men'], [/(octop|vir|radi|nucle|fung|cact|stimul)us$/i, '$1i']],\n  x: [[/(matr|vert|ind|cort)(ix|ex)$/i, '$1ices'], [/^(ox)$/i, '$1en']],\n  y: [[/([^aeiouy]|qu)y$/i, '$1ies']],\n  z: [[/(quiz)$/i, '$1zes']]\n};\nvar _rules = suffixes$1;\n\nvar addE = /(x|ch|sh|s|z)$/;\n\nvar trySuffix = function trySuffix(str) {\n  var c = str[str.length - 1];\n\n  if (_rules.hasOwnProperty(c) === true) {\n    for (var i = 0; i < _rules[c].length; i += 1) {\n      var reg = _rules[c][i][0];\n\n      if (reg.test(str) === true) {\n        return str.replace(reg, _rules[c][i][1]);\n      }\n    }\n  }\n\n  return null;\n};\n/** Turn a singular noun into a plural\n * assume the given string is singular\n */\n\n\nvar pluralize = function pluralize() {\n  var str = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var world = arguments.length > 1 ? arguments[1] : undefined;\n  var irregulars = world.irregulars.nouns; // check irregulars list\n\n  if (irregulars.hasOwnProperty(str)) {\n    return irregulars[str];\n  } //we have some rules to try-out\n\n\n  var plural = trySuffix(str);\n\n  if (plural !== null) {\n    return plural;\n  } //like 'church'\n\n\n  if (addE.test(str)) {\n    return str + 'es';\n  } // ¯\\_(ツ)_/¯\n\n\n  return str + 's';\n};\n\nvar toPlural = pluralize;\n\n//patterns for turning 'dwarves' to 'dwarf'\nvar _rules$1 = [[/([^v])ies$/i, '$1y'], [/ises$/i, 'isis'], [/(kn|[^o]l|w)ives$/i, '$1ife'], [/^((?:ca|e|ha|(?:our|them|your)?se|she|wo)l|lea|loa|shea|thie)ves$/i, '$1f'], [/^(dwar|handkerchie|hoo|scar|whar)ves$/i, '$1f'], [/(antenn|formul|nebul|vertebr|vit)ae$/i, '$1a'], [/(octop|vir|radi|nucle|fung|cact|stimul)(i)$/i, '$1us'], [/(buffal|tomat|tornad)(oes)$/i, '$1o'], // [/(analy|diagno|parenthe|progno|synop|the)ses$/i, '$1sis'],\n[/(eas)es$/i, '$1e'], //diseases\n[/(..[aeiou]s)es$/i, '$1'], //geniouses\n[/(vert|ind|cort)(ices)$/i, '$1ex'], [/(matr|append)(ices)$/i, '$1ix'], [/(x|ch|ss|sh|z|o)es$/i, '$1'], [/men$/i, 'man'], [/(n)ews$/i, '$1ews'], [/([ti])a$/i, '$1um'], [/([^aeiouy]|qu)ies$/i, '$1y'], [/(s)eries$/i, '$1eries'], [/(m)ovies$/i, '$1ovie'], [/([m|l])ice$/i, '$1ouse'], [/(cris|ax|test)es$/i, '$1is'], [/(alias|status)es$/i, '$1'], [/(ss)$/i, '$1'], [/(ics)$/i, '$1'], [/s$/i, '']];\n\nvar invertObj = function invertObj(obj) {\n  return Object.keys(obj).reduce(function (h, k) {\n    h[obj[k]] = k;\n    return h;\n  }, {});\n};\n\nvar toSingular = function toSingular(str, world) {\n  var irregulars = world.irregulars.nouns;\n  var invert = invertObj(irregulars); //(not very efficient)\n  // check irregulars list\n\n  if (invert.hasOwnProperty(str)) {\n    return invert[str];\n  } // go through our regexes\n\n\n  for (var i = 0; i < _rules$1.length; i++) {\n    if (_rules$1[i][0].test(str) === true) {\n      str = str.replace(_rules$1[i][0], _rules$1[i][1]);\n      return str;\n    }\n  }\n\n  return str;\n};\n\nvar toSingular_1 = toSingular;\n\n//rules for turning a verb into infinitive form\nvar rules = {\n  Participle: [{\n    reg: /own$/i,\n    to: 'ow'\n  }, {\n    reg: /(.)un([g|k])$/i,\n    to: '$1in$2'\n  }],\n  Actor: [{\n    reg: /(er)er$/i,\n    to: '$1'\n  }],\n  PresentTense: [{\n    reg: /(..)(ies)$/i,\n    to: '$1y'\n  }, {\n    reg: /(tch|sh)es$/i,\n    to: '$1'\n  }, {\n    reg: /(ss|zz)es$/i,\n    to: '$1'\n  }, {\n    reg: /([tzlshicgrvdnkmu])es$/i,\n    to: '$1e'\n  }, {\n    reg: /(n[dtk]|c[kt]|[eo]n|i[nl]|er|a[ytrl])s$/i,\n    to: '$1'\n  }, {\n    reg: /(ow)s$/i,\n    to: '$1'\n  }, {\n    reg: /(op)s$/i,\n    to: '$1'\n  }, {\n    reg: /([eirs])ts$/i,\n    to: '$1t'\n  }, {\n    reg: /(ll)s$/i,\n    to: '$1'\n  }, {\n    reg: /(el)s$/i,\n    to: '$1'\n  }, {\n    reg: /(ip)es$/i,\n    to: '$1e'\n  }, {\n    reg: /ss$/i,\n    to: 'ss'\n  }, {\n    reg: /s$/i,\n    to: ''\n  }],\n  Gerund: [{\n    //popping -> pop\n    reg: /(..)(p|d|t|g){2}ing$/i,\n    to: '$1$2'\n  }, {\n    //fuzzing -> fuzz\n    reg: /(ll|ss|zz)ing$/i,\n    to: '$1'\n  }, {\n    reg: /([^aeiou])ying$/i,\n    to: '$1y'\n  }, {\n    reg: /([^ae]i.)ing$/i,\n    to: '$1e'\n  }, {\n    //eating, reading\n    reg: /(ea[dklnrtv])ing$/i,\n    to: '$1'\n  }, {\n    //washing -> wash\n    reg: /(ch|sh)ing$/i,\n    to: '$1'\n  }, //soft-e forms:\n  {\n    //z : hazing (not buzzing)\n    reg: /(z)ing$/i,\n    to: '$1e'\n  }, {\n    //a : baking, undulating\n    reg: /(a[gdkvtc])ing$/i,\n    to: '$1e'\n  }, {\n    //u : conjuring, tubing\n    reg: /(u[rtcbn])ing$/i,\n    to: '$1e'\n  }, {\n    //o : forboding, poking, hoping, boring (not hooping)\n    reg: /([^o]o[bdknprv])ing$/i,\n    to: '$1e'\n  }, {\n    //ling : tingling, wrinkling, circling, scrambling, bustling\n    reg: /([tbckg]l)ing$/i,\n    //dp\n    to: '$1e'\n  }, {\n    //cing : bouncing, denouncing\n    reg: /(c|s)ing$/i,\n    //dp\n    to: '$1e'\n  }, // {\n  //   //soft-e :\n  //   reg: /([ua]s|[dr]g|z|o[rlsp]|cre)ing$/i,\n  //   to: '$1e',\n  // },\n  {\n    //fallback\n    reg: /(..)ing$/i,\n    to: '$1'\n  }],\n  PastTense: [{\n    reg: /(ued)$/i,\n    to: 'ue'\n  }, {\n    reg: /a([^aeiouy])ed$/i,\n    to: 'a$1e'\n  }, {\n    reg: /([aeiou]zz)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(e|i)lled$/i,\n    to: '$1ll'\n  }, {\n    reg: /(.)(sh|ch)ed$/i,\n    to: '$1$2'\n  }, {\n    reg: /(tl|gl)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(um?pt?)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(ss)ed$/i,\n    to: '$1'\n  }, {\n    reg: /pped$/i,\n    to: 'p'\n  }, {\n    reg: /tted$/i,\n    to: 't'\n  }, {\n    reg: /(..)gged$/i,\n    to: '$1g'\n  }, {\n    reg: /(..)lked$/i,\n    to: '$1lk'\n  }, {\n    reg: /([^aeiouy][aeiou])ked$/i,\n    to: '$1ke'\n  }, {\n    reg: /(.[aeiou])led$/i,\n    to: '$1l'\n  }, {\n    reg: /(..)(h|ion|n[dt]|ai.|[cs]t|pp|all|ss|tt|int|ail|ld|en|oo.|er|k|pp|w|ou.|rt|ght|rm)ed$/i,\n    to: '$1$2'\n  }, {\n    reg: /(.ut)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(.pt)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(us)ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(dd)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(..[^aeiouy])ed$/i,\n    to: '$1e'\n  }, {\n    reg: /(..)ied$/i,\n    to: '$1y'\n  }, {\n    reg: /(.o)ed$/i,\n    to: '$1o'\n  }, {\n    reg: /(..i)ed$/i,\n    to: '$1'\n  }, {\n    reg: /(.a[^aeiou])ed$/i,\n    to: '$1'\n  }, {\n    //owed, aced\n    reg: /([aeiou][^aeiou])ed$/i,\n    to: '$1e'\n  }, {\n    reg: /([rl])ew$/i,\n    to: '$1ow'\n  }, {\n    reg: /([pl])t$/i,\n    to: '$1t'\n  }]\n};\nvar _transform = rules;\n\nvar guessVerb = {\n  Gerund: ['ing'],\n  Actor: ['erer'],\n  Infinitive: ['ate', 'ize', 'tion', 'rify', 'then', 'ress', 'ify', 'age', 'nce', 'ect', 'ise', 'ine', 'ish', 'ace', 'ash', 'ure', 'tch', 'end', 'ack', 'and', 'ute', 'ade', 'ock', 'ite', 'ase', 'ose', 'use', 'ive', 'int', 'nge', 'lay', 'est', 'ain', 'ant', 'ent', 'eed', 'er', 'le', 'own', 'unk', 'ung', 'en'],\n  PastTense: ['ed', 'lt', 'nt', 'pt', 'ew', 'ld'],\n  PresentTense: ['rks', 'cks', 'nks', 'ngs', 'mps', 'tes', 'zes', 'ers', 'les', 'acks', 'ends', 'ands', 'ocks', 'lays', 'eads', 'lls', 'els', 'ils', 'ows', 'nds', 'ays', 'ams', 'ars', 'ops', 'ffs', 'als', 'urs', 'lds', 'ews', 'ips', 'es', 'ts', 'ns']\n}; //flip it into a lookup object\n\nguessVerb = Object.keys(guessVerb).reduce(function (h, k) {\n  guessVerb[k].forEach(function (a) {\n    return h[a] = k;\n  });\n  return h;\n}, {});\nvar _guess = guessVerb;\n\n/** it helps to know what we're conjugating from */\n\nvar guessTense = function guessTense(str) {\n  var three = str.substr(str.length - 3);\n\n  if (_guess.hasOwnProperty(three) === true) {\n    return _guess[three];\n  }\n\n  var two = str.substr(str.length - 2);\n\n  if (_guess.hasOwnProperty(two) === true) {\n    return _guess[two];\n  }\n\n  var one = str.substr(str.length - 1);\n\n  if (one === 's') {\n    return 'PresentTense';\n  }\n\n  return null;\n};\n\nvar toInfinitive = function toInfinitive(str, world, tense) {\n  if (!str) {\n    return '';\n  } //1. look at known irregulars\n\n\n  if (world.words.hasOwnProperty(str) === true) {\n    var irregs = world.irregulars.verbs;\n    var keys = Object.keys(irregs);\n\n    for (var i = 0; i < keys.length; i++) {\n      var forms = Object.keys(irregs[keys[i]]);\n\n      for (var o = 0; o < forms.length; o++) {\n        if (str === irregs[keys[i]][forms[o]]) {\n          return keys[i];\n        }\n      }\n    }\n  } // give'r!\n\n\n  tense = tense || guessTense(str);\n\n  if (tense && _transform[tense]) {\n    for (var _i = 0; _i < _transform[tense].length; _i++) {\n      var rule = _transform[tense][_i];\n\n      if (rule.reg.test(str) === true) {\n        // console.log(rule.reg)\n        return str.replace(rule.reg, rule.to);\n      }\n    }\n  }\n\n  return str;\n};\n\nvar toInfinitive_1 = toInfinitive;\n\nvar irregulars$2 = {\n  nouns: plurals,\n  verbs: conjugations_1\n}; //these behaviours are configurable & shared across some plugins\n\nvar transforms$2 = {\n  conjugate: conjugate_1,\n  adjectives: adjectives,\n  toPlural: toPlural,\n  toSingular: toSingular_1,\n  toInfinitive: toInfinitive_1\n};\nvar _isVerbose = false;\n/** all configurable linguistic data */\n\nvar World = /*#__PURE__*/function () {\n  function World() {\n    _classCallCheck(this, World);\n\n    // quiet these properties from a console.log\n    Object.defineProperty(this, 'words', {\n      enumerable: false,\n      value: misc$1,\n      writable: true\n    });\n    Object.defineProperty(this, 'hasCompound', {\n      enumerable: false,\n      value: {},\n      writable: true\n    });\n    Object.defineProperty(this, 'irregulars', {\n      enumerable: false,\n      value: irregulars$2,\n      writable: true\n    });\n    Object.defineProperty(this, 'tags', {\n      enumerable: false,\n      value: Object.assign({}, tags),\n      writable: true\n    });\n    Object.defineProperty(this, 'transforms', {\n      enumerable: false,\n      value: transforms$2,\n      writable: true\n    });\n    Object.defineProperty(this, 'taggers', {\n      enumerable: false,\n      value: [],\n      writable: true\n    }); // add our compressed data to lexicon\n\n    this.unpackWords(_data); // add our irregulars to lexicon\n\n    this.addIrregulars(); // cache our abbreviations for our sentence-parser\n\n    Object.defineProperty(this, 'cache', {\n      enumerable: false,\n      value: {\n        abbreviations: this.getByTag('Abbreviation')\n      }\n    });\n  }\n  /** more logs for debugging */\n\n\n  _createClass(World, [{\n    key: \"verbose\",\n    value: function verbose(bool) {\n      _isVerbose = bool;\n      return this;\n    }\n  }, {\n    key: \"isVerbose\",\n    value: function isVerbose() {\n      return _isVerbose;\n    }\n    /** get all terms in our lexicon with this tag */\n\n  }, {\n    key: \"getByTag\",\n    value: function getByTag(tag) {\n      var lex = this.words;\n      var res = {};\n      var words = Object.keys(lex);\n\n      for (var i = 0; i < words.length; i++) {\n        if (typeof lex[words[i]] === 'string') {\n          if (lex[words[i]] === tag) {\n            res[words[i]] = true;\n          }\n        } else if (lex[words[i]].some(function (t) {\n          return t === tag;\n        })) {\n          res[words[i]] = true;\n        }\n      }\n\n      return res;\n    }\n    /** augment our lingustic data with new data */\n\n  }, {\n    key: \"unpackWords\",\n    value: function unpackWords(lex) {\n      var tags = Object.keys(lex);\n\n      for (var i = 0; i < tags.length; i++) {\n        var words = Object.keys(efrtUnpack_min(lex[tags[i]]));\n\n        for (var w = 0; w < words.length; w++) {\n          addWords.addWord(words[w], tags[i], this.words); // do some fancier stuff\n\n          addWords.addMore(words[w], tags[i], this);\n        }\n      }\n    }\n    /** put new words into our lexicon, properly */\n\n  }, {\n    key: \"addWords\",\n    value: function addWords$1(obj) {\n      var keys = Object.keys(obj);\n\n      for (var i = 0; i < keys.length; i++) {\n        var word = keys[i].toLowerCase();\n        addWords.addWord(word, obj[keys[i]], this.words); // do some fancier stuff\n\n        addWords.addMore(word, obj[keys[i]], this);\n      }\n    }\n  }, {\n    key: \"addIrregulars\",\n    value: function addIrregulars() {\n      addIrregulars_1(this);\n\n      return this;\n    }\n    /** extend the compromise tagset */\n\n  }, {\n    key: \"addTags\",\n    value: function addTags(tags) {\n      tags = Object.assign({}, tags);\n      this.tags = Object.assign(this.tags, tags); // calculate graph implications for the new tags\n\n      this.tags = inference(this.tags);\n      return this;\n    }\n    /** call methods after tagger runs */\n\n  }, {\n    key: \"postProcess\",\n    value: function postProcess(fn) {\n      this.taggers.push(fn);\n      return this;\n    }\n    /** helper method for logging + debugging */\n\n  }, {\n    key: \"stats\",\n    value: function stats() {\n      return {\n        words: Object.keys(this.words).length,\n        plurals: Object.keys(this.irregulars.nouns).length,\n        conjugations: Object.keys(this.irregulars.verbs).length,\n        compounds: Object.keys(this.hasCompound).length,\n        postProcessors: this.taggers.length\n      };\n    }\n  }]);\n\n  return World;\n}(); //  ¯\\_(:/)_/¯\n\n\nvar clone$1 = function clone(obj) {\n  return JSON.parse(JSON.stringify(obj));\n};\n/** produce a deep-copy of all lingustic data */\n\n\nWorld.prototype.clone = function () {\n  var w2 = new World(); // these are simple to copy:\n\n  w2.words = Object.assign({}, this.words);\n  w2.hasCompound = Object.assign({}, this.hasCompound); //these ones are nested:\n\n  w2.irregulars = clone$1(this.irregulars);\n  w2.tags = clone$1(this.tags); // these are functions\n\n  w2.transforms = this.transforms;\n  w2.taggers = this.taggers;\n  return w2;\n};\n\nvar World_1 = World;\n\nvar _01Utils$1 = createCommonjsModule(function (module, exports) {\n  /** return the root, first document */\n  exports.all = function () {\n    return this.parents()[0] || this;\n  };\n  /** return the previous result */\n\n\n  exports.parent = function () {\n    if (this.from) {\n      return this.from;\n    }\n\n    return this;\n  };\n  /**  return a list of all previous results */\n\n\n  exports.parents = function (n) {\n    var arr = [];\n\n    var addParent = function addParent(doc) {\n      if (doc.from) {\n        arr.push(doc.from);\n        addParent(doc.from);\n      }\n    };\n\n    addParent(this);\n    arr = arr.reverse();\n\n    if (typeof n === 'number') {\n      return arr[n];\n    }\n\n    return arr;\n  };\n  /** deep-copy the document, so that no references remain */\n\n\n  exports.clone = function (doShallow) {\n    var list = this.list.map(function (ts) {\n      return ts.clone(doShallow);\n    });\n    var tmp = this.buildFrom(list);\n    return tmp;\n  };\n  /** how many seperate terms does the document have? */\n\n\n  exports.wordCount = function () {\n    return this.list.reduce(function (count, p) {\n      count += p.wordCount();\n      return count;\n    }, 0);\n  };\n\n  exports.wordcount = exports.wordCount;\n  /** turn on logging for decision-debugging */\n  // exports.verbose = function(bool) {\n  //   if (bool === undefined) {\n  //     bool = true\n  //   }\n  //   this.world.verbose = bool\n  // }\n});\n\nvar _02Accessors = createCommonjsModule(function (module, exports) {\n  /** use only the first result(s) */\n  exports.first = function (n) {\n    if (n === undefined) {\n      return this.get(0);\n    }\n\n    return this.slice(0, n);\n  };\n  /** use only the last result(s) */\n\n\n  exports.last = function (n) {\n    if (n === undefined) {\n      return this.get(this.list.length - 1);\n    }\n\n    var end = this.list.length;\n    return this.slice(end - n, end);\n  };\n  /** grab a given subset of the results*/\n\n\n  exports.slice = function (start, end) {\n    var list = this.list.slice(start, end);\n    return this.buildFrom(list);\n  };\n  /* grab nth result */\n\n\n  exports.eq = function (n) {\n    var p = this.list[n];\n\n    if (p === undefined) {\n      return this.buildFrom([]);\n    }\n\n    return this.buildFrom([p]);\n  };\n\n  exports.get = exports.eq;\n  /** grab term[0] for every match */\n\n  exports.firstTerms = function () {\n    return this.match('^.');\n  };\n\n  exports.firstTerm = exports.firstTerms;\n  /** grab the last term for every match  */\n\n  exports.lastTerms = function () {\n    return this.match('.$');\n  };\n\n  exports.lastTerm = exports.lastTerms;\n  /** return a flat array of term objects */\n\n  exports.termList = function (num) {\n    var arr = []; //'reduce' but faster\n\n    for (var i = 0; i < this.list.length; i++) {\n      var terms = this.list[i].terms();\n\n      for (var o = 0; o < terms.length; o++) {\n        arr.push(terms[o]); //support .termList(4)\n\n        if (num !== undefined && arr[num] !== undefined) {\n          return arr[num];\n        }\n      }\n    }\n\n    return arr;\n  };\n  /* grab named capture group terms as object */\n\n\n  var getGroups = function getGroups(doc) {\n    var res = {};\n    var allGroups = {};\n\n    var _loop = function _loop(i) {\n      var phrase = doc.list[i];\n      var groups = Object.keys(phrase.groups).map(function (k) {\n        return phrase.groups[k];\n      });\n\n      for (var j = 0; j < groups.length; j++) {\n        var _groups$j = groups[j],\n            group = _groups$j.group,\n            start = _groups$j.start,\n            length = _groups$j.length;\n\n        if (!allGroups[group]) {\n          allGroups[group] = [];\n        }\n\n        allGroups[group].push(phrase.buildFrom(start, length));\n      }\n    };\n\n    for (var i = 0; i < doc.list.length; i++) {\n      _loop(i);\n    }\n\n    var keys = Object.keys(allGroups);\n\n    for (var _i = 0; _i < keys.length; _i++) {\n      var key = keys[_i];\n      res[key] = doc.buildFrom(allGroups[key]);\n    }\n\n    return res;\n  };\n\n  var getOneName = function getOneName(doc, name) {\n    var arr = [];\n\n    var _loop2 = function _loop2(i) {\n      var phrase = doc.list[i];\n      var keys = Object.keys(phrase.groups);\n      keys = keys.filter(function (id) {\n        return phrase.groups[id].group === name;\n      });\n      keys.forEach(function (id) {\n        arr.push(phrase.buildFrom(phrase.groups[id].start, phrase.groups[id].length));\n      });\n    };\n\n    for (var i = 0; i < doc.list.length; i++) {\n      _loop2(i);\n    }\n\n    return doc.buildFrom(arr);\n  };\n  /** grab named capture group results */\n\n\n  exports.groups = function (target) {\n    if (target === undefined) {\n      return getGroups(this);\n    }\n\n    if (typeof target === 'number') {\n      target = String(target);\n    }\n\n    return getOneName(this, target) || this.buildFrom([]);\n  };\n\n  exports.group = exports.groups;\n  /** get the full-sentence each phrase belongs to */\n\n  exports.sentences = function (n) {\n    var arr = [];\n    this.list.forEach(function (p) {\n      arr.push(p.fullSentence());\n    });\n\n    if (typeof n === 'number') {\n      return this.buildFrom([arr[n]]);\n    }\n\n    return this.buildFrom(arr);\n  };\n\n  exports.sentence = exports.sentences;\n});\n\n// cache the easier conditions up-front\nvar cacheRequired = function cacheRequired(reg) {\n  var needTags = [];\n  var needWords = [];\n  reg.forEach(function (obj) {\n    if (obj.optional === true || obj.negative === true) {\n      return;\n    }\n\n    if (obj.tag !== undefined) {\n      needTags.push(obj.tag);\n    }\n\n    if (obj.word !== undefined) {\n      needWords.push(obj.word);\n    }\n  });\n  return {\n    tags: needTags,\n    words: needWords\n  };\n};\n\nvar failFast$1 = function failFast(doc, regs) {\n  if (doc._cache && doc._cache.set === true) {\n    var _cacheRequired = cacheRequired(regs),\n        words = _cacheRequired.words,\n        tags = _cacheRequired.tags; //check required words\n\n\n    for (var i = 0; i < words.length; i++) {\n      if (doc._cache.words[words[i]] === undefined) {\n        return false;\n      }\n    } //check required tags\n\n\n    for (var _i = 0; _i < tags.length; _i++) {\n      if (doc._cache.tags[tags[_i]] === undefined) {\n        return false;\n      }\n    }\n  }\n\n  return true;\n};\n\nvar checkCache = failFast$1;\n\nvar _03Match = createCommonjsModule(function (module, exports) {\n  /** return a new Doc, with this one as a parent */\n  exports.match = function (reg, name) {\n    //parse-up the input expression\n    var regs = syntax_1(reg);\n\n    if (regs.length === 0) {\n      return this.buildFrom([]);\n    } //check our cache, if it exists\n\n\n    if (checkCache(this, regs) === false) {\n      return this.buildFrom([]);\n    } //try expression on each phrase\n\n\n    var matches = this.list.reduce(function (arr, p) {\n      return arr.concat(p.match(regs));\n    }, []);\n\n    if (name !== undefined && name !== null && name !== '') {\n      return this.buildFrom(matches).groups(name);\n    }\n\n    return this.buildFrom(matches);\n  };\n  /** return all results except for this */\n\n\n  exports.not = function (reg) {\n    //parse-up the input expression\n    var regs = syntax_1(reg); //if it's empty, return them all!\n\n    if (regs.length === 0 || checkCache(this, regs) === false) {\n      return this;\n    } //try expression on each phrase\n\n\n    var matches = this.list.reduce(function (arr, p) {\n      return arr.concat(p.not(regs));\n    }, []);\n    return this.buildFrom(matches);\n  };\n  /** return only the first match */\n\n\n  exports.matchOne = function (reg) {\n    var regs = syntax_1(reg); //check our cache, if it exists\n\n    if (checkCache(this, regs) === false) {\n      return this.buildFrom([]);\n    }\n\n    for (var i = 0; i < this.list.length; i++) {\n      var match = this.list[i].match(regs, true);\n      return this.buildFrom(match);\n    }\n\n    return this.buildFrom([]);\n  };\n  /** return each current phrase, only if it contains this match */\n\n\n  exports[\"if\"] = function (reg) {\n    var regs = syntax_1(reg); //consult our cache, if it exists\n\n    if (checkCache(this, regs) === false) {\n      return this.buildFrom([]);\n    }\n\n    var found = this.list.filter(function (p) {\n      return p.has(regs) === true;\n    });\n    return this.buildFrom(found);\n  };\n  /** Filter-out any current phrases that have this match*/\n\n\n  exports.ifNo = function (reg) {\n    var regs = syntax_1(reg);\n    var found = this.list.filter(function (p) {\n      return p.has(regs) === false;\n    });\n    return this.buildFrom(found);\n  };\n  /**Return a boolean if this match exists */\n\n\n  exports.has = function (reg) {\n    var regs = syntax_1(reg); //consult our cache, if it exists\n\n    if (checkCache(this, regs) === false) {\n      return false;\n    }\n\n    return this.list.some(function (p) {\n      return p.has(regs) === true;\n    });\n  };\n  /** match any terms after our matches, within the sentence */\n\n\n  exports.lookAhead = function (reg) {\n    // find everything afterwards, by default\n    if (!reg) {\n      reg = '.*';\n    }\n\n    var regs = syntax_1(reg);\n    var matches = [];\n    this.list.forEach(function (p) {\n      matches = matches.concat(p.lookAhead(regs));\n    });\n    matches = matches.filter(function (p) {\n      return p;\n    });\n    return this.buildFrom(matches);\n  };\n\n  exports.lookAfter = exports.lookAhead;\n  /** match any terms before our matches, within the sentence */\n\n  exports.lookBehind = function (reg) {\n    // find everything afterwards, by default\n    if (!reg) {\n      reg = '.*';\n    }\n\n    var regs = syntax_1(reg);\n    var matches = [];\n    this.list.forEach(function (p) {\n      matches = matches.concat(p.lookBehind(regs));\n    });\n    matches = matches.filter(function (p) {\n      return p;\n    });\n    return this.buildFrom(matches);\n  };\n\n  exports.lookBefore = exports.lookBehind;\n  /** return all terms before a match, in each phrase */\n\n  exports.before = function (reg) {\n    var regs = syntax_1(reg); //only the phrases we care about\n\n    var phrases = this[\"if\"](regs).list;\n    var befores = phrases.map(function (p) {\n      var ids = p.terms().map(function (t) {\n        return t.id;\n      }); //run the search again\n\n      var m = p.match(regs)[0];\n      var index = ids.indexOf(m.start); //nothing is before a first-term match\n\n      if (index === 0 || index === -1) {\n        return null;\n      }\n\n      return p.buildFrom(p.start, index);\n    });\n    befores = befores.filter(function (p) {\n      return p !== null;\n    });\n    return this.buildFrom(befores);\n  };\n  /** return all terms after a match, in each phrase */\n\n\n  exports.after = function (reg) {\n    var regs = syntax_1(reg); //only the phrases we care about\n\n    var phrases = this[\"if\"](regs).list;\n    var befores = phrases.map(function (p) {\n      var terms = p.terms();\n      var ids = terms.map(function (t) {\n        return t.id;\n      }); //run the search again\n\n      var m = p.match(regs)[0];\n      var index = ids.indexOf(m.start); //skip if nothing is after it\n\n      if (index === -1 || !terms[index + m.length]) {\n        return null;\n      } //create the new phrase, after our match.\n\n\n      var id = terms[index + m.length].id;\n      var len = p.length - index - m.length;\n      return p.buildFrom(id, len);\n    });\n    befores = befores.filter(function (p) {\n      return p !== null;\n    });\n    return this.buildFrom(befores);\n  };\n  /** return only results with this match afterwards */\n\n\n  exports.hasAfter = function (reg) {\n    return this.filter(function (doc) {\n      return doc.lookAfter(reg).found;\n    });\n  };\n  /** return only results with this match before it */\n\n\n  exports.hasBefore = function (reg) {\n    return this.filter(function (doc) {\n      return doc.lookBefore(reg).found;\n    });\n  };\n});\n\n/** apply a tag, or tags to all terms */\nvar tagTerms = function tagTerms(tag, doc, safe, reason) {\n  var tagList = [];\n\n  if (typeof tag === 'string') {\n    tagList = tag.split(' ');\n  } //do indepenent tags for each term:\n\n\n  doc.list.forEach(function (p) {\n    var terms = p.terms(); // tagSafe - apply only to fitting terms\n\n    if (safe === true) {\n      terms = terms.filter(function (t) {\n        return t.canBe(tag, doc.world);\n      });\n    }\n\n    terms.forEach(function (t, i) {\n      //fancy version:\n      if (tagList.length > 1) {\n        if (tagList[i] && tagList[i] !== '.') {\n          t.tag(tagList[i], reason, doc.world);\n        }\n      } else {\n        //non-fancy version (same tag for all terms)\n        t.tag(tag, reason, doc.world);\n      }\n    });\n  });\n  return;\n};\n\nvar _setTag = tagTerms;\n\n/** Give all terms the given tag */\n\nvar tag$1 = function tag(tags, why) {\n  if (!tags) {\n    return this;\n  }\n\n  _setTag(tags, this, false, why);\n  return this;\n};\n/** Only apply tag to terms if it is consistent with current tags */\n\n\nvar tagSafe$1 = function tagSafe(tags, why) {\n  if (!tags) {\n    return this;\n  }\n\n  _setTag(tags, this, true, why);\n  return this;\n};\n/** Remove this term from the given terms */\n\n\nvar unTag$1 = function unTag(tags, why) {\n  var _this = this;\n\n  this.list.forEach(function (p) {\n    p.terms().forEach(function (t) {\n      return t.unTag(tags, why, _this.world);\n    });\n  });\n  return this;\n};\n/** return only the terms that can be this tag*/\n\n\nvar canBe$2 = function canBe(tag) {\n  if (!tag) {\n    return this;\n  }\n\n  var world = this.world;\n  var matches = this.list.reduce(function (arr, p) {\n    return arr.concat(p.canBe(tag, world));\n  }, []);\n  return this.buildFrom(matches);\n};\n\nvar _04Tag = {\n  tag: tag$1,\n  tagSafe: tagSafe$1,\n  unTag: unTag$1,\n  canBe: canBe$2\n};\n\n/* run each phrase through a function, and create a new document */\nvar map = function map(fn) {\n  var _this = this;\n\n  if (!fn) {\n    return this;\n  }\n\n  var list = this.list.map(function (p, i) {\n    var doc = _this.buildFrom([p]);\n\n    doc.from = null; //it's not a child/parent\n\n    var res = fn(doc, i); // if its a doc, return one result\n\n    if (res && res.list && res.list[0]) {\n      return res.list[0];\n    }\n\n    return res;\n  }); //remove nulls\n\n  list = list.filter(function (x) {\n    return x;\n  }); // return an empty response\n\n  if (list.length === 0) {\n    return this.buildFrom(list);\n  } // if it is not a list of Phrase objects, then don't try to make a Doc object\n\n\n  if (_typeof(list[0]) !== 'object' || list[0].isA !== 'Phrase') {\n    return list;\n  }\n\n  return this.buildFrom(list);\n};\n/** run a function on each phrase */\n\n\nvar forEach = function forEach(fn, detachParent) {\n  var _this2 = this;\n\n  if (!fn) {\n    return this;\n  }\n\n  this.list.forEach(function (p, i) {\n    var sub = _this2.buildFrom([p]); // if we're doing fancy insertions, we may want to skip updating the parent each time.\n\n\n    if (detachParent === true) {\n      sub.from = null; //\n    }\n\n    fn(sub, i);\n  });\n  return this;\n};\n/** return only the phrases that return true */\n\n\nvar filter = function filter(fn) {\n  var _this3 = this;\n\n  if (!fn) {\n    return this;\n  }\n\n  var list = this.list.filter(function (p, i) {\n    var doc = _this3.buildFrom([p]);\n\n    doc.from = null; //it's not a child/parent\n\n    return fn(doc, i);\n  });\n  return this.buildFrom(list);\n};\n/** return a document with only the first phrase that matches */\n\n\nvar find = function find(fn) {\n  var _this4 = this;\n\n  if (!fn) {\n    return this;\n  }\n\n  var phrase = this.list.find(function (p, i) {\n    var doc = _this4.buildFrom([p]);\n\n    doc.from = null; //it's not a child/parent\n\n    return fn(doc, i);\n  });\n\n  if (phrase) {\n    return this.buildFrom([phrase]);\n  }\n\n  return undefined;\n};\n/** return true or false if there is one matching phrase */\n\n\nvar some = function some(fn) {\n  var _this5 = this;\n\n  if (!fn) {\n    return this;\n  }\n\n  return this.list.some(function (p, i) {\n    var doc = _this5.buildFrom([p]);\n\n    doc.from = null; //it's not a child/parent\n\n    return fn(doc, i);\n  });\n};\n/** sample a subset of the results */\n\n\nvar random = function random(n) {\n  if (!this.found) {\n    return this;\n  }\n\n  var r = Math.floor(Math.random() * this.list.length);\n\n  if (n === undefined) {\n    var list = [this.list[r]];\n    return this.buildFrom(list);\n  } //prevent it from going over the end\n\n\n  if (r + n > this.length) {\n    r = this.length - n;\n    r = r < 0 ? 0 : r;\n  }\n\n  return this.slice(r, r + n);\n};\n/** combine each phrase into a new data-structure */\n// exports.reduce = function(fn, h) {\n//   let list = this.list.reduce((_h, ts) => {\n//     let doc = this.buildFrom([ts])\n//     doc.from = null //it's not a child/parent\n//     return fn(_h, doc)\n//   }, h)\n//   return this.buildFrom(list)\n// }\n\n\nvar _05Loops = {\n  map: map,\n  forEach: forEach,\n  filter: filter,\n  find: find,\n  some: some,\n  random: random\n};\n\n// const tokenize = require('../../01-tokenizer/02-words')\nvar tokenize = function tokenize(str) {\n  return str.split(/[ -]/g);\n}; // take a list of strings\n// look them up in the document\n\n\nvar buildTree = function buildTree(termList) {\n  var values = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var root = {}; // parse our input\n\n  termList.forEach(function (str, i) {\n    var val = true;\n\n    if (values[i] !== undefined) {\n      val = values[i];\n    } // some rough normalization\n\n\n    str = (str || '').toLowerCase();\n    str = str.replace(/[,;.!?]+$/, '');\n    var arr = tokenize(str).map(function (s) {\n      return s.trim();\n    });\n    root[arr[0]] = root[arr[0]] || {};\n\n    if (arr.length === 1) {\n      root[arr[0]].value = val;\n    } else {\n      root[arr[0]].more = root[arr[0]].more || [];\n      root[arr[0]].more.push({\n        rest: arr.slice(1),\n        value: val\n      });\n    }\n  }); // sort by longest-first?\n  // console.log(JSON.stringify(root, null, 2))\n\n  return root;\n};\n\nvar fastLookup = function fastLookup(termList, values, doc) {\n  var root = buildTree(termList, values);\n  var found = []; // each phrase\n\n  var _loop = function _loop(i) {\n    var p = doc.list[i];\n    var terms = p.terms();\n    var words = terms.map(function (t) {\n      return t.reduced;\n    }); // each word\n\n    var _loop2 = function _loop2(w) {\n      if (root[words[w]] !== undefined) {\n        // is it a multi-word match?\n        if (root[words[w]].more !== undefined) {\n          root[words[w]].more.forEach(function (more) {\n            // is it too-long?\n            if (words[w + more.rest.length] === undefined) {\n              return;\n            } // compare each subsequent term\n\n\n            var everyTerm = more.rest.every(function (word, r) {\n              return word === words[w + r + 1];\n            });\n\n            if (everyTerm === true) {\n              found.push({\n                id: p.terms()[w].id,\n                value: more.value,\n                length: more.rest.length + 1\n              });\n            }\n          });\n        } // is it a single-word match?\n\n\n        if (root[words[w]].value !== undefined) {\n          found.push({\n            id: p.terms()[w].id,\n            value: root[words[w]].value,\n            length: 1\n          });\n        }\n      }\n    };\n\n    for (var w = 0; w < words.length; w++) {\n      _loop2(w);\n    }\n  };\n\n  for (var i = 0; i < doc.list.length; i++) {\n    _loop(i);\n  }\n\n  return found;\n};\n\nvar _lookup = fastLookup;\n\nvar _06Lookup = createCommonjsModule(function (module, exports) {\n  // compare one term and one match\n  // const doesMatch = function(term, str) {\n  //   if (str === '') {\n  //     return false\n  //   }\n  //   return term.reduced === str || term.implicit === str || term.root === str || term.text.toLowerCase() === str\n  // }\n  var isObject = function isObject(obj) {\n    return obj && Object.prototype.toString.call(obj) === '[object Object]';\n  };\n  /** lookup an array of words or phrases */\n\n\n  exports.lookup = function (arr) {\n    var _this = this;\n\n    var values = []; //is it a {key:val} object?\n\n    var isObj = isObject(arr);\n\n    if (isObj === true) {\n      arr = Object.keys(arr).map(function (k) {\n        values.push(arr[k]);\n        return k;\n      });\n    } // support .lookup('foo')\n\n\n    if (typeof arr === 'string') {\n      arr = [arr];\n    } //make sure we go fast.\n\n\n    if (this._cache.set !== true) {\n      this.cache();\n    }\n\n    var found = _lookup(arr, values, this);\n    var p = this.list[0]; // make object response\n\n    if (isObj === true) {\n      var byVal = {};\n      found.forEach(function (o) {\n        byVal[o.value] = byVal[o.value] || [];\n        byVal[o.value].push(p.buildFrom(o.id, o.length));\n      });\n      Object.keys(byVal).forEach(function (k) {\n        byVal[k] = _this.buildFrom(byVal[k]);\n      });\n      return byVal;\n    } // otherwise, make array response:\n\n\n    found = found.map(function (o) {\n      return p.buildFrom(o.id, o.length);\n    });\n    return this.buildFrom(found);\n  };\n\n  exports.lookUp = exports.lookup;\n});\n\n/** freeze the current state of the document, for speed-purposes*/\nvar cache$1 = function cache(options) {\n  var _this = this;\n\n  options = options || {};\n  var words = {};\n  var tags = {};\n  this._cache.words = words;\n  this._cache.tags = tags;\n  this._cache.set = true;\n  this.list.forEach(function (p, i) {\n    p.cache = p.cache || {}; //p.terms get cached automatically\n\n    var terms = p.terms(); // cache all the terms\n\n    terms.forEach(function (t) {\n      if (words[t.reduced] && !words.hasOwnProperty(t.reduced)) {\n        return; //skip prototype words\n      }\n\n      words[t.reduced] = words[t.reduced] || [];\n      words[t.reduced].push(i);\n      Object.keys(t.tags).forEach(function (tag) {\n        tags[tag] = tags[tag] || [];\n        tags[tag].push(i);\n      }); // cache root-form on Term, too\n\n      if (options.root) {\n        t.setRoot(_this.world);\n        words[t.root] = true;\n      }\n    });\n  });\n  return this;\n};\n/** un-freezes the current state of the document, so it may be transformed */\n\n\nvar uncache = function uncache() {\n  this._cache = {};\n  this.list.forEach(function (p) {\n    p.cache = {};\n  }); // do parents too?\n\n  this.parents().forEach(function (doc) {\n    doc._cache = {};\n    doc.list.forEach(function (p) {\n      p.cache = {};\n    });\n  });\n  return this;\n};\n\nvar _07Cache = {\n  cache: cache$1,\n  uncache: uncache\n};\n\nvar titleCase$3 = function titleCase(str) {\n  return str.charAt(0).toUpperCase() + str.substr(1);\n};\n/** substitute-in new content */\n\n\nvar replaceWith = function replaceWith(replace) {\n  var _this = this;\n\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (!replace) {\n    return this[\"delete\"]();\n  } //support old-style params\n\n\n  if (options === true) {\n    options = {\n      keepTags: true\n    };\n  }\n\n  if (options === false) {\n    options = {\n      keepTags: false\n    };\n  }\n\n  options = options || {}; // clear the cache\n\n  this.uncache(); // return this\n\n  this.list.forEach(function (p) {\n    var input = replace; // accept a function for replace\n\n    if (typeof replace === 'function') {\n      input = replace(p);\n    }\n\n    var newPhrases; // accept a Doc object to replace\n\n    if (input && _typeof(input) === 'object' && input.isA === 'Doc') {\n      newPhrases = input.list;\n\n      _this.pool().merge(input.pool());\n    } else if (typeof input === 'string') {\n      //input is a string\n      if (options.keepCase !== false && p.terms(0).isTitleCase()) {\n        input = titleCase$3(input);\n      }\n\n      newPhrases = _01Tokenizer(input, _this.world, _this.pool()); //tag the new phrases\n\n      var tmpDoc = _this.buildFrom(newPhrases);\n\n      tmpDoc.tagger();\n      newPhrases = tmpDoc.list;\n    } else {\n      return; //don't even bother\n    } // try to keep its old tags, if appropriate\n\n\n    if (options.keepTags === true) {\n      var oldTags = p.json({\n        terms: {\n          tags: true\n        }\n      }).terms;\n      newPhrases[0].terms().forEach(function (t, i) {\n        if (oldTags[i]) {\n          t.tagSafe(oldTags[i].tags, 'keptTag', _this.world);\n        }\n      });\n    }\n\n    p.replace(newPhrases[0], _this); //Oneday: support multi-sentence replacements\n  });\n  return this;\n};\n/** search and replace match with new content */\n\n\nvar replace$1 = function replace(match, _replace, options) {\n  // if there's no 2nd param, use replaceWith\n  if (_replace === undefined) {\n    return this.replaceWith(match, options);\n  }\n\n  this.match(match).replaceWith(_replace, options);\n  return this;\n};\n\nvar _01Replace = {\n  replaceWith: replaceWith,\n  replace: replace$1\n};\n\nvar _02Insert = createCommonjsModule(function (module, exports) {\n  /** add these new terms to the end*/\n  exports.append = function (str) {\n    var _this = this;\n\n    if (!str) {\n      return this;\n    } // clear the cache\n\n\n    this.uncache(); //add it to end of every phrase\n\n    this.list.forEach(function (p) {\n      //build it\n      var phrase = _01Tokenizer(str, _this.world, _this.pool())[0]; //assume it's one sentence, for now\n      //tag it\n\n      var tmpDoc = _this.buildFrom([phrase]);\n\n      tmpDoc.tagger(); // push it onto the end\n\n      p.append(phrase, _this);\n    });\n    return this;\n  };\n\n  exports.insertAfter = exports.append;\n  exports.insertAt = exports.append;\n  /** add these new terms to the front*/\n\n  exports.prepend = function (str) {\n    var _this2 = this;\n\n    if (!str) {\n      return this;\n    } // clear the cache\n\n\n    this.uncache(); //add it to start of every phrase\n\n    this.list.forEach(function (p) {\n      //build it\n      var phrase = _01Tokenizer(str, _this2.world, _this2.pool())[0]; //assume it's one sentence, for now\n      //tag it\n\n      var tmpDoc = _this2.buildFrom([phrase]);\n\n      tmpDoc.tagger(); // add it to the start\n\n      p.prepend(phrase, _this2);\n    });\n    return this;\n  };\n\n  exports.insertBefore = exports.prepend;\n  /** add these new things to the end*/\n\n  exports.concat = function () {\n    // clear the cache\n    this.uncache();\n    var list = this.list.slice(0); //repeat for any number of params\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i]; //support a fresh string\n\n      if (typeof arg === 'string') {\n        var arr = _01Tokenizer(arg, this.world); //TODO: phrase.tagger()?\n\n        list = list.concat(arr);\n      } else if (arg.isA === 'Doc') {\n        list = list.concat(arg.list);\n      } else if (arg.isA === 'Phrase') {\n        list.push(arg);\n      }\n    }\n\n    return this.buildFrom(list);\n  };\n  /** fully remove these terms from the document */\n\n\n  exports[\"delete\"] = function (match) {\n    var _this3 = this;\n\n    // clear the cache\n    this.uncache();\n    var toRemove = this;\n\n    if (match) {\n      toRemove = this.match(match);\n    }\n\n    toRemove.list.forEach(function (phrase) {\n      return phrase[\"delete\"](_this3);\n    });\n    return this;\n  }; // aliases\n\n\n  exports.remove = exports[\"delete\"];\n});\n\nvar shouldTrim = {\n  clean: true,\n  reduced: true,\n  root: true\n};\n/** return the document as text */\n\nvar text$1 = function text(options) {\n  var _this = this;\n\n  options = options || {}; //are we showing every phrase?\n\n  var showFull = false;\n\n  if (this.parents().length === 0) {\n    showFull = true;\n  } // cache roots, if necessary\n\n\n  if (options === 'root' || _typeof(options) === 'object' && options.root) {\n    this.list.forEach(function (p) {\n      p.terms().forEach(function (t) {\n        if (t.root === null) {\n          t.setRoot(_this.world);\n        }\n      });\n    });\n  }\n\n  var txt = this.list.reduce(function (str, p, i) {\n    var trimPre = !showFull && i === 0;\n    var trimPost = !showFull && i === _this.list.length - 1;\n    return str + p.text(options, trimPre, trimPost);\n  }, ''); // clumsy final trim of leading/trailing whitespace\n\n  if (shouldTrim[options] === true || options.reduced === true || options.clean === true || options.root === true) {\n    txt = txt.trim();\n  }\n\n  return txt;\n};\n\nvar _01Text = {\n  text: text$1\n};\n\n// get all character startings in doc\nvar termOffsets = function termOffsets(doc) {\n  var elapsed = 0;\n  var index = 0;\n  var offsets = {};\n  doc.termList().forEach(function (term) {\n    offsets[term.id] = {\n      index: index,\n      start: elapsed + term.pre.length,\n      length: term.text.length\n    };\n    elapsed += term.pre.length + term.text.length + term.post.length;\n    index += 1;\n  });\n  return offsets;\n};\n\nvar calcOffset = function calcOffset(doc, result, options) {\n  // calculate offsets for each term\n  var offsets = termOffsets(doc.all()); // add index values\n\n  if (options.terms.index || options.index) {\n    result.forEach(function (o) {\n      o.terms.forEach(function (t) {\n        t.index = offsets[t.id].index;\n      });\n      o.index = o.terms[0].index;\n    });\n  } // add offset values\n\n\n  if (options.terms.offset || options.offset) {\n    result.forEach(function (o) {\n      o.terms.forEach(function (t) {\n        t.offset = offsets[t.id] || {};\n      }); // let len = o.terms.reduce((n, t, i) => {\n      //   n += t.offset.length || 0\n      //   //add whitespace, too\n      //   console.log(t.post)\n      //   return n\n      // }, 0)\n\n      o.offset = o.terms[0].offset;\n      o.offset.length = o.text.length;\n    });\n  }\n};\n\nvar _offset = calcOffset;\n\nvar _02Json = createCommonjsModule(function (module, exports) {\n  var jsonDefaults = {\n    text: true,\n    terms: true,\n    trim: true\n  }; //some options have dependents\n\n  var setOptions = function setOptions(options) {\n    options = Object.assign({}, jsonDefaults, options);\n\n    if (options.unique) {\n      options.reduced = true;\n    } //offset calculation requires these options to be on\n\n\n    if (options.offset) {\n      options.text = true;\n\n      if (!options.terms || options.terms === true) {\n        options.terms = {};\n      }\n\n      options.terms.offset = true;\n    }\n\n    if (options.index || options.terms.index) {\n      options.terms = options.terms === true ? {} : options.terms;\n      options.terms.id = true;\n    }\n\n    return options;\n  };\n  /** pull out desired metadata from the document */\n\n\n  exports.json = function () {\n    var _this = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    //support json(3) format\n    if (typeof options === 'number' && this.list[options]) {\n      return this.list[options].json(jsonDefaults);\n    }\n\n    options = setOptions(options); // cache root strings beforehand, if necessary\n\n    if (options.root === true) {\n      this.list.forEach(function (p) {\n        p.terms().forEach(function (t) {\n          if (t.root === null) {\n            t.setRoot(_this.world);\n          }\n        });\n      });\n    }\n\n    var result = this.list.map(function (p) {\n      return p.json(options, _this.world);\n    }); // add offset and index data for each term\n\n    if (options.terms.offset || options.offset || options.terms.index || options.index) {\n      _offset(this, result, options);\n    } // add frequency #s\n\n\n    if (options.frequency || options.freq || options.count) {\n      var obj = {};\n      this.list.forEach(function (p) {\n        var str = p.text('reduced');\n        obj[str] = obj[str] || 0;\n        obj[str] += 1;\n      });\n      this.list.forEach(function (p, i) {\n        result[i].count = obj[p.text('reduced')];\n      });\n    } // remove duplicates\n\n\n    if (options.unique) {\n      var already = {};\n      result = result.filter(function (o) {\n        if (already[o.reduced] === true) {\n          return false;\n        }\n\n        already[o.reduced] = true;\n        return true;\n      });\n    }\n\n    return result;\n  }; //aliases\n\n\n  exports.data = exports.json;\n});\n\nvar _debug = createCommonjsModule(function (module) {\n  // https://stackoverflow.com/questions/9781218/how-to-change-node-jss-console-font-color\n  var reset = '\\x1b[0m';\n\n  var padEnd = function padEnd(str, width) {\n    str = str.toString();\n\n    while (str.length < width) {\n      str += ' ';\n    }\n\n    return str;\n  };\n\n  function isClientSide() {\n    return typeof window !== 'undefined' && window.document;\n  } // some nice colors for client-side debug\n\n\n  var css = {\n    green: '#7f9c6c',\n    red: '#914045',\n    blue: '#6699cc',\n    magenta: '#6D5685',\n    cyan: '#2D85A8',\n    yellow: '#e6d7b3',\n    black: '#303b50'\n  };\n\n  var logClientSide = function logClientSide(doc) {\n    var tagset = doc.world.tags;\n    doc.list.forEach(function (p) {\n      console.log('\\n%c\"' + p.text() + '\"', 'color: #e6d7b3;');\n      var terms = p.terms();\n      terms.forEach(function (t) {\n        var tags = Object.keys(t.tags);\n        var text = t.text || '-';\n\n        if (t.implicit) {\n          text = '[' + t.implicit + ']';\n        }\n\n        var word = \"'\" + text + \"'\";\n        word = padEnd(word, 8);\n        var found = tags.find(function (tag) {\n          return tagset[tag] && tagset[tag].color;\n        });\n        var color = 'steelblue';\n\n        if (tagset[found]) {\n          color = tagset[found].color;\n          color = css[color];\n        }\n\n        console.log(\"   \".concat(word, \"  -  %c\").concat(tags.join(', ')), \"color: \".concat(color || 'steelblue', \";\"));\n      });\n    });\n  }; //cheaper than requiring chalk\n\n\n  var cli = {\n    green: function green(str) {\n      return '\\x1b[32m' + str + reset;\n    },\n    red: function red(str) {\n      return '\\x1b[31m' + str + reset;\n    },\n    blue: function blue(str) {\n      return '\\x1b[34m' + str + reset;\n    },\n    magenta: function magenta(str) {\n      return '\\x1b[35m' + str + reset;\n    },\n    cyan: function cyan(str) {\n      return '\\x1b[36m' + str + reset;\n    },\n    yellow: function yellow(str) {\n      return '\\x1b[33m' + str + reset;\n    },\n    black: function black(str) {\n      return '\\x1b[30m' + str + reset;\n    }\n  };\n\n  var tagString = function tagString(tags, world) {\n    tags = tags.map(function (tag) {\n      if (!world.tags.hasOwnProperty(tag)) {\n        return tag;\n      }\n\n      var c = world.tags[tag].color || 'blue';\n      return cli[c](tag);\n    });\n    return tags.join(', ');\n  }; //output some helpful stuff to the console\n\n\n  var debug = function debug(doc) {\n    if (isClientSide()) {\n      logClientSide(doc);\n      return doc;\n    }\n\n    console.log(cli.blue('====='));\n    doc.list.forEach(function (p) {\n      console.log(cli.blue('  -----'));\n      var terms = p.terms();\n      terms.forEach(function (t) {\n        var tags = Object.keys(t.tags);\n        var text = t.text || '-';\n\n        if (t.implicit) {\n          text = '[' + t.implicit + ']';\n        }\n\n        {\n          text = cli.yellow(text);\n        }\n\n        var word = \"'\" + text + \"'\";\n        word = padEnd(word, 18);\n        var str = cli.blue('  ｜ ') + word + '  - ' + tagString(tags, doc.world);\n        console.log(str);\n      });\n    });\n    console.log('');\n    return doc;\n  };\n\n  module.exports = debug;\n});\n\nvar topk = function topk(doc) {\n  var list = doc.json({\n    text: false,\n    terms: false,\n    reduced: true\n  }); // combine them\n\n  var obj = {};\n  list.forEach(function (o) {\n    if (!obj[o.reduced]) {\n      o.count = 0;\n      obj[o.reduced] = o;\n    }\n\n    obj[o.reduced].count += 1;\n  });\n  var arr = Object.keys(obj).map(function (k) {\n    return obj[k];\n  }); // sort them\n\n  arr.sort(function (a, b) {\n    if (a.count > b.count) {\n      return -1;\n    } else if (a.count < b.count) {\n      return 1;\n    }\n\n    return 0;\n  });\n  return arr;\n};\n\nvar _topk = topk;\n\n/** pretty-print the current document and its tags */\n\nvar debug_1 = function debug_1() {\n  _debug(this);\n  return this;\n};\n/** some named output formats */\n\n\nvar out = function out(method) {\n  if (method === 'text') {\n    return this.text();\n  }\n\n  if (method === 'normal') {\n    return this.text('normal');\n  }\n\n  if (method === 'json') {\n    return this.json();\n  }\n\n  if (method === 'offset' || method === 'offsets') {\n    return this.json({\n      offset: true\n    });\n  }\n\n  if (method === 'array') {\n    return this.json({\n      terms: false\n    }).map(function (obj) {\n      return obj.text;\n    });\n  }\n\n  if (method === 'freq' || method === 'frequency') {\n    return _topk(this);\n  }\n\n  if (method === 'terms') {\n    var list = [];\n    this.json({\n      text: false,\n      terms: {\n        text: true\n      }\n    }).forEach(function (obj) {\n      var terms = obj.terms.map(function (t) {\n        return t.text;\n      });\n      terms = terms.filter(function (t) {\n        return t;\n      });\n      list = list.concat(terms);\n    });\n    return list;\n  }\n\n  if (method === 'tags') {\n    return this.list.map(function (p) {\n      return p.terms().reduce(function (h, t) {\n        h[t.clean || t.implicit] = Object.keys(t.tags);\n        return h;\n      }, {});\n    });\n  }\n\n  if (method === 'debug') {\n    _debug(this);\n    return this;\n  }\n\n  return this.text();\n};\n\nvar _03Out = {\n  debug: debug_1,\n  out: out\n};\n\nvar methods$2 = {\n  /** alphabetical order */\n  alpha: function alpha(a, b) {\n    var left = a.text('clean');\n    var right = b.text('clean');\n\n    if (left < right) {\n      return -1;\n    }\n\n    if (left > right) {\n      return 1;\n    }\n\n    return 0;\n  },\n\n  /** count the # of characters of each match */\n  length: function length(a, b) {\n    var left = a.text().trim().length;\n    var right = b.text().trim().length;\n\n    if (left < right) {\n      return 1;\n    }\n\n    if (left > right) {\n      return -1;\n    }\n\n    return 0;\n  },\n\n  /** count the # of terms in each match */\n  wordCount: function wordCount(a, b) {\n    var left = a.wordCount();\n    var right = b.wordCount();\n\n    if (left < right) {\n      return 1;\n    }\n\n    if (left > right) {\n      return -1;\n    }\n\n    return 0;\n  }\n};\n/** sort by # of duplicates in the document*/\n\nvar byFreq = function byFreq(doc) {\n  var counts = {};\n  var options = {\n    \"case\": true,\n    punctuation: false,\n    whitespace: true,\n    unicode: true\n  };\n  doc.list.forEach(function (p) {\n    var str = p.text(options);\n    counts[str] = counts[str] || 0;\n    counts[str] += 1;\n  }); // sort by freq\n\n  doc.list.sort(function (a, b) {\n    var left = counts[a.text(options)];\n    var right = counts[b.text(options)];\n\n    if (left < right) {\n      return 1;\n    }\n\n    if (left > right) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return doc;\n}; // order results 'chronologically', or document-order\n\n\nvar sortSequential = function sortSequential(doc) {\n  var order = {};\n  doc.json({\n    terms: {\n      offset: true\n    }\n  }).forEach(function (o) {\n    order[o.terms[0].id] = o.terms[0].offset.start;\n  });\n  doc.list = doc.list.sort(function (a, b) {\n    if (order[a.start] > order[b.start]) {\n      return 1;\n    } else if (order[a.start] < order[b.start]) {\n      return -1;\n    }\n\n    return 0;\n  });\n  return doc;\n}; //aliases\n\n\nmethods$2.alphabetical = methods$2.alpha;\nmethods$2.wordcount = methods$2.wordCount; // aliases for sequential ordering\n\nvar seqNames = {\n  index: true,\n  sequence: true,\n  seq: true,\n  sequential: true,\n  chron: true,\n  chronological: true\n};\n/** re-arrange the order of the matches (in place) */\n\nvar sort = function sort(input) {\n  input = input || 'alpha'; //do this one up-front\n\n  if (input === 'freq' || input === 'frequency' || input === 'topk') {\n    return byFreq(this);\n  }\n\n  if (seqNames.hasOwnProperty(input)) {\n    return sortSequential(this);\n  }\n\n  input = methods$2[input] || input; // apply sort method on each phrase\n\n  if (typeof input === 'function') {\n    this.list = this.list.sort(input);\n    return this;\n  }\n\n  return this;\n};\n/** reverse the order of the matches, but not the words */\n\n\nvar reverse = function reverse() {\n  var list = [].concat(this.list);\n  list = list.reverse();\n  return this.buildFrom(list);\n};\n/** remove any duplicate matches */\n\n\nvar unique$4 = function unique() {\n  var list = [].concat(this.list);\n  var obj = {};\n  list = list.filter(function (p) {\n    var str = p.text('reduced').trim();\n\n    if (obj.hasOwnProperty(str) === true) {\n      return false;\n    }\n\n    obj[str] = true;\n    return true;\n  });\n  return this.buildFrom(list);\n};\n\nvar _01Sort = {\n  sort: sort,\n  reverse: reverse,\n  unique: unique$4\n};\n\nvar isPunct = /[\\[\\]{}⟨⟩:,،、‒–—―…‹›«»‐\\-;\\/⁄·*\\•^†‡°¡¿※№÷×ºª%‰=‱¶§~|‖¦©℗®℠™¤₳฿]/g;\nvar quotes = /['‘’“”\"′″‴]+/g;\nvar methods$3 = {\n  // cleanup newlines and extra spaces\n  whitespace: function whitespace(doc) {\n    var termArr = doc.list.map(function (ts) {\n      return ts.terms();\n    });\n    termArr.forEach(function (terms, o) {\n      terms.forEach(function (t, i) {\n        // keep dashes between words\n        if (t.hasDash() === true) {\n          t.post = ' - ';\n          return;\n        } // remove existing spaces\n\n\n        t.pre = t.pre.replace(/\\s/g, '');\n        t.post = t.post.replace(/\\s/g, ''); //last word? ensure there's a next sentence.\n\n        if (terms.length - 1 === i && !termArr[o + 1]) {\n          return;\n        } // no extra spaces for contractions\n\n\n        if (t.implicit && Boolean(t.text) === true) {\n          return;\n        } // no extra spaces for hyphenated words\n\n\n        if (t.hasHyphen() === true) {\n          return;\n        }\n\n        t.post += ' ';\n      });\n    });\n  },\n  punctuation: function punctuation(termList) {\n    termList.forEach(function (t) {\n      // space between hyphenated words\n      if (t.hasHyphen() === true) {\n        t.post = ' ';\n      }\n\n      t.pre = t.pre.replace(isPunct, '');\n      t.post = t.post.replace(isPunct, ''); // elipses\n\n      t.post = t.post.replace(/\\.\\.\\./, ''); // only allow one exclamation\n\n      if (/!/.test(t.post) === true) {\n        t.post = t.post.replace(/!/g, '');\n        t.post = '!' + t.post;\n      } // only allow one question mark\n\n\n      if (/\\?/.test(t.post) === true) {\n        t.post = t.post.replace(/[\\?!]*/, '');\n        t.post = '?' + t.post;\n      }\n    });\n  },\n  unicode: function unicode(termList) {\n    termList.forEach(function (t) {\n      if (t.isImplicit() === true) {\n        return;\n      }\n\n      t.text = unicode_1(t.text);\n    });\n  },\n  quotations: function quotations(termList) {\n    termList.forEach(function (t) {\n      t.post = t.post.replace(quotes, '');\n      t.pre = t.pre.replace(quotes, '');\n    });\n  },\n  adverbs: function adverbs(doc) {\n    doc.match('#Adverb').not('(not|nary|seldom|never|barely|almost|basically|so)').remove();\n  },\n  // remove the '.' from 'Mrs.' (safely)\n  abbreviations: function abbreviations(doc) {\n    doc.list.forEach(function (ts) {\n      var terms = ts.terms();\n      terms.forEach(function (t, i) {\n        if (t.tags.Abbreviation === true && terms[i + 1]) {\n          t.post = t.post.replace(/^\\./, '');\n        }\n      });\n    });\n  }\n};\nvar _methods = methods$3;\n\nvar defaults = {\n  // light\n  whitespace: true,\n  unicode: true,\n  punctuation: true,\n  emoji: true,\n  acronyms: true,\n  abbreviations: true,\n  // medium\n  \"case\": false,\n  contractions: false,\n  parentheses: false,\n  quotations: false,\n  adverbs: false,\n  // heavy (loose legibility)\n  possessives: false,\n  verbs: false,\n  nouns: false,\n  honorifics: false // pronouns: true,\n\n};\nvar mapping$1 = {\n  light: {},\n  medium: {\n    \"case\": true,\n    contractions: true,\n    parentheses: true,\n    quotations: true,\n    adverbs: true\n  }\n};\nmapping$1.heavy = Object.assign({}, mapping$1.medium, {\n  possessives: true,\n  verbs: true,\n  nouns: true,\n  honorifics: true\n});\n/** common ways to clean-up the document, and reduce noise */\n\nvar normalize = function normalize(options) {\n  options = options || {}; // support named forms\n\n  if (typeof options === 'string') {\n    options = mapping$1[options] || {};\n  } // set defaults\n\n\n  options = Object.assign({}, defaults, options); // clear the cache\n\n  this.uncache();\n  var termList = this.termList(); // lowercase things\n\n  if (options[\"case\"]) {\n    this.toLowerCase();\n  } //whitespace\n\n\n  if (options.whitespace) {\n    _methods.whitespace(this);\n  } // unicode: é -> e\n\n\n  if (options.unicode) {\n    _methods.unicode(termList);\n  } //punctuation - keep sentence punctation, quotes, parenths\n\n\n  if (options.punctuation) {\n    _methods.punctuation(termList);\n  } // remove ':)'\n\n\n  if (options.emoji) {\n    this.remove('(#Emoji|#Emoticon)');\n  } // 'f.b.i.' -> 'FBI'\n\n\n  if (options.acronyms) {\n    this.acronyms().strip(); // .toUpperCase()\n  } // remove period from abbreviations\n\n\n  if (options.abbreviations) {\n    _methods.abbreviations(this);\n  } // --Medium methods--\n  // `isn't` -> 'is not'\n\n\n  if (options.contraction || options.contractions) {\n    this.contractions().expand();\n  } // '(word)' -> 'word'\n\n\n  if (options.parentheses) {\n    this.parentheses().unwrap();\n  } // remove \"\" punctuation\n\n\n  if (options.quotations || options.quotes) {\n    _methods.quotations(termList);\n  } // remove any un-necessary adverbs\n\n\n  if (options.adverbs) {\n    _methods.adverbs(this);\n  } // --Heavy methods--\n  // `cory hart's -> cory hart'\n\n\n  if (options.possessive || options.possessives) {\n    this.possessives().strip();\n  } // 'he walked' -> 'he walk'\n\n\n  if (options.verbs) {\n    this.verbs().toInfinitive();\n  } // 'three dogs' -> 'three dog'\n\n\n  if (options.nouns || options.plurals) {\n    this.nouns().toSingular();\n  } // remove 'Mr.' from 'Mr John Smith'\n\n\n  if (options.honorifics) {\n    this.remove('#Honorific');\n  }\n\n  return this;\n};\n\nvar _02Normalize = {\n  normalize: normalize\n};\n\nvar _03Split = createCommonjsModule(function (module, exports) {\n  /** return a Document with three parts for every match\n   * seperate everything before the word, as a new phrase\n   */\n  exports.splitOn = function (reg) {\n    // if there's no match, split parent, instead\n    if (!reg) {\n      var parent = this.parent();\n      return parent.splitOn(this);\n    } //start looking for a match..\n\n\n    var regs = syntax_1(reg);\n    var matches = [];\n    this.list.forEach(function (p) {\n      var foundEm = p.match(regs); //no match here, add full sentence\n\n      if (foundEm.length === 0) {\n        matches.push(p);\n        return;\n      } // we found something here.\n\n\n      var carry = p;\n      foundEm.forEach(function (found) {\n        var parts = carry.splitOn(found); // add em in\n\n        if (parts.before) {\n          matches.push(parts.before);\n        }\n\n        if (parts.match) {\n          matches.push(parts.match);\n        } // start matching now on the end\n\n\n        carry = parts.after;\n      }); // add that last part\n\n      if (carry) {\n        matches.push(carry);\n      }\n    });\n    return this.buildFrom(matches);\n  };\n  /** return a Document with two parts for every match\n   * seperate everything after the word, as a new phrase\n   */\n\n\n  exports.splitAfter = function (reg) {\n    // if there's no match, split parent, instead\n    if (!reg) {\n      var parent = this.parent();\n      return parent.splitAfter(this);\n    } // start looking for our matches\n\n\n    var regs = syntax_1(reg);\n    var matches = [];\n    this.list.forEach(function (p) {\n      var foundEm = p.match(regs); //no match here, add full sentence\n\n      if (foundEm.length === 0) {\n        matches.push(p);\n        return;\n      } // we found something here.\n\n\n      var carry = p;\n      foundEm.forEach(function (found) {\n        var parts = carry.splitOn(found); // add em in\n\n        if (parts.before && parts.match) {\n          // merge these two together\n          parts.before.length += parts.match.length;\n          matches.push(parts.before);\n        } else if (parts.match) {\n          matches.push(parts.match);\n        } // start matching now on the end\n\n\n        carry = parts.after;\n      }); // add that last part\n\n      if (carry) {\n        matches.push(carry);\n      }\n    });\n    return this.buildFrom(matches);\n  };\n\n  exports.split = exports.splitAfter; //i guess?\n\n  /** return a Document with two parts for every match */\n\n  exports.splitBefore = function (reg) {\n    // if there's no match, split parent, instead\n    if (!reg) {\n      var parent = this.parent();\n      return parent.splitBefore(this);\n    } //start looking for a match..\n\n\n    var regs = syntax_1(reg);\n    var matches = [];\n    this.list.forEach(function (p) {\n      var foundEm = p.match(regs); //no match here, add full sentence\n\n      if (foundEm.length === 0) {\n        matches.push(p);\n        return;\n      } // we found something here.\n\n\n      var carry = p;\n      foundEm.forEach(function (found) {\n        var parts = carry.splitOn(found); // add before part in\n\n        if (parts.before) {\n          matches.push(parts.before);\n        } // merge match+after\n\n\n        if (parts.match && parts.after) {\n          parts.match.length += parts.after.length;\n        } // start matching now on the end\n\n\n        carry = parts.match;\n      }); // add that last part\n\n      if (carry) {\n        matches.push(carry);\n      }\n    });\n    return this.buildFrom(matches);\n  };\n  /** split a document into labeled sections */\n\n\n  exports.segment = function (regs, options) {\n    regs = regs || {};\n    options = options || {\n      text: true\n    };\n    var doc = this;\n    var keys = Object.keys(regs); // split em\n\n    keys.forEach(function (k) {\n      doc = doc.splitOn(k);\n    }); //add labels for each section\n\n    doc.list.forEach(function (p) {\n      for (var i = 0; i < keys.length; i += 1) {\n        if (p.has(keys[i])) {\n          p.segment = regs[keys[i]];\n          return;\n        }\n      }\n    });\n    return doc.list.map(function (p) {\n      var res = p.json(options);\n      res.segment = p.segment || null;\n      return res;\n    });\n  };\n});\n\nvar eachTerm = function eachTerm(doc, fn) {\n  var world = doc.world;\n  doc.list.forEach(function (p) {\n    p.terms().forEach(function (t) {\n      return t[fn](world);\n    });\n  });\n  return doc;\n};\n/** turn every letter of every term to lower-cse */\n\n\nvar toLowerCase = function toLowerCase() {\n  return eachTerm(this, 'toLowerCase');\n};\n/** turn every letter of every term to upper case */\n\n\nvar toUpperCase = function toUpperCase() {\n  return eachTerm(this, 'toUpperCase');\n};\n/** upper-case the first letter of each term */\n\n\nvar toTitleCase = function toTitleCase() {\n  return eachTerm(this, 'toTitleCase');\n};\n/** remove whitespace and title-case each term */\n\n\nvar toCamelCase = function toCamelCase() {\n  this.list.forEach(function (p) {\n    //remove whitespace\n    var terms = p.terms();\n    terms.forEach(function (t, i) {\n      if (i !== 0) {\n        t.toTitleCase();\n      }\n\n      if (i !== terms.length - 1) {\n        t.post = '';\n      }\n    });\n  }); // this.tag('#CamelCase', 'toCamelCase')\n\n  return this;\n};\n\nvar _04Case = {\n  toLowerCase: toLowerCase,\n  toUpperCase: toUpperCase,\n  toTitleCase: toTitleCase,\n  toCamelCase: toCamelCase\n};\n\nvar _05Whitespace = createCommonjsModule(function (module, exports) {\n  /** add this punctuation or whitespace before each match: */\n  exports.pre = function (str, concat) {\n    if (str === undefined) {\n      return this.list[0].terms(0).pre;\n    }\n\n    this.list.forEach(function (p) {\n      var term = p.terms(0);\n\n      if (concat === true) {\n        term.pre += str;\n      } else {\n        term.pre = str;\n      }\n    });\n    return this;\n  };\n  /** add this punctuation or whitespace after each match: */\n\n\n  exports.post = function (str, concat) {\n    // return array of post strings\n    if (str === undefined) {\n      return this.list.map(function (p) {\n        var terms = p.terms();\n        var term = terms[terms.length - 1];\n        return term.post;\n      });\n    } // set post string on all ends\n\n\n    this.list.forEach(function (p) {\n      var terms = p.terms();\n      var term = terms[terms.length - 1];\n\n      if (concat === true) {\n        term.post += str;\n      } else {\n        term.post = str;\n      }\n    });\n    return this;\n  };\n  /** remove start and end whitespace */\n\n\n  exports.trim = function () {\n    this.list = this.list.map(function (p) {\n      return p.trim();\n    });\n    return this;\n  };\n  /** connect words with hyphen, and remove whitespace */\n\n\n  exports.hyphenate = function () {\n    this.list.forEach(function (p) {\n      var terms = p.terms(); //remove whitespace\n\n      terms.forEach(function (t, i) {\n        if (i !== 0) {\n          t.pre = '';\n        }\n\n        if (terms[i + 1]) {\n          t.post = '-';\n        }\n      });\n    });\n    return this;\n  };\n  /** remove hyphens between words, and set whitespace */\n\n\n  exports.dehyphenate = function () {\n    var hasHyphen = /(-|–|—)/;\n    this.list.forEach(function (p) {\n      var terms = p.terms(); //remove whitespace\n\n      terms.forEach(function (t) {\n        if (hasHyphen.test(t.post)) {\n          t.post = ' ';\n        }\n      });\n    });\n    return this;\n  };\n\n  exports.deHyphenate = exports.dehyphenate;\n  /** add quotations around these matches */\n\n  exports.toQuotations = function (start, end) {\n    start = start || \"\\\"\";\n    end = end || \"\\\"\";\n    this.list.forEach(function (p) {\n      var terms = p.terms();\n      terms[0].pre = start + terms[0].pre;\n      var last = terms[terms.length - 1];\n      last.post = end + last.post;\n    });\n    return this;\n  };\n\n  exports.toQuotation = exports.toQuotations;\n  /** add brackets around these matches */\n\n  exports.toParentheses = function (start, end) {\n    start = start || \"(\";\n    end = end || \")\";\n    this.list.forEach(function (p) {\n      var terms = p.terms();\n      terms[0].pre = start + terms[0].pre;\n      var last = terms[terms.length - 1];\n      last.post = end + last.post;\n    });\n    return this;\n  };\n});\n\n/** make all phrases into one phrase */\nvar join = function join(str) {\n  // clear the cache\n  this.uncache(); // make one large phrase - 'main'\n\n  var main = this.list[0];\n  var before = main.length;\n  var removed = {};\n\n  for (var i = 1; i < this.list.length; i++) {\n    var p = this.list[i];\n    removed[p.start] = true;\n    var term = main.lastTerm(); // add whitespace between them\n\n    if (str) {\n      term.post += str;\n    } //  main -> p\n\n\n    term.next = p.start; // main <- p\n\n    p.terms(0).prev = term.id;\n    main.length += p.length;\n    main.cache = {};\n  } // parents are bigger than than their children.\n  // when we increase a child, we increase their parent too.\n\n\n  var increase = main.length - before;\n  this.parents().forEach(function (doc) {\n    // increase length on each effected phrase\n    doc.list.forEach(function (p) {\n      var terms = p.terms();\n\n      for (var _i = 0; _i < terms.length; _i++) {\n        if (terms[_i].id === main.start) {\n          p.length += increase;\n          break;\n        }\n      }\n\n      p.cache = {};\n    }); // remove redundant phrases now\n\n    doc.list = doc.list.filter(function (p) {\n      return removed[p.start] !== true;\n    });\n  }); // return one major phrase\n\n  return this.buildFrom([main]);\n};\n\nvar _06Join = {\n  join: join\n};\n\nvar postPunct = /[,\\)\"';:\\-–—\\.…]/; // const irregulars = {\n//   'will not': `won't`,\n//   'i am': `i'm`,\n// }\n\nvar setContraction = function setContraction(m, suffix) {\n  if (!m.found) {\n    return;\n  }\n\n  var terms = m.termList(); //avoid any problematic punctuation\n\n  for (var i = 0; i < terms.length - 1; i++) {\n    var t = terms[i];\n\n    if (postPunct.test(t.post)) {\n      return;\n    }\n  } // set them as implict\n\n\n  terms.forEach(function (t) {\n    t.implicit = t.clean;\n  }); // perform the contraction\n\n  terms[0].text += suffix; // clean-up the others\n\n  terms.slice(1).forEach(function (t) {\n    t.text = '';\n  });\n\n  for (var _i = 0; _i < terms.length - 1; _i++) {\n    var _t = terms[_i];\n    _t.post = _t.post.replace(/ /, '');\n  }\n};\n/** turn 'i am' into i'm */\n\n\nvar contract = function contract() {\n  var doc = this.not('@hasContraction'); // we are -> we're\n\n  var m = doc.match('(we|they|you) are');\n  setContraction(m, \"'re\"); // they will -> they'll\n\n  m = doc.match('(he|she|they|it|we|you) will');\n  setContraction(m, \"'ll\"); // she is -> she's\n\n  m = doc.match('(he|she|they|it|we) is');\n  setContraction(m, \"'s\"); // spencer is -> spencer's\n\n  m = doc.match('#Person is');\n  setContraction(m, \"'s\"); // spencer would -> spencer'd\n\n  m = doc.match('#Person would');\n  setContraction(m, \"'d\"); // would not -> wouldn't\n\n  m = doc.match('(is|was|had|would|should|could|do|does|have|has|can) not');\n  setContraction(m, \"n't\"); // i have -> i've\n\n  m = doc.match('(i|we|they) have');\n  setContraction(m, \"'ve\"); // would have -> would've\n\n  m = doc.match('(would|should|could) have');\n  setContraction(m, \"'ve\"); // i am -> i'm\n\n  m = doc.match('i am');\n  setContraction(m, \"'m\"); // going to -> gonna\n\n  m = doc.match('going to');\n  return this;\n};\n\nvar _07Contract = {\n  contract: contract\n};\n\nvar methods$4 = Object.assign({}, _01Utils$1, _02Accessors, _03Match, _04Tag, _05Loops, _06Lookup, _07Cache, _01Replace, _02Insert, _01Text, _02Json, _03Out, _01Sort, _02Normalize, _03Split, _04Case, _05Whitespace, _06Join, _07Contract);\n\nvar methods$5 = {}; // allow helper methods like .adjectives() and .adverbs()\n\nvar arr = [['terms', '.'], ['hyphenated', '@hasHyphen .'], ['adjectives', '#Adjective'], ['hashTags', '#HashTag'], ['emails', '#Email'], ['emoji', '#Emoji'], ['emoticons', '#Emoticon'], ['atMentions', '#AtMention'], ['urls', '#Url'], ['adverbs', '#Adverb'], ['pronouns', '#Pronoun'], ['conjunctions', '#Conjunction'], ['prepositions', '#Preposition']];\narr.forEach(function (a) {\n  methods$5[a[0]] = function (n) {\n    var m = this.match(a[1]);\n\n    if (typeof n === 'number') {\n      m = m.get(n);\n    }\n\n    return m;\n  };\n}); // aliases\n\nmethods$5.emojis = methods$5.emoji;\nmethods$5.atmentions = methods$5.atMentions;\nmethods$5.words = methods$5.terms;\n/** return anything tagged as a phone number */\n\nmethods$5.phoneNumbers = function (n) {\n  var m = this.splitAfter('@hasComma');\n  m = m.match('#PhoneNumber+');\n\n  if (typeof n === 'number') {\n    m = m.get(n);\n  }\n\n  return m;\n};\n/** Deprecated: please use compromise-numbers plugin */\n\n\nmethods$5.money = function (n) {\n  var m = this.match('#Money #Currency?');\n\n  if (typeof n === 'number') {\n    m = m.get(n);\n  }\n\n  return m;\n};\n/** return all cities, countries, addresses, and regions */\n\n\nmethods$5.places = function (n) {\n  // don't split 'paris, france'\n  var keep = this.match('(#City && @hasComma) (#Region|#Country)'); // but split the other commas\n\n  var m = this.not(keep).splitAfter('@hasComma'); // combine them back together\n\n  m = m.concat(keep);\n  m.sort('index');\n  m = m.match('#Place+');\n\n  if (typeof n === 'number') {\n    m = m.get(n);\n  }\n\n  return m;\n};\n/** return all schools, businesses and institutions */\n\n\nmethods$5.organizations = function (n) {\n  var m = this.clauses();\n  m = m.match('#Organization+');\n\n  if (typeof n === 'number') {\n    m = m.get(n);\n  }\n\n  return m;\n}; //combine them with .topics() method\n\n\nmethods$5.entities = function (n) {\n  var r = this.clauses(); // Find people, places, and organizations\n\n  var yup = r.people();\n  yup = yup.concat(r.places());\n  yup = yup.concat(r.organizations());\n  var ignore = ['someone', 'man', 'woman', 'mother', 'brother', 'sister', 'father'];\n  yup = yup.not(ignore); //return them to normal ordering\n\n  yup.sort('sequence'); // yup.unique() //? not sure\n\n  if (typeof n === 'number') {\n    yup = yup.get(n);\n  }\n\n  return yup;\n}; //aliases\n\n\nmethods$5.things = methods$5.entities;\nmethods$5.topics = methods$5.entities;\nvar _simple = methods$5;\n\nvar underOver = /^(under|over)-?/;\n/** match a word-sequence, like 'super bowl' in the lexicon */\n\nvar tryMultiple = function tryMultiple(terms, t, world) {\n  var lex = world.words; //try a two-word version\n\n  var txt = terms[t].reduced + ' ' + terms[t + 1].reduced;\n\n  if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n    terms[t].tag(lex[txt], 'lexicon-two', world);\n    terms[t + 1].tag(lex[txt], 'lexicon-two', world);\n    return 1;\n  } //try a three-word version?\n\n\n  if (t + 2 < terms.length) {\n    txt += ' ' + terms[t + 2].reduced;\n\n    if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n      terms[t].tag(lex[txt], 'lexicon-three', world);\n      terms[t + 1].tag(lex[txt], 'lexicon-three', world);\n      terms[t + 2].tag(lex[txt], 'lexicon-three', world);\n      return 2;\n    }\n  } //try a four-word version?\n\n\n  if (t + 3 < terms.length) {\n    txt += ' ' + terms[t + 3].reduced;\n\n    if (lex[txt] !== undefined && lex.hasOwnProperty(txt) === true) {\n      terms[t].tag(lex[txt], 'lexicon-four', world);\n      terms[t + 1].tag(lex[txt], 'lexicon-four', world);\n      terms[t + 2].tag(lex[txt], 'lexicon-four', world);\n      terms[t + 3].tag(lex[txt], 'lexicon-four', world);\n      return 3;\n    }\n  }\n\n  return 0;\n};\n/** look at each word in our list of known-words */\n\n\nvar checkLexicon = function checkLexicon(terms, world) {\n  var lex = world.words;\n  var hasCompound = world.hasCompound; // use reduced?\n  //go through each term, and check the lexicon\n\n  for (var t = 0; t < terms.length; t += 1) {\n    var str = terms[t].clean; //is it the start of a compound word, like 'super bowl'?\n\n    if (hasCompound[str] === true && t + 1 < terms.length) {\n      var foundWords = tryMultiple(terms, t, world);\n\n      if (foundWords > 0) {\n        t += foundWords; //skip any already-found words\n\n        continue;\n      }\n    } //try one-word lexicon\n\n\n    if (lex[str] !== undefined && lex.hasOwnProperty(str) === true) {\n      terms[t].tag(lex[str], 'lexicon', world);\n      continue;\n    } // look at reduced version of term, too\n\n\n    if (str !== terms[t].reduced && lex.hasOwnProperty(terms[t].reduced) === true) {\n      terms[t].tag(lex[terms[t].reduced], 'lexicon', world);\n      continue;\n    } // prefix strip: try to match 'take' for 'undertake'\n\n\n    if (underOver.test(str) === true) {\n      var noPrefix = str.replace(underOver, '');\n\n      if (lex.hasOwnProperty(noPrefix) === true) {\n        terms[t].tag(lex[noPrefix], 'noprefix-lexicon', world);\n      }\n    }\n  }\n\n  return terms;\n};\n\nvar _01Lexicon = checkLexicon;\n\nvar apostrophes = /[\\'‘’‛‵′`´]$/;\nvar perSec = /^(m|k|cm|km|m)\\/(s|h|hr)$/; // '5 k/m'\n//\n\nvar checkPunctuation = function checkPunctuation(terms, i, world) {\n  var term = terms[i]; //check hyphenation\n  // if (term.post.indexOf('-') !== -1 && terms[i + 1] && terms[i + 1].pre === '') {\n  //   term.tag('Hyphenated', 'has-hyphen', world)\n  // }\n  // support 'head-over'\n  // if (term.hasHyphen() === true) {\n  //   console.log(term.tags)\n  // }\n  // console.log(term.hasHyphen(), term.text)\n  //an end-tick (trailing apostrophe) - flanders', or Carlos'\n\n  if (apostrophes.test(term.text)) {\n    if (!apostrophes.test(term.pre) && !apostrophes.test(term.post) && term.clean.length > 2) {\n      var endChar = term.clean[term.clean.length - 2]; //flanders'\n\n      if (endChar === 's') {\n        term.tag(['Possessive', 'Noun'], 'end-tick', world);\n        return;\n      } //chillin'\n\n\n      if (endChar === 'n') {\n        term.tag(['Gerund'], 'chillin', world);\n      }\n    }\n  } // '5 km/s'\n\n\n  if (perSec.test(term.text)) {\n    term.tag('Unit', 'per-sec', world);\n  } // 'NASA' is, but not 'i REALLY love it.'\n  // if (term.tags.Noun === true && isAcronym(term, world)) {\n  //   term.tag('Acronym', 'acronym-step', world)\n  //   term.tag('Noun', 'acronym-infer', world)\n  // } else if (!oneLetterWord.hasOwnProperty(term.text) && oneLetterAcronym.test(term.text)) {\n  //   term.tag('Acronym', 'one-letter-acronym', world)\n  //   term.tag('Noun', 'one-letter-infer', world)\n  // }\n\n};\n\nvar _02Punctuation$1 = checkPunctuation;\n\n//these are regexes applied to t.text, instead of t.clean\n// order matters.\nvar startsWith = [//web tags\n[/^[\\w\\.]+@[\\w\\.]+\\.[a-z]{2,3}$/, 'Email'], //not fancy\n[/^#[a-z0-9_\\u00C0-\\u00FF]{2,}$/, 'HashTag'], [/^@\\w{2,}$/, 'AtMention'], [/^(https?:\\/\\/|www\\.)\\w+\\.[a-z]{2,3}/, 'Url'], //with http/www\n[/^[\\w./]+\\.(com|net|gov|org|ly|edu|info|biz|ru|jp|de|in|uk|br)/, 'Url'], //http://mostpopularwebsites.net/top-level-domain\n//dates/times\n[/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])$/, 'Time'], //4:32:32\n[/^[012]?[0-9](:[0-5][0-9])?(:[0-5][0-9])? ?(am|pm)$/, 'Time'], //4pm\n[/^[012]?[0-9](:[0-5][0-9])(:[0-5][0-9])? ?(am|pm)?$/, 'Time'], //4:00pm\n[/^[PMCE]ST$/, 'Time'], //PST, time zone abbrevs\n[/^utc ?[+-]?[0-9]+?$/, 'Time'], //UTC 8+\n[/^[a-z0-9]*? o\\'?clock$/, 'Time'], //3 oclock\n[/^[0-9]{1,4}-[0-9]{1,2}-[0-9]{1,4}$/, 'Date'], // 03-02-89\n[/^[0-9]{1,4}\\/[0-9]{1,2}\\/[0-9]{1,4}$/, 'Date'], // 03/02/89\n//names\n[/^ma?c\\'.*/, 'LastName'], //mc'adams\n[/^o\\'[drlkn].*/, 'LastName'], //o'douggan\n[/^ma?cd[aeiou]/, 'LastName'], //macdonell - Last patterns https://en.wikipedia.org/wiki/List_of_family_name_affixes\n//slang things\n[/^(lol)+[sz]$/, 'Expression'], //lol\n[/^woo+a*?h?$/, 'Expression'], //whoaa, wooo\n[/^(un|de|re)\\\\-[a-z\\u00C0-\\u00FF]{2}/, 'Verb'], // [/^(over|under)[a-z]{2,}/, 'Adjective'],\n[/^[0-9]{1,4}\\.[0-9]{1,2}\\.[0-9]{1,4}$/, 'Date'], // 03-02-89\n//phone numbers\n[/^[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'], //589-3809\n[/^(\\+?[0-9][ -])?[0-9]{3}[ -]?[0-9]{3}-[0-9]{4}$/, 'PhoneNumber'], //632-589-3809\n//money\n// currency regex\n// /[\\$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BD\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]\n//like $5.30\n[/^[-+]?[\\$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BD\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6][-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?(k|m|b|bn)?\\+?$/, ['Money', 'Value']], //like 5.30$\n[/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?[\\$\\xA2-\\xA5\\u058F\\u060B\\u09F2\\u09F3\\u09FB\\u0AF1\\u0BF9\\u0E3F\\u17DB\\u20A0-\\u20BD\\uA838\\uFDFC\\uFE69\\uFF04\\uFFE0\\uFFE1\\uFFE5\\uFFE6]\\+?$/, ['Money', 'Value']], //like 400usd\n[/^[-+]?[0-9]([0-9,.])+?(usd|eur|jpy|gbp|cad|aud|chf|cny|hkd|nzd|kr|rub)$/i, ['Money', 'Value']], //numbers\n// 50 | -50 | 3.23  | 5,999.0  | 10+\n[/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?\\+?$/, ['Cardinal', 'NumericValue']], [/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?(st|nd|rd|th)$/, ['Ordinal', 'NumericValue']], // .73th\n[/^\\.[0-9]+\\+?$/, ['Cardinal', 'NumericValue']], //percent\n[/^[-+]?[0-9]+(,[0-9]{3})*(\\.[0-9]+)?%\\+?$/, ['Percent', 'Cardinal', 'NumericValue']], //7%  ..\n[/^\\.[0-9]+%$/, ['Percent', 'Cardinal', 'NumericValue']], //.7%  ..\n//fraction\n[/^[0-9]{1,4}\\/[0-9]{1,4}$/, 'Fraction'], //3/2ths\n//range\n[/^[0-9.]{1,2}[-–][0-9]{1,2}$/, ['Value', 'NumberRange']], //7-8\n[/^[0-9.]{1,4}(st|nd|rd|th)?[-–][0-9\\.]{1,4}(st|nd|rd|th)?$/, 'NumberRange'], //5-7\n//with unit\n[/^[0-9.]+([a-z]{1,4})$/, 'Value'] //like 5tbsp\n//ordinal\n// [/^[0-9][0-9,.]*(st|nd|rd|r?th)$/, ['NumericValue', 'Ordinal']], //like 5th\n// [/^[0-9]+(st|nd|rd|th)$/, 'Ordinal'], //like 5th\n];\n\nvar romanNumeral = /^[IVXLCDM]{2,}$/;\nvar romanNumValid = /^M{0,4}(CM|CD|D?C{0,3})(XC|XL|L?X{0,3})(IX|IV|V?I{0,3})$/; //  https://stackoverflow.com/a/267405/168877\n//try each of the ^regexes in our list\n\nvar checkRegex = function checkRegex(term, world) {\n  var str = term.text; // do them all!\n\n  for (var r = 0; r < startsWith.length; r += 1) {\n    if (startsWith[r][0].test(str) === true) {\n      term.tagSafe(startsWith[r][1], 'prefix #' + r, world);\n      break;\n    }\n  } // do some more!\n  //roman numberals - XVII\n\n\n  if (term.text.length >= 2 && romanNumeral.test(str) && romanNumValid.test(str)) {\n    term.tag('RomanNumeral', 'xvii', world);\n  }\n};\n\nvar _03Prefixes = checkRegex;\n\n//regex suffix patterns and their most common parts of speech,\n//built using wordnet, by spencer kelly.\n//this mapping shrinks-down the uglified build\nvar Adj = 'Adjective';\nvar Inf = 'Infinitive';\nvar Pres = 'PresentTense';\nvar Sing = 'Singular';\nvar Past = 'PastTense';\nvar Adverb = 'Adverb';\nvar Exp = 'Expression';\nvar Actor = 'Actor';\nvar Verb = 'Verb';\nvar Noun = 'Noun';\nvar Last = 'LastName'; //the order here matters.\n//regexes indexed by mandated last-character\n\nvar endsWith$1 = {\n  a: [[/.[aeiou]na$/, Noun], [/.[oau][wvl]ska$/, Last], //polish (female)\n  [/.[^aeiou]ica$/, Sing], [/^([hyj]a)+$/, Exp] //hahah\n  ],\n  c: [[/.[^aeiou]ic$/, Adj]],\n  d: [//==-ed==\n  //double-consonant\n  [/[aeiou](pp|ll|ss|ff|gg|tt|rr|bb|nn|mm)ed$/, Past], //popped, planned\n  //double-vowel\n  [/.[aeo]{2}[bdgmnprvz]ed$/, Past], //beeped, mooned, veered\n  //-hed\n  [/.[aeiou][sg]hed$/, Past], //stashed, sighed\n  //-rd\n  [/.[aeiou]red$/, Past], //stored\n  [/.[aeiou]r?ried$/, Past], //buried\n  //-led\n  [/.[bcdgtr]led$/, Past], //startled, rumbled\n  [/.[aoui]f?led$/, Past], //impaled, stifled\n  //-sed\n  [/.[iao]sed$/, Past], //franchised\n  [/[aeiou]n?[cs]ed$/, Past], //laced, lanced\n  //-med\n  [/[aeiou][rl]?[mnf]ed$/, Past], //warmed, attained, engulfed\n  //-ked\n  [/[aeiou][ns]?c?ked$/, Past], //hooked, masked\n  //-ged\n  [/[aeiou][nl]?ged$/, Past], //engaged\n  //-ted\n  [/.[tdbwxz]ed$/, Past], //bribed, boxed\n  [/[^aeiou][aeiou][tvx]ed$/, Past], //boxed\n  //-ied\n  [/.[cdlmnprstv]ied$/, Past], //rallied\n  [/[^aeiou]ard$/, Sing], //card\n  [/[aeiou][^aeiou]id$/, Adj], [/.[vrl]id$/, Adj]],\n  e: [[/.[lnr]ize$/, Inf], [/.[^aeiou]ise$/, Inf], [/.[aeiou]te$/, Inf], [/.[^aeiou][ai]ble$/, Adj], [/.[^aeiou]eable$/, Adj], [/.[ts]ive$/, Adj]],\n  h: [[/.[^aeiouf]ish$/, Adj], [/.v[iy]ch$/, Last], //east-europe\n  [/^ug?h+$/, Exp], //uhh\n  [/^uh[ -]?oh$/, Exp] //uhoh\n  ],\n  i: [[/.[oau][wvl]ski$/, Last] //polish (male)\n  ],\n  k: [[/^(k){2}$/, Exp] //kkkk\n  ],\n  l: [[/.[gl]ial$/, Adj], [/.[^aeiou]ful$/, Adj], [/.[nrtumcd]al$/, Adj], [/.[^aeiou][ei]al$/, Adj]],\n  m: [[/.[^aeiou]ium$/, Sing], [/[^aeiou]ism$/, Sing], [/^h*u*m+$/, Exp], //mmmmmmm / ummmm / huuuuuummmmmm\n  [/^\\d+ ?[ap]m$/, 'Date']],\n  n: [[/.[lsrnpb]ian$/, Adj], [/[^aeiou]ician$/, Actor], [/[aeiou][ktrp]in$/, 'Gerund'] // 'cookin', 'hootin'\n  ],\n  o: [[/^no+$/, Exp], //noooo\n  [/^(yo)+$/, Exp], //yoyo\n  [/^woo+[pt]?$/, Exp] //woo\n  ],\n  r: [[/.[bdfklmst]ler$/, 'Noun'], [/.[ilk]er$/, 'Comparative'], [/[aeiou][pns]er$/, Sing], [/[^i]fer$/, Inf], [/.[^aeiou][ao]pher$/, Actor]],\n  t: [[/.[di]est$/, 'Superlative'], [/.[icldtgrv]ent$/, Adj], [/[aeiou].*ist$/, Adj], [/^[a-z]et$/, Verb]],\n  s: [[/.[rln]ates$/, Pres], [/.[^z]ens$/, Verb], [/.[lstrn]us$/, Sing], [/.[aeiou]sks$/, Pres], //masks\n  [/.[aeiou]kes$/, Pres], //bakes\n  [/[aeiou][^aeiou]is$/, Sing], [/[a-z]\\'s$/, Noun], [/^yes+$/, Exp] //yessss\n  ],\n  v: [[/.[^aeiou][ai][kln]ov$/, Last] //east-europe\n  ],\n  y: [[/.[cts]hy$/, Adj], [/.[st]ty$/, Adj], [/.[gk]y$/, Adj], [/.[tnl]ary$/, Adj], [/.[oe]ry$/, Sing], [/[rdntkbhs]ly$/, Adverb], [/...lly$/, Adverb], [/[bszmp]{2}y$/, Adj], [/.(gg|bb|zz)ly$/, Adj], [/.[aeiou]my$/, Adj], [/[ea]{2}zy$/, Adj], [/.[^aeiou]ity$/, Sing]]\n};\n\n//just a foolish lookup of known suffixes\nvar Adj$1 = 'Adjective';\nvar Inf$1 = 'Infinitive';\nvar Pres$1 = 'PresentTense';\nvar Sing$1 = 'Singular';\nvar Past$1 = 'PastTense';\nvar Avb = 'Adverb';\nvar Plrl = 'Plural';\nvar Actor$1 = 'Actor';\nvar Vb = 'Verb';\nvar Noun$1 = 'Noun';\nvar Last$1 = 'LastName';\nvar Modal = 'Modal';\nvar Place = 'Place'; // find any issues - https://observablehq.com/@spencermountain/suffix-word-lookup\n\nvar suffixMap = [null, //0\nnull, //1\n{\n  //2-letter\n  ea: Sing$1,\n  ia: Noun$1,\n  ic: Adj$1,\n  ly: Avb,\n  \"'n\": Vb,\n  \"'t\": Vb\n}, {\n  //3-letter\n  oed: Past$1,\n  ued: Past$1,\n  xed: Past$1,\n  ' so': Avb,\n  \"'ll\": Modal,\n  \"'re\": 'Copula',\n  azy: Adj$1,\n  end: Vb,\n  ped: Past$1,\n  ffy: Adj$1,\n  ify: Inf$1,\n  ing: 'Gerund',\n  //likely to be converted to Adj after lexicon pass\n  ize: Inf$1,\n  lar: Adj$1,\n  mum: Adj$1,\n  nes: Pres$1,\n  nny: Adj$1,\n  oid: Adj$1,\n  ous: Adj$1,\n  que: Adj$1,\n  rmy: Adj$1,\n  rol: Sing$1,\n  sis: Sing$1,\n  zes: Pres$1\n}, {\n  //4-letter\n  amed: Past$1,\n  aped: Past$1,\n  ched: Past$1,\n  lked: Past$1,\n  nded: Past$1,\n  cted: Past$1,\n  dged: Past$1,\n  akis: Last$1,\n  //greek\n  cede: Inf$1,\n  chuk: Last$1,\n  //east-europe\n  czyk: Last$1,\n  //polish (male)\n  ects: Pres$1,\n  ends: Vb,\n  enko: Last$1,\n  //east-europe\n  ette: Sing$1,\n  fies: Pres$1,\n  fore: Avb,\n  gate: Inf$1,\n  gone: Adj$1,\n  ices: Plrl,\n  ints: Plrl,\n  ions: Plrl,\n  less: Avb,\n  llen: Adj$1,\n  made: Adj$1,\n  nsen: Last$1,\n  //norway\n  oses: Pres$1,\n  ould: Modal,\n  some: Adj$1,\n  sson: Last$1,\n  //swedish male\n  tage: Inf$1,\n  teen: 'Value',\n  tion: Sing$1,\n  tive: Adj$1,\n  tors: Noun$1,\n  vice: Sing$1\n}, {\n  //5-letter\n  tized: Past$1,\n  urned: Past$1,\n  eased: Past$1,\n  ances: Plrl,\n  bound: Adj$1,\n  ettes: Plrl,\n  fully: Avb,\n  ishes: Pres$1,\n  ities: Plrl,\n  marek: Last$1,\n  //polish (male)\n  nssen: Last$1,\n  //norway\n  ology: Noun$1,\n  ports: Plrl,\n  rough: Adj$1,\n  tches: Pres$1,\n  tieth: 'Ordinal',\n  tures: Plrl,\n  wards: Avb,\n  where: Avb\n}, {\n  //6-letter\n  auskas: Last$1,\n  //lithuania\n  keeper: Actor$1,\n  logist: Actor$1,\n  teenth: 'Value'\n}, {\n  //7-letter\n  opoulos: Last$1,\n  //greek\n  borough: Place,\n  //Hillsborough\n  sdottir: Last$1 //swedish female\n\n}];\n\nvar endRegexs = function endRegexs(term, world) {\n  var str = term.clean;\n  var _char = str[str.length - 1];\n\n  if (endsWith$1.hasOwnProperty(_char) === true) {\n    var regs = endsWith$1[_char];\n\n    for (var r = 0; r < regs.length; r += 1) {\n      if (regs[r][0].test(str) === true) {\n        term.tagSafe(regs[r][1], \"endReg \".concat(_char, \" #\").concat(r), world);\n        break;\n      }\n    }\n  }\n}; //sweep-through all suffixes\n\n\nvar knownSuffixes = function knownSuffixes(term, world) {\n  var len = term.clean.length;\n  var max = 7;\n\n  if (len <= max) {\n    max = len - 1;\n  }\n\n  for (var i = max; i > 1; i -= 1) {\n    var str = term.clean.substr(len - i, len);\n\n    if (suffixMap[str.length].hasOwnProperty(str) === true) {\n      var tag = suffixMap[str.length][str];\n      term.tagSafe(tag, 'suffix -' + str, world);\n      break;\n    }\n  }\n}; //all-the-way-down!\n\n\nvar checkRegex$1 = function checkRegex(term, world) {\n  knownSuffixes(term, world);\n  endRegexs(term, world);\n};\n\nvar _04Suffixes = checkRegex$1;\n\n//just some of the most common emoticons\n//faster than\n//http://stackoverflow.com/questions/28077049/regex-matching-emoticons\nvar emoticons = {\n  ':(': true,\n  ':)': true,\n  ':P': true,\n  ':p': true,\n  ':O': true,\n  ':3': true,\n  ':|': true,\n  ':/': true,\n  ':\\\\': true,\n  ':$': true,\n  ':*': true,\n  ':@': true,\n  ':-(': true,\n  ':-)': true,\n  ':-P': true,\n  ':-p': true,\n  ':-O': true,\n  ':-3': true,\n  ':-|': true,\n  ':-/': true,\n  ':-\\\\': true,\n  ':-$': true,\n  ':-*': true,\n  ':-@': true,\n  ':^(': true,\n  ':^)': true,\n  ':^P': true,\n  ':^p': true,\n  ':^O': true,\n  ':^3': true,\n  ':^|': true,\n  ':^/': true,\n  ':^\\\\': true,\n  ':^$': true,\n  ':^*': true,\n  ':^@': true,\n  '):': true,\n  '(:': true,\n  '$:': true,\n  '*:': true,\n  ')-:': true,\n  '(-:': true,\n  '$-:': true,\n  '*-:': true,\n  ')^:': true,\n  '(^:': true,\n  '$^:': true,\n  '*^:': true,\n  '<3': true,\n  '</3': true,\n  '<\\\\3': true\n};\n\nvar emojiReg = /^(\\u00a9|\\u00ae|[\\u2319-\\u3300]|\\ud83c[\\ud000-\\udfff]|\\ud83d[\\ud000-\\udfff]|\\ud83e[\\ud000-\\udfff])/; //for us, there's three types -\n// * ;) - emoticons\n// * 🌵 - unicode emoji\n// * :smiling_face: - asci-represented emoji\n//test for forms like ':woman_tone2:‍:ear_of_rice:'\n//https://github.com/Kikobeats/emojis-keywords/blob/master/index.js\n\nvar isCommaEmoji = function isCommaEmoji(raw) {\n  if (raw.charAt(0) === ':') {\n    //end comma can be last or second-last ':haircut_tone3:‍♀️'\n    if (raw.match(/:.?$/) === null) {\n      return false;\n    } //ensure no spaces\n\n\n    if (raw.match(' ')) {\n      return false;\n    } //reasonably sized\n\n\n    if (raw.length > 35) {\n      return false;\n    }\n\n    return true;\n  }\n\n  return false;\n}; //check against emoticon whitelist\n\n\nvar isEmoticon = function isEmoticon(str) {\n  str = str.replace(/^[:;]/, ':'); //normalize the 'eyes'\n\n  return emoticons.hasOwnProperty(str);\n};\n\nvar tagEmoji = function tagEmoji(term, world) {\n  var raw = term.pre + term.text + term.post;\n  raw = raw.trim(); //dont double-up on ending periods\n\n  raw = raw.replace(/[.!?,]$/, ''); //test for :keyword: emojis\n\n  if (isCommaEmoji(raw) === true) {\n    term.tag('Emoji', 'comma-emoji', world);\n    term.text = raw;\n    term.pre = term.pre.replace(':', '');\n    term.post = term.post.replace(':', '');\n  } //test for unicode emojis\n\n\n  if (term.text.match(emojiReg)) {\n    term.tag('Emoji', 'unicode-emoji', world);\n    term.text = raw;\n  } //test for emoticon ':)' emojis\n\n\n  if (isEmoticon(raw) === true) {\n    term.tag('Emoticon', 'emoticon-emoji', world);\n    term.text = raw;\n  }\n};\n\nvar _05Emoji = tagEmoji;\n\nvar steps = {\n  lexicon: _01Lexicon,\n  punctuation: _02Punctuation$1,\n  regex: _03Prefixes,\n  suffix: _04Suffixes,\n  emoji: _05Emoji\n}; //'lookups' look at a term by itself\n\nvar lookups = function lookups(doc, terms) {\n  var world = doc.world; //our list of known-words\n\n  steps.lexicon(terms, world); //try these other methods\n\n  for (var i = 0; i < terms.length; i += 1) {\n    var term = terms[i]; //or maybe some helpful punctuation\n\n    steps.punctuation(terms, i, world); //mostly prefix checks\n\n    steps.regex(term, world); //maybe we can guess\n\n    steps.suffix(term, world); //emoji and emoticons\n\n    steps.emoji(term, world);\n  }\n\n  return doc;\n};\n\nvar _01Init = lookups;\n\n//markov-like stats about co-occurance, for hints about unknown terms\n//basically, a little-bit better than the noun-fallback\n//just top n-grams from nlp tags, generated from nlp-corpus\n//after this word, here's what happens usually\nvar afterThisWord = {\n  i: 'Verb',\n  //44% //i walk..\n  first: 'Noun',\n  //50% //first principles..\n  it: 'Verb',\n  //33%\n  there: 'Verb',\n  //35%\n  not: 'Verb',\n  //33%\n  because: 'Noun',\n  //31%\n  \"if\": 'Noun',\n  //32%\n  but: 'Noun',\n  //26%\n  who: 'Verb',\n  //40%\n  \"this\": 'Noun',\n  //37%\n  his: 'Noun',\n  //48%\n  when: 'Noun',\n  //33%\n  you: 'Verb',\n  //35%\n  very: 'Adjective',\n  // 39%\n  old: 'Noun',\n  //51%\n  never: 'Verb',\n  //42%\n  before: 'Noun' //28%\n\n}; //in advance of this word, this is what happens usually\n\nvar beforeThisWord = {\n  there: 'Verb',\n  //23% // be there\n  me: 'Verb',\n  //31% //see me\n  man: 'Adjective',\n  // 80% //quiet man\n  only: 'Verb',\n  //27% //sees only\n  him: 'Verb',\n  //32% //show him\n  were: 'Noun',\n  //48% //we were\n  took: 'Noun',\n  //38% //he took\n  himself: 'Verb',\n  //31% //see himself\n  went: 'Noun',\n  //43% //he went\n  who: 'Noun',\n  //47% //person who\n  jr: 'Person'\n}; //following this POS, this is likely\n\nvar afterThisPOS = {\n  Adjective: 'Noun',\n  //36% //blue dress\n  Possessive: 'Noun',\n  //41% //his song\n  Determiner: 'Noun',\n  //47%\n  Adverb: 'Verb',\n  //20%\n  Pronoun: 'Verb',\n  //40%\n  Value: 'Noun',\n  //47%\n  Ordinal: 'Noun',\n  //53%\n  Modal: 'Verb',\n  //35%\n  Superlative: 'Noun',\n  //43%\n  Demonym: 'Noun',\n  //38%\n  Honorific: 'Person' //\n\n}; //in advance of this POS, this is likely\n\nvar beforeThisPOS = {\n  Copula: 'Noun',\n  //44% //spencer is\n  PastTense: 'Noun',\n  //33% //spencer walked\n  Conjunction: 'Noun',\n  //36%\n  Modal: 'Noun',\n  //38%\n  Pluperfect: 'Noun',\n  //40%\n  PerfectTense: 'Verb' //32%\n\n};\nvar markov = {\n  beforeThisWord: beforeThisWord,\n  afterThisWord: afterThisWord,\n  beforeThisPos: beforeThisPOS,\n  afterThisPos: afterThisPOS\n};\n\nvar afterKeys = Object.keys(markov.afterThisPos);\nvar beforeKeys = Object.keys(markov.beforeThisPos);\n\nvar checkNeighbours = function checkNeighbours(terms, world) {\n  var _loop = function _loop(i) {\n    var term = terms[i]; //do we still need a tag?\n\n    if (term.isKnown() === true) {\n      return \"continue\";\n    } //ok, this term needs a tag.\n    //look at previous word for clues..\n\n\n    var lastTerm = terms[i - 1];\n\n    if (lastTerm) {\n      // 'foobar term'\n      if (markov.afterThisWord.hasOwnProperty(lastTerm.clean) === true) {\n        var tag = markov.afterThisWord[lastTerm.clean];\n        term.tag(tag, 'after-' + lastTerm.clean, world);\n        return \"continue\";\n      } // 'Tag term'\n      // (look at previous POS tags for clues..)\n\n\n      var foundTag = afterKeys.find(function (tag) {\n        return lastTerm.tags[tag];\n      });\n\n      if (foundTag !== undefined) {\n        var _tag = markov.afterThisPos[foundTag];\n        term.tag(_tag, 'after-' + foundTag, world);\n        return \"continue\";\n      }\n    } //look at next word for clues..\n\n\n    var nextTerm = terms[i + 1];\n\n    if (nextTerm) {\n      // 'term foobar'\n      if (markov.beforeThisWord.hasOwnProperty(nextTerm.clean) === true) {\n        var _tag2 = markov.beforeThisWord[nextTerm.clean];\n        term.tag(_tag2, 'before-' + nextTerm.clean, world);\n        return \"continue\";\n      } // 'term Tag'\n      // (look at next POS tags for clues..)\n\n\n      var _foundTag = beforeKeys.find(function (tag) {\n        return nextTerm.tags[tag];\n      });\n\n      if (_foundTag !== undefined) {\n        var _tag3 = markov.beforeThisPos[_foundTag];\n        term.tag(_tag3, 'before-' + _foundTag, world);\n        return \"continue\";\n      }\n    }\n  };\n\n  for (var i = 0; i < terms.length; i += 1) {\n    var _ret = _loop(i);\n\n    if (_ret === \"continue\") continue;\n  }\n};\n\nvar _01Neighbours = checkNeighbours;\n\nvar titleCase$4 = /^[A-Z][a-z'\\u00C0-\\u00FF]/;\nvar hasNumber = /[0-9]/;\n/** look for any grammar signals based on capital/lowercase */\n\nvar checkCase = function checkCase(doc) {\n  var world = doc.world;\n  doc.list.forEach(function (p) {\n    var terms = p.terms();\n\n    for (var i = 1; i < terms.length; i++) {\n      var term = terms[i];\n\n      if (titleCase$4.test(term.text) === true && hasNumber.test(term.text) === false) {\n        term.tag('ProperNoun', 'titlecase-noun', world);\n      }\n    }\n  });\n};\n\nvar _02Case = checkCase;\n\nvar hasPrefix = /^(re|un)-?[a-z\\u00C0-\\u00FF]/;\nvar prefix = /^(re|un)-?/;\n/** check 'rewatch' in lexicon as 'watch' */\n\nvar checkPrefix = function checkPrefix(terms, world) {\n  var lex = world.words;\n  terms.forEach(function (term) {\n    // skip if we have a good tag already\n    if (term.isKnown() === true) {\n      return;\n    } //does it start with 'un|re'\n\n\n    if (hasPrefix.test(term.clean) === true) {\n      // look for the root word in the lexicon:\n      var stem = term.clean.replace(prefix, '');\n\n      if (stem && stem.length > 3 && lex[stem] !== undefined && lex.hasOwnProperty(stem) === true) {\n        term.tag(lex[stem], 'stem-' + stem, world);\n      }\n    }\n  });\n};\n\nvar _03Stem = checkPrefix;\n\n//similar to plural/singularize rules, but not the same\nvar isPlural = [/(^v)ies$/i, /ises$/i, /ives$/i, /(antenn|formul|nebul|vertebr|vit)ae$/i, /(octop|vir|radi|nucle|fung|cact|stimul)i$/i, /(buffal|tomat|tornad)oes$/i, /(analy|ba|diagno|parenthe|progno|synop|the)ses$/i, /(vert|ind|cort)ices$/i, /(matr|append)ices$/i, /(x|ch|ss|sh|s|z|o)es$/i, /is$/i, /men$/i, /news$/i, /.tia$/i, /(^f)ves$/i, /(lr)ves$/i, /(^aeiouy|qu)ies$/i, /(m|l)ice$/i, /(cris|ax|test)es$/i, /(alias|status)es$/i, /ics$/i]; //similar to plural/singularize rules, but not the same\n\nvar isSingular = [/(ax|test)is$/i, /(octop|vir|radi|nucle|fung|cact|stimul)us$/i, /(octop|vir)i$/i, /(rl)f$/i, /(alias|status)$/i, /(bu)s$/i, /(al|ad|at|er|et|ed|ad)o$/i, /(ti)um$/i, /(ti)a$/i, /sis$/i, /(?:(^f)fe|(lr)f)$/i, /hive$/i, /s[aeiou]+ns$/i, // sans, siens\n/(^aeiouy|qu)y$/i, /(x|ch|ss|sh|z)$/i, /(matr|vert|ind|cort)(ix|ex)$/i, /(m|l)ouse$/i, /(m|l)ice$/i, /(antenn|formul|nebul|vertebr|vit)a$/i, /.sis$/i, /^(?!talis|.*hu)(.*)man$/i];\nvar isPlural_1 = {\n  isSingular: isSingular,\n  isPlural: isPlural\n};\n\nvar noPlurals = ['Uncountable', 'Pronoun', 'Place', 'Value', 'Person', 'Month', 'WeekDay', 'Holiday'];\nvar notPlural = [/ss$/, /sis$/, /[^aeiou][uo]s$/, /'s$/];\nvar notSingular = [/i$/, /ae$/];\n/** turn nouns into singular/plural */\n\nvar checkPlural = function checkPlural(t, world) {\n  if (t.tags.Noun && !t.tags.Acronym) {\n    var str = t.clean; //skip existing tags, fast\n\n    if (t.tags.Singular || t.tags.Plural) {\n      return;\n    } //too short\n\n\n    if (str.length <= 3) {\n      t.tag('Singular', 'short-singular', world);\n      return;\n    } //is it impossible to be plural?\n\n\n    if (noPlurals.find(function (tag) {\n      return t.tags[tag];\n    })) {\n      return;\n    } // isPlural suffix rules\n\n\n    if (isPlural_1.isPlural.find(function (reg) {\n      return reg.test(str);\n    })) {\n      t.tag('Plural', 'plural-rules', world);\n      return;\n    } // isSingular suffix rules\n\n\n    if (isPlural_1.isSingular.find(function (reg) {\n      return reg.test(str);\n    })) {\n      t.tag('Singular', 'singular-rules', world);\n      return;\n    } // finally, fallback 'looks plural' rules..\n\n\n    if (/s$/.test(str) === true) {\n      //avoid anything too sketchy to be plural\n      if (notPlural.find(function (reg) {\n        return reg.test(str);\n      })) {\n        return;\n      }\n\n      t.tag('Plural', 'plural-fallback', world);\n      return;\n    } //avoid anything too sketchy to be singular\n\n\n    if (notSingular.find(function (reg) {\n      return reg.test(str);\n    })) {\n      return;\n    }\n\n    t.tag('Singular', 'singular-fallback', world);\n  }\n};\n\nvar _04Plurals = checkPlural;\n\n//nouns that also signal the title of an unknown organization\n//todo remove/normalize plural forms\nvar orgWords = ['academy', 'administration', 'agence', 'agences', 'agencies', 'agency', 'airlines', 'airways', 'army', 'assoc', 'associates', 'association', 'assurance', 'authority', 'autorite', 'aviation', 'bank', 'banque', 'board', 'boys', 'brands', 'brewery', 'brotherhood', 'brothers', 'building society', 'bureau', 'cafe', 'caisse', 'capital', 'care', 'cathedral', 'center', 'central bank', 'centre', 'chemicals', 'choir', 'chronicle', 'church', 'circus', 'clinic', 'clinique', 'club', 'co', 'coalition', 'coffee', 'collective', 'college', 'commission', 'committee', 'communications', 'community', 'company', 'comprehensive', 'computers', 'confederation', 'conference', 'conseil', 'consulting', 'containers', 'corporation', 'corps', 'corp', 'council', 'crew', 'daily news', 'data', 'departement', 'department', 'department store', 'departments', 'design', 'development', 'directorate', 'division', 'drilling', 'education', 'eglise', 'electric', 'electricity', 'energy', 'ensemble', 'enterprise', 'enterprises', 'entertainment', 'estate', 'etat', 'evening news', 'faculty', 'federation', 'financial', 'fm', 'foundation', 'fund', 'gas', 'gazette', 'girls', 'government', 'group', 'guild', 'health authority', 'herald', 'holdings', 'hospital', 'hotel', 'hotels', 'inc', 'industries', 'institut', 'institute', 'institute of technology', 'institutes', 'insurance', 'international', 'interstate', 'investment', 'investments', 'investors', 'journal', 'laboratory', 'labs', // 'law',\n'liberation army', 'limited', 'local authority', 'local health authority', 'machines', 'magazine', 'management', 'marine', 'marketing', 'markets', 'media', 'memorial', 'mercantile exchange', 'ministere', 'ministry', 'military', 'mobile', 'motor', 'motors', 'musee', 'museum', // 'network',\n'news', 'news service', 'observatory', 'office', 'oil', 'optical', 'orchestra', 'organization', 'partners', 'partnership', // 'party',\n\"people's party\", 'petrol', 'petroleum', 'pharmacare', 'pharmaceutical', 'pharmaceuticals', 'pizza', 'plc', 'police', 'polytechnic', 'post', 'power', 'press', 'productions', 'quartet', 'radio', 'regional authority', 'regional health authority', 'reserve', 'resources', 'restaurant', 'restaurants', 'savings', 'school', 'securities', 'service', 'services', 'social club', 'societe', 'society', 'sons', 'standard', 'state police', 'state university', 'stock exchange', 'subcommittee', 'syndicat', 'systems', 'telecommunications', 'telegraph', 'television', 'times', 'tribunal', 'tv', 'union', 'university', 'utilities', 'workers'];\nvar organizations = orgWords.reduce(function (h, str) {\n  h[str] = 'Noun';\n  return h;\n}, {});\n\nvar maybeOrg = function maybeOrg(t) {\n  //must be a noun\n  if (!t.tags.Noun) {\n    return false;\n  } //can't be these things\n\n\n  if (t.tags.Pronoun || t.tags.Comma || t.tags.Possessive) {\n    return false;\n  } //must be one of these\n\n\n  if (t.tags.Organization || t.tags.Acronym || t.tags.Place || t.titleCase()) {\n    return true;\n  }\n\n  return false;\n};\n\nvar tagOrgs = function tagOrgs(terms, world) {\n  for (var i = 0; i < terms.length; i += 1) {\n    var t = terms[i];\n\n    if (organizations[t.clean] !== undefined && organizations.hasOwnProperty(t.clean) === true) {\n      // look-backward - eg. 'Toronto University'\n      var lastTerm = terms[i - 1];\n\n      if (lastTerm !== undefined && maybeOrg(lastTerm) === true) {\n        lastTerm.tagSafe('Organization', 'org-word-1', world);\n        t.tagSafe('Organization', 'org-word-2', world);\n        continue;\n      } //look-forward - eg. University of Toronto\n\n\n      var nextTerm = terms[i + 1];\n\n      if (nextTerm !== undefined && nextTerm.clean === 'of') {\n        if (terms[i + 2] && maybeOrg(terms[i + 2])) {\n          t.tagSafe('Organization', 'org-of-word-1', world);\n          nextTerm.tagSafe('Organization', 'org-of-word-2', world);\n          terms[i + 2].tagSafe('Organization', 'org-of-word-3', world);\n          continue;\n        }\n      }\n    }\n  }\n};\n\nvar _05Organizations = tagOrgs;\n\nvar oneLetterAcronym$1 = /^[A-Z]('s|,)?$/;\nvar periodSeperated = /([A-Z]\\.){2}[A-Z]?/i;\nvar oneLetterWord = {\n  I: true,\n  A: true\n};\n\nvar isAcronym$2 = function isAcronym(term, world) {\n  var str = term.reduced; // a known acronym like fbi\n\n  if (term.tags.Acronym) {\n    return true;\n  } // if (term.tags.Adverb || term.tags.Verb || term.tags.Value || term.tags.Plural) {\n  //   return false\n  // }\n  // known-words, like 'PIZZA' is not an acronym.\n\n\n  if (world.words[str]) {\n    return false;\n  }\n\n  return term.isAcronym();\n}; // F.B.I., NBC, - but not 'NO COLLUSION'\n\n\nvar checkAcronym = function checkAcronym(terms, world) {\n  terms.forEach(function (term) {\n    //these are not acronyms\n    if (term.tags.RomanNumeral === true) {\n      return;\n    } //period-ones F.D.B.\n\n\n    if (periodSeperated.test(term.text) === true) {\n      term.tag('Acronym', 'period-acronym', world);\n    } //non-period ones are harder\n\n\n    if (term.isUpperCase() && isAcronym$2(term, world)) {\n      term.tag('Acronym', 'acronym-step', world);\n      term.tag('Noun', 'acronym-infer', world);\n    } else if (!oneLetterWord.hasOwnProperty(term.text) && oneLetterAcronym$1.test(term.text)) {\n      term.tag('Acronym', 'one-letter-acronym', world);\n      term.tag('Noun', 'one-letter-infer', world);\n    } //if it's a organization,\n\n\n    if (term.tags.Organization && term.text.length <= 3) {\n      term.tag('Acronym', 'acronym-org', world);\n    }\n\n    if (term.tags.Organization && term.isUpperCase() && term.text.length <= 6) {\n      term.tag('Acronym', 'acronym-org-case', world);\n    }\n  });\n};\n\nvar _06Acronyms = checkAcronym;\n\nvar step = {\n  neighbours: _01Neighbours,\n  \"case\": _02Case,\n  stem: _03Stem,\n  plural: _04Plurals,\n  organizations: _05Organizations,\n  acronyms: _06Acronyms\n}; //\n\nvar fallbacks = function fallbacks(doc, terms) {\n  var world = doc.world; // if it's empty, consult it's neighbours, first\n\n  step.neighbours(terms, world); // is there a case-sensitive clue?\n\n  step[\"case\"](doc); // check 'rewatch' as 'watch'\n\n  step.stem(terms, world); // ... fallback to a noun!\n\n  terms.forEach(function (t) {\n    if (t.isKnown() === false) {\n      t.tag('Noun', 'noun-fallback', doc.world);\n    }\n  }); // turn 'Foo University' into an Org\n\n  step.organizations(terms, world); //turn 'FBD' into an acronym\n\n  step.acronyms(terms, world); //are the nouns singular or plural?\n\n  terms.forEach(function (t) {\n    step.plural(t, doc.world);\n  });\n  return doc;\n};\n\nvar _02Fallbacks = fallbacks;\n\nvar hasNegative = /n't$/;\nvar irregulars$3 = {\n  \"won't\": ['will', 'not'],\n  wont: ['will', 'not'],\n  \"can't\": ['can', 'not'],\n  cant: ['can', 'not'],\n  cannot: ['can', 'not'],\n  \"shan't\": ['should', 'not'],\n  dont: ['do', 'not'],\n  dun: ['do', 'not'] // \"ain't\" is ambiguous for is/was\n\n}; // either 'is not' or 'are not'\n\nvar doAint = function doAint(term, phrase) {\n  var terms = phrase.terms();\n  var index = terms.indexOf(term);\n  var before = terms.slice(0, index); //look for the preceding noun\n\n  var noun = before.find(function (t) {\n    return t.tags.Noun;\n  });\n\n  if (noun && noun.tags.Plural) {\n    return ['are', 'not'];\n  }\n\n  return ['is', 'not'];\n};\n\nvar checkNegative = function checkNegative(term, phrase) {\n  //check named-ones\n  if (irregulars$3.hasOwnProperty(term.clean) === true) {\n    return irregulars$3[term.clean];\n  } //this word needs it's own logic:\n\n\n  if (term.clean === \"ain't\" || term.clean === 'aint') {\n    return doAint(term, phrase);\n  } //try it normally\n\n\n  if (hasNegative.test(term.clean) === true) {\n    var main = term.clean.replace(hasNegative, '');\n    return [main, 'not'];\n  }\n\n  return null;\n};\n\nvar _01Negative = checkNegative;\n\nvar contraction = /([a-z\\u00C0-\\u00FF]+)[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]([a-z]{1,2})$/i; //these ones don't seem to be ambiguous\n\nvar easy = {\n  ll: 'will',\n  ve: 'have',\n  re: 'are',\n  m: 'am',\n  \"n't\": 'not'\n}; //\n\nvar checkApostrophe = function checkApostrophe(term) {\n  var parts = term.text.match(contraction);\n\n  if (parts === null) {\n    return null;\n  }\n\n  if (easy.hasOwnProperty(parts[2])) {\n    return [parts[1], easy[parts[2]]];\n  }\n\n  return null;\n};\n\nvar _02Simple = checkApostrophe;\n\nvar irregulars$4 = {\n  wanna: ['want', 'to'],\n  gonna: ['going', 'to'],\n  im: ['i', 'am'],\n  alot: ['a', 'lot'],\n  ive: ['i', 'have'],\n  imma: ['I', 'will'],\n  \"where'd\": ['where', 'did'],\n  whered: ['where', 'did'],\n  \"when'd\": ['when', 'did'],\n  whend: ['when', 'did'],\n  // \"how'd\": ['how', 'did'], //'how would?'\n  // \"what'd\": ['what', 'did'], //'what would?'\n  howd: ['how', 'did'],\n  whatd: ['what', 'did'],\n  // \"let's\": ['let', 'us'], //too weird\n  //multiple word contractions\n  dunno: ['do', 'not', 'know'],\n  brb: ['be', 'right', 'back'],\n  gtg: ['got', 'to', 'go'],\n  irl: ['in', 'real', 'life'],\n  tbh: ['to', 'be', 'honest'],\n  imo: ['in', 'my', 'opinion'],\n  til: ['today', 'i', 'learned'],\n  rn: ['right', 'now'],\n  twas: ['it', 'was'],\n  '@': ['at']\n}; //\n\nvar checkIrregulars = function checkIrregulars(term) {\n  //check white-list\n  if (irregulars$4.hasOwnProperty(term.clean)) {\n    return irregulars$4[term.clean];\n  }\n\n  return null;\n};\n\nvar _03Irregulars = checkIrregulars;\n\nvar hasApostropheS = /([a-z\\u00C0-\\u00FF]+)[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]s$/i;\nvar banList = {\n  that: true,\n  there: true\n};\n\nvar isPossessive = function isPossessive(term, pool) {\n  // if we already know it\n  if (term.tags.Possessive) {\n    return true;\n  } //a pronoun can't be possessive - \"he's house\"\n\n\n  if (term.tags.Pronoun || term.tags.QuestionWord) {\n    return false;\n  }\n\n  if (banList.hasOwnProperty(term.reduced)) {\n    return false;\n  } //if end of sentence, it is possessive - \"was spencer's\"\n\n\n  var nextTerm = pool.get(term.next);\n\n  if (!nextTerm) {\n    return true;\n  } //a gerund suggests 'is walking'\n\n\n  if (nextTerm.tags.Verb) {\n    //fix 'jamie's bite'\n    if (nextTerm.tags.Infinitive) {\n      return true;\n    } //fix 'spencer's runs'\n\n\n    if (nextTerm.tags.PresentTense) {\n      return true;\n    }\n\n    return false;\n  } //spencer's house\n\n\n  if (nextTerm.tags.Noun) {\n    return true;\n  } //rocket's red glare\n\n\n  var twoTerm = pool.get(nextTerm.next);\n\n  if (twoTerm && twoTerm.tags.Noun && !twoTerm.tags.Pronoun) {\n    return true;\n  } //othwerwise, an adjective suggests 'is good'\n\n\n  if (nextTerm.tags.Adjective || nextTerm.tags.Adverb || nextTerm.tags.Verb) {\n    return false;\n  }\n\n  return false;\n};\n\nvar isHas = function isHas(term, phrase) {\n  var terms = phrase.terms();\n  var index = terms.indexOf(term);\n  var after = terms.slice(index + 1, index + 3); //look for a past-tense verb\n\n  return after.find(function (t) {\n    return t.tags.PastTense;\n  });\n};\n\nvar checkPossessive = function checkPossessive(term, phrase, world) {\n  //the rest of 's\n  var found = term.text.match(hasApostropheS);\n\n  if (found !== null) {\n    //spencer's thing vs spencer-is\n    if (isPossessive(term, phrase.pool) === true) {\n      term.tag('#Possessive', 'isPossessive', world);\n      return null;\n    } //'spencer is'\n\n\n    if (found !== null) {\n      if (isHas(term, phrase)) {\n        return [found[1], 'has'];\n      }\n\n      return [found[1], 'is'];\n    }\n  }\n\n  return null;\n};\n\nvar _04Possessive = checkPossessive;\n\nvar hasPerfect = /[a-z\\u00C0-\\u00FF]'d$/;\nvar useDid = {\n  how: true,\n  what: true\n};\n/** split `i'd` into 'i had',  or 'i would'  */\n\nvar checkPerfect = function checkPerfect(term, phrase) {\n  if (hasPerfect.test(term.clean)) {\n    var root = term.clean.replace(/'d$/, ''); //look at the next few words\n\n    var terms = phrase.terms();\n    var index = terms.indexOf(term);\n    var after = terms.slice(index + 1, index + 4); //is it before a past-tense verb? - 'i'd walked'\n\n    for (var i = 0; i < after.length; i++) {\n      var t = after[i];\n\n      if (t.tags.Verb) {\n        if (t.tags.PastTense) {\n          return [root, 'had'];\n        } //what'd you see\n\n\n        if (useDid[root] === true) {\n          return [root, 'did'];\n        }\n\n        return [root, 'would'];\n      }\n    } //otherwise, 'i'd walk'\n\n\n    return [root, 'would'];\n  }\n\n  return null;\n};\n\nvar _05PerfectTense = checkPerfect;\n\nvar isRange = /^([0-9]+)[-–—]([0-9]+)$/i; //split '2-4' into '2 to 4'\n\nvar checkRange = function checkRange(term) {\n  if (term.tags.PhoneNumber === true) {\n    return null;\n  }\n\n  var parts = term.text.match(isRange);\n\n  if (parts !== null) {\n    return [parts[1], 'to', parts[2]];\n  }\n\n  return null;\n};\n\nvar _06Ranges = checkRange;\n\nvar contraction$1 = /^(l|c|d|j|m|n|qu|s|t)[\\u0027\\u0060\\u00B4\\u2018\\u2019\\u201A\\u201B\\u2032\\u2035\\u2039\\u203A]([a-z\\u00C0-\\u00FF]+)$/i; // basic support for ungendered french contractions\n// not perfect, but better than nothing, to support matching on french text.\n\nvar french = {\n  l: 'le',\n  // l'amour\n  c: 'ce',\n  // c'est\n  d: 'de',\n  // d'amerique\n  j: 'je',\n  // j'aime\n  m: 'me',\n  // m'appelle\n  n: 'ne',\n  // n'est\n  qu: 'que',\n  // qu'il\n  s: 'se',\n  // s'appelle\n  t: 'tu' // t'aime\n\n};\n\nvar checkFrench = function checkFrench(term) {\n  var parts = term.text.match(contraction$1);\n\n  if (parts === null || french.hasOwnProperty(parts[1]) === false) {\n    return null;\n  }\n\n  var arr = [french[parts[1]], parts[2]];\n\n  if (arr[0] && arr[1]) {\n    return arr;\n  }\n\n  return null;\n};\n\nvar _07French = checkFrench;\n\nvar isNumber = /^[0-9]+$/;\n\nvar createPhrase = function createPhrase(found, doc) {\n  //create phrase from ['would', 'not']\n  var phrase = _01Tokenizer(found.join(' '), doc.world, doc.pool())[0]; //tag it\n\n  var terms = phrase.terms();\n  _01Lexicon(terms, doc.world); //make these terms implicit\n\n  terms.forEach(function (t) {\n    t.implicit = t.text;\n    t.text = '';\n    t.clean = ''; // remove whitespace for implicit terms\n\n    t.pre = '';\n    t.post = ''; // tag number-ranges\n\n    if (isNumber.test(t.implicit)) {\n      t.tags.Number = true;\n      t.tags.Cardinal = true;\n    }\n  });\n  return phrase;\n};\n\nvar contractions = function contractions(doc) {\n  var world = doc.world;\n  doc.list.forEach(function (p) {\n    var terms = p.terms();\n\n    for (var i = 0; i < terms.length; i += 1) {\n      var term = terms[i];\n      var found = _01Negative(term, p);\n      found = found || _02Simple(term);\n      found = found || _03Irregulars(term);\n      found = found || _04Possessive(term, p, world);\n      found = found || _05PerfectTense(term, p);\n      found = found || _06Ranges(term);\n      found = found || _07French(term); //add them in\n\n      if (found !== null) {\n        var newPhrase = createPhrase(found, doc); // keep tag NumberRange, if we had it\n\n        if (p.has('#NumberRange') === true) {\n          doc.buildFrom([newPhrase]).tag('NumberRange');\n        } //set text as contraction\n\n\n        var firstTerm = newPhrase.terms(0);\n        firstTerm.text = term.text; //grab sub-phrase to remove\n\n        var match = p.buildFrom(term.id, 1, doc.pool());\n        match.replace(newPhrase, doc, true);\n      }\n    }\n  });\n  return doc;\n};\n\nvar _03Contractions = contractions;\n\nvar hasWord = function hasWord(doc, word) {\n  var arr = doc._cache.words[word] || [];\n  arr = arr.map(function (i) {\n    return doc.list[i];\n  });\n  return doc.buildFrom(arr);\n};\n\nvar hasTag = function hasTag(doc, tag) {\n  var arr = doc._cache.tags[tag] || [];\n  arr = arr.map(function (i) {\n    return doc.list[i];\n  });\n  return doc.buildFrom(arr);\n}; //mostly pos-corections here\n\n\nvar miscCorrection = function miscCorrection(doc) {\n  //exactly like\n  var m = hasWord(doc, 'like');\n  m.match('#Adverb like').notIf('(really|generally|typically|usually|sometimes|often) [like]').tag('Adverb', 'adverb-like'); //the orange.\n\n  m = hasTag(doc, 'Adjective');\n  m.match('#Determiner #Adjective$').notIf('(#Comparative|#Superlative)').terms(1).tag('Noun', 'the-adj-1'); // Firstname x (dangerous)\n\n  m = hasTag(doc, 'FirstName');\n  m.match('#FirstName (#Noun|@titleCase)').ifNo('^#Possessive').ifNo('#Pronoun').lastTerm().tag('#LastName', 'firstname-noun'); //three trains / one train\n\n  m = hasTag(doc, 'Value');\n  m = m.match('#Value #PresentTense');\n\n  if (m.found) {\n    if (m.has('(one|1)') === true) {\n      m.terms(1).tag('Singular', 'one-presentTense');\n    } else {\n      m.terms(1).tag('Plural', 'value-presentTense');\n    }\n  } // well i've been...\n\n\n  doc.match('^(well|so|okay)').tag('Expression', 'well-'); //been walking\n\n  m = hasTag(doc, 'Gerund');\n  m.match(\"(be|been) (#Adverb|not)+? #Gerund\").not('#Verb$').tag('Auxiliary', 'be-walking'); // directive verb - 'use reverse'\n\n  doc.match('(try|use|attempt|build|make) #Verb').ifNo('(@hasComma|#Negative|#Copula|will|be)').lastTerm().tag('#Noun', 'do-verb'); //possessives\n  //'her match' vs 'let her match'\n\n  m = hasTag(doc, 'Possessive');\n  m = m.match('#Possessive [#Infinitive]', 0);\n\n  if (!m.lookBehind('(let|made|make|force|ask)').found) {\n    m.tag('Noun', 'her-match');\n  }\n\n  return doc;\n};\n\nvar fixMisc = miscCorrection;\n\nvar unique$5 = function unique(arr) {\n  var obj = {};\n\n  for (var i = 0; i < arr.length; i++) {\n    obj[arr[i]] = true;\n  }\n\n  return Object.keys(obj);\n};\n\nvar _unique = unique$5;\n\n// order matters\nvar list = [// ==== Mutliple tags ====\n{\n  match: 'too much',\n  tag: 'Adverb Adjective',\n  reason: 'bit-4'\n}, // u r cool\n{\n  match: 'u r',\n  tag: 'Pronoun Copula',\n  reason: 'u r'\n}, //sometimes adverbs - 'pretty good','well above'\n{\n  match: '#Copula (pretty|dead|full|well) (#Adjective|#Noun)',\n  tag: '#Copula #Adverb #Adjective',\n  reason: 'sometimes-adverb'\n}, //walking is cool\n{\n  match: '[#Gerund] #Adverb? not? #Copula',\n  group: 0,\n  tag: 'Activity',\n  reason: 'gerund-copula'\n}, //walking should be fun\n{\n  match: '[#Gerund] #Modal',\n  group: 0,\n  tag: 'Activity',\n  reason: 'gerund-modal'\n}, //swear-words as non-expression POS\n{\n  match: 'holy (shit|fuck|hell)',\n  tag: 'Expression',\n  reason: 'swears-expression'\n}, //Aircraft designer\n{\n  match: '#Noun #Actor',\n  tag: 'Actor',\n  reason: 'thing-doer'\n}, {\n  match: '#Conjunction [u]',\n  group: 0,\n  tag: 'Pronoun',\n  reason: 'u-pronoun-2'\n}, //'u' as pronoun\n{\n  match: '[u] #Verb',\n  group: 0,\n  tag: 'Pronoun',\n  reason: 'u-pronoun-1'\n}, // ==== Determiners ====\n{\n  match: '#Noun [(who|whom)]',\n  group: 0,\n  tag: 'Determiner',\n  reason: 'captain-who'\n}, //that car goes\n{\n  match: 'that #Noun [#Verb]',\n  group: 0,\n  tag: 'Determiner',\n  reason: 'that-determiner'\n}, {\n  match: 'a bit much',\n  tag: 'Determiner Adverb Adjective',\n  reason: 'bit-3'\n}, // ==== Propositions ====\n//all students\n{\n  match: '#Verb #Adverb? #Noun [(that|which)]',\n  group: 0,\n  tag: 'Preposition',\n  reason: 'that-prep'\n}, //work, which has been done.\n{\n  match: '@hasComma [which] (#Pronoun|#Verb)',\n  group: 0,\n  tag: 'Preposition',\n  reason: 'which-copula'\n}, {\n  match: 'just [like]',\n  group: 0,\n  tag: 'Preposition',\n  reason: 'like-preposition'\n}, //folks like her\n{\n  match: '#Noun [like] #Noun',\n  group: 0,\n  tag: 'Preposition',\n  reason: 'noun-like'\n}, //fix for busted-up phrasalVerbs\n{\n  match: '#Noun [#Particle]',\n  group: 0,\n  tag: 'Preposition',\n  reason: 'repair-noPhrasal'\n}, // ==== Conditions ====\n// had he survived,\n{\n  match: '[had] #Noun+ #PastTense',\n  group: 0,\n  tag: 'Condition',\n  reason: 'had-he'\n}, // were he to survive\n{\n  match: '[were] #Noun+ to #Infinitive',\n  group: 0,\n  tag: 'Condition',\n  reason: 'were-he'\n}, // ==== Questions ====\n//the word 'how'\n{\n  match: '^how',\n  tag: 'QuestionWord',\n  reason: 'how-question'\n}, {\n  match: '[how] (#Determiner|#Copula|#Modal|#PastTense)',\n  group: 0,\n  tag: 'QuestionWord',\n  reason: 'how-is'\n}, // //the word 'which'\n{\n  match: '^which',\n  tag: 'QuestionWord',\n  reason: 'which-question'\n}, {\n  match: '[which] . (#Noun)+ #Pronoun',\n  group: 0,\n  tag: 'QuestionWord',\n  reason: 'which-question2'\n}, // { match: 'which', tag: 'QuestionWord', reason: 'which-question3' },\n// ==== Conjunctions ====\n{\n  match: '[so] #Noun',\n  group: 0,\n  tag: 'Conjunction',\n  reason: 'so-conj'\n}, //how he is driving\n{\n  match: '[(who|what|where|why|how|when)] #Noun #Copula #Adverb? (#Verb|#Adjective)',\n  group: 0,\n  tag: 'Conjunction',\n  reason: 'how-he-is-x'\n}, {\n  match: '[(who|what|where|why|how|when)] #Noun #Adverb? #Infinitive not? #Gerund',\n  group: 0,\n  tag: 'Conjunction',\n  reason: 'when i go fishing'\n}];\nvar _01Misc = list;\n\n//Dates: 'june' or 'may'\nvar dates = '(april|june|may|jan|august|eve)';\nvar list$1 = [// ==== Holiday ====\n{\n  match: '#Holiday (day|eve)',\n  tag: 'Holiday',\n  reason: 'holiday-day'\n}, // the captain who\n// ==== WeekDay ====\n// sun the 5th\n{\n  match: '[sun] the #Ordinal',\n  tag: 'WeekDay',\n  reason: 'sun-the-5th'\n}, //sun feb 2\n{\n  match: '[sun] #Date',\n  group: 0,\n  tag: 'WeekDay',\n  reason: 'sun-feb'\n}, //1pm next sun\n{\n  match: '#Date (on|this|next|last|during)? [sun]',\n  group: 0,\n  tag: 'WeekDay',\n  reason: '1pm-sun'\n}, //this sat\n{\n  match: \"(in|by|before|during|on|until|after|of|within|all) [sat]\",\n  group: 0,\n  tag: 'WeekDay',\n  reason: 'sat'\n}, //sat november\n{\n  match: '[sat] #Date',\n  group: 0,\n  tag: 'WeekDay',\n  reason: 'sat-feb'\n}, // ==== Month ====\n//all march\n{\n  match: \"#Preposition [(march|may)]\",\n  group: 0,\n  tag: 'Month',\n  reason: 'in-month'\n}, //this march\n{\n  match: \"this [(march|may)]\",\n  group: 0,\n  tag: 'Month',\n  reason: 'this-month'\n}, {\n  match: \"next [(march|may)]\",\n  group: 0,\n  tag: 'Month',\n  reason: 'this-month'\n}, {\n  match: \"last [(march|may)]\",\n  group: 0,\n  tag: 'Month',\n  reason: 'this-month'\n}, // march 5th\n{\n  match: \"[(march|may)] the? #Value\",\n  group: 0,\n  tag: 'Month',\n  reason: 'march-5th'\n}, // 5th of march\n{\n  match: \"#Value of? [(march|may)]\",\n  group: 0,\n  tag: 'Month',\n  reason: '5th-of-march'\n}, // march and feb\n{\n  match: \"[(march|may)] .? #Date\",\n  group: 0,\n  tag: 'Month',\n  reason: 'march-and-feb'\n}, // feb to march\n{\n  match: \"#Date .? [(march|may)]\",\n  group: 0,\n  tag: 'Month',\n  reason: 'feb-and-march'\n}, //quickly march\n{\n  match: \"#Adverb [(march|may)]\",\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'quickly-march'\n}, //march quickly\n{\n  match: \"(march|may) [#Adverb]\",\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'march-quickly'\n}, //5th of March\n{\n  match: '#Value of #Month',\n  tag: 'Date',\n  reason: 'value-of-month'\n}, //5 March\n{\n  match: '#Cardinal #Month',\n  tag: 'Date',\n  reason: 'cardinal-month'\n}, //march 5 to 7\n{\n  match: '#Month #Value to #Value',\n  tag: 'Date',\n  reason: 'value-to-value'\n}, //march the 12th\n{\n  match: '#Month the #Value',\n  tag: 'Date',\n  reason: 'month-the-value'\n}, //june 7\n{\n  match: '(#WeekDay|#Month) #Value',\n  tag: 'Date',\n  reason: 'date-value'\n}, //7 june\n{\n  match: '#Value (#WeekDay|#Month)',\n  tag: 'Date',\n  reason: 'value-date'\n}, //may twenty five\n{\n  match: '(#TextValue && #Date) #TextValue',\n  tag: 'Date',\n  reason: 'textvalue-date'\n}, // in june\n{\n  match: \"in [\".concat(dates, \"]\"),\n  group: 0,\n  tag: 'Date',\n  reason: 'in-june'\n}, {\n  match: \"during [\".concat(dates, \"]\"),\n  group: 0,\n  tag: 'Date',\n  reason: 'in-june'\n}, {\n  match: \"on [\".concat(dates, \"]\"),\n  group: 0,\n  tag: 'Date',\n  reason: 'in-june'\n}, {\n  match: \"by [\".concat(dates, \"]\"),\n  group: 0,\n  tag: 'Date',\n  reason: 'in-june'\n}, {\n  match: \"before [\".concat(dates, \"]\"),\n  group: 0,\n  tag: 'Date',\n  reason: 'in-june'\n}, {\n  match: \"#Date [\".concat(dates, \"]\"),\n  group: 0,\n  tag: 'Date',\n  reason: 'in-june'\n}, // june 1992\n{\n  match: \"\".concat(dates, \" #Value\"),\n  tag: 'Date',\n  reason: 'june-5th'\n}, {\n  match: \"\".concat(dates, \" #Date\"),\n  tag: 'Date',\n  reason: 'june-5th'\n}, // June Smith\n{\n  match: \"\".concat(dates, \" #ProperNoun\"),\n  tag: 'Person',\n  reason: 'june-smith',\n  safe: true\n}, // june m. Cooper\n{\n  match: \"\".concat(dates, \" #Acronym? (#ProperNoun && !#Month)\"),\n  tag: 'Person',\n  reason: 'june-smith-jr'\n}, // 'second'\n{\n  match: \"#Cardinal [second]\",\n  tag: 'Unit',\n  reason: 'one-second'\n}];\nvar _02Dates = list$1;\n\nvar _03Noun = [// ==== Plural ====\n//there are reasons\n{\n  match: 'there (are|were) #Adjective? [#PresentTense]',\n  group: 0,\n  tag: 'Plural',\n  reason: 'there-are'\n}, // ==== Singular ====\n//the sun\n{\n  match: '#Determiner [sun]',\n  group: 0,\n  tag: 'Singular',\n  reason: 'the-sun'\n}, //did a 900, paid a 20\n{\n  match: '#Verb (a|an) [#Value]',\n  group: 0,\n  tag: 'Singular',\n  reason: 'did-a-value'\n}, //'the can'\n{\n  match: '#Determiner [(can|will|may)]',\n  group: 0,\n  tag: 'Singular',\n  reason: 'the can'\n}, // ==== Possessive ====\n//spencer kelly's\n{\n  match: '#FirstName #Acronym? (#Possessive && #LastName)',\n  tag: 'Possessive',\n  reason: 'name-poss'\n}, //Super Corp's fundraiser\n{\n  match: '#Organization+ #Possessive',\n  tag: 'Possessive',\n  reason: 'org-possessive'\n}, //Los Angeles's fundraiser\n{\n  match: '#Place+ #Possessive',\n  tag: 'Possessive',\n  reason: 'place-possessive'\n}, //big dreams, critical thinking\n{\n  match: '#Adjective [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'adj-presentTense'\n}, //his fine\n{\n  match: '(his|her|its) [#Adjective]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'his-fine'\n}, //some pressing issues\n{\n  match: 'some [#Verb] #Plural',\n  group: 0,\n  tag: 'Noun',\n  reason: 'determiner6'\n}, //'more' is not always an adverb\n{\n  match: 'more #Noun',\n  tag: 'Noun',\n  reason: 'more-noun'\n}, {\n  match: '(#Noun && @hasComma) #Noun (and|or) [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'noun-list'\n}, //3 feet\n{\n  match: '(right|rights) of .',\n  tag: 'Noun',\n  reason: 'right-of'\n}, // a bit\n{\n  match: 'a [bit]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'bit-2'\n}, //running-a-show\n{\n  match: '#Gerund #Determiner [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'running-a-show'\n}, //the-only-reason\n{\n  match: '#Determiner #Adverb [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-reason'\n}, //the nice swim\n{\n  match: '(the|this|those|these) #Adjective [#Verb]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-adj-verb'\n}, // the truly nice swim\n{\n  match: '(the|this|those|these) #Adverb #Adjective [#Verb]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'determiner4'\n}, //the orange is\n{\n  match: '#Determiner [#Adjective] (#Copula|#PastTense|#Auxiliary)',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-adj-2'\n}, // a stream runs\n{\n  match: '(the|this|a|an) [#Infinitive] #Adverb? #Verb',\n  group: 0,\n  tag: 'Noun',\n  reason: 'determiner5'\n}, //the test string\n{\n  match: '#Determiner [#Infinitive] #Noun',\n  group: 0,\n  tag: 'Noun',\n  reason: 'determiner7'\n}, //by a bear.\n{\n  match: '#Determiner #Adjective [#Infinitive]$',\n  group: 0,\n  tag: 'Noun',\n  reason: 'a-inf'\n}, //the wait to vote\n{\n  match: '(the|this) [#Verb] #Preposition .',\n  group: 0,\n  tag: 'Noun',\n  reason: 'determiner1'\n}, //a sense of\n{\n  match: '#Determiner [#Verb] of',\n  group: 0,\n  tag: 'Noun',\n  reason: 'the-verb-of'\n}, //the threat of force\n{\n  match: '#Determiner #Noun of [#Verb]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'noun-of-noun'\n}, //the western line\n{\n  match: '#Determiner [(western|eastern|northern|southern|central)] #Noun',\n  group: 0,\n  tag: 'Noun',\n  reason: 'western-line'\n}, //her polling\n{\n  match: '#Possessive [#Gerund]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'her-polling'\n}, //her fines\n{\n  match: '(his|her|its) [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'its-polling'\n}, //linear algebra\n{\n  match: '(#Determiner|#Value) [(linear|binary|mobile|lexical|technical|computer|scientific|formal)] #Noun',\n  group: 0,\n  tag: 'Noun',\n  reason: 'technical-noun'\n}, // walk the walk\n{\n  match: '(the|those|these) #Adjective? [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'det-inf'\n}, {\n  match: '(the|those|these) #Adjective? [#PresentTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'det-pres'\n}, {\n  match: '(the|those|these) #Adjective? [#PastTense]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'det-past'\n}, //air-flow\n{\n  match: '(#Noun && @hasHyphen) #Verb',\n  tag: 'Noun',\n  reason: 'hyphen-verb'\n}, //is no walk\n{\n  match: 'is no [#Verb]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'is-no-verb'\n}, //different views than\n{\n  match: '[#Verb] than',\n  group: 0,\n  tag: 'Noun',\n  reason: 'correction'\n}, // goes to sleep\n{\n  match: '(go|goes|went) to [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'goes-to-verb'\n}, //a great run\n{\n  match: '(a|an) #Adjective [(#Infinitive|#PresentTense)]',\n  tag: 'Noun',\n  reason: 'a|an2'\n}, //a tv show\n{\n  match: '(a|an) #Noun [#Infinitive]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'a-noun-inf'\n}, //do so\n{\n  match: 'do [so]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'so-noun'\n}, //is mark hughes\n{\n  match: '#Copula [#Infinitive] #Noun',\n  group: 0,\n  tag: 'Noun',\n  reason: 'is-pres-noun'\n}, //\n// { match: '[#Infinitive] #Copula', group: 0, tag: 'Noun', reason: 'inf-copula' },\n//a close\n{\n  match: '#Determiner #Adverb? [close]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'a-close'\n}, // what the hell\n{\n  match: '#Determiner [(shit|damn|hell)]',\n  group: 0,\n  tag: 'Noun',\n  reason: 'swears-noun'\n}];\n\nvar adjectives$1 = '(misty|rusty|dusty|rich|randy)';\nvar list$2 = [// all fell apart\n{\n  match: '[all] #Determiner? #Noun',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'all-noun'\n}, // very rusty\n{\n  match: \"#Adverb [\".concat(adjectives$1, \"]\"),\n  group: 0,\n  tag: 'Adjective',\n  reason: 'really-rich'\n}, // rusty smith\n{\n  match: \"\".concat(adjectives$1, \" #Person\"),\n  tag: 'Person',\n  reason: 'randy-smith'\n}, // rusty a. smith\n{\n  match: \"\".concat(adjectives$1, \" #Acronym? #ProperNoun\"),\n  tag: 'Person',\n  reason: 'rusty-smith'\n}, //sometimes not-adverbs\n{\n  match: '#Copula [(just|alone)]$',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'not-adverb'\n}, //jack is guarded\n{\n  match: '#Singular is #Adverb? [#PastTense$]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'is-filled'\n}, // smoked poutine is\n{\n  match: '[#PastTense] #Singular is',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'smoked-poutine'\n}, // baked onions are\n{\n  match: '[#PastTense] #Plural are',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'baked-onions'\n}, //a staggering cost\n{\n  match: '(a|an) [#Gerund]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'a|an'\n}, // is f*ed up\n{\n  match: '#Copula [fucked up?]',\n  tag: 'Adjective',\n  reason: 'swears-adjective'\n}, //jack seems guarded\n{\n  match: '#Singular (seems|appears) #Adverb? [#PastTense$]',\n  group: 0,\n  tag: 'Adjective',\n  reason: 'seems-filled'\n}];\nvar _04Adjective = list$2;\n\nvar _05Adverb = [//still good\n{\n  match: '[still] #Adjective',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'still-advb'\n}, //still make\n{\n  match: '[still] #Verb',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'still-verb'\n}, // so hot\n{\n  match: '[so] #Adjective',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'so-adv'\n}, // all singing\n{\n  match: '[all] #Verb',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'all-verb'\n}, // sing like an angel\n{\n  match: '#Verb [like]',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'verb-like'\n}, //barely even walk\n{\n  match: '(barely|hardly) even',\n  tag: 'Adverb',\n  reason: 'barely-even'\n}, //cheering hard - dropped -ly's\n{\n  match: '#PresentTense [(hard|quick|long|bright|slow)]',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'lazy-ly'\n}, // much appreciated\n{\n  match: '[much] #Adjective',\n  group: 0,\n  tag: 'Adverb',\n  reason: 'bit-1'\n}];\n\nvar _06Value = [// ==== PhoneNumber ====\n//1 800 ...\n{\n  match: '1 #Value #PhoneNumber',\n  tag: 'PhoneNumber',\n  reason: '1-800-Value'\n}, //(454) 232-9873\n{\n  match: '#NumericValue #PhoneNumber',\n  tag: 'PhoneNumber',\n  reason: '(800) PhoneNumber'\n}, // ==== Currency ====\n// chinese yuan\n{\n  match: '#Demonym #Currency',\n  tag: 'Currency',\n  reason: 'demonym-currency'\n}, // ==== Ordinal ====\n{\n  match: '[second] #Noun',\n  group: 0,\n  tag: 'Ordinal',\n  reason: 'second-noun'\n}, // ==== Unit ====\n//5 yan\n{\n  match: '#Value+ [#Currency]',\n  group: 0,\n  tag: 'Unit',\n  reason: '5-yan'\n}, {\n  match: '#Value [(foot|feet)]',\n  group: 0,\n  tag: 'Unit',\n  reason: 'foot-unit'\n}, //minus 7\n{\n  match: '(minus|negative) #Value',\n  tag: 'Value',\n  reason: 'minus-value'\n}, //5 kg.\n{\n  match: '#Value [#Abbreviation]',\n  group: 0,\n  tag: 'Unit',\n  reason: 'value-abbr'\n}, {\n  match: '#Value [k]',\n  group: 0,\n  tag: 'Unit',\n  reason: 'value-k'\n}, {\n  match: '#Unit an hour',\n  tag: 'Unit',\n  reason: 'unit-an-hour'\n}, //seven point five\n{\n  match: '#Value (point|decimal) #Value',\n  tag: 'Value',\n  reason: 'value-point-value'\n}, // ten bucks\n{\n  match: '(#Value|a) [(buck|bucks|grand)]',\n  group: 0,\n  tag: 'Currency',\n  reason: 'value-bucks'\n}, //quarter million\n{\n  match: '#Determiner [(half|quarter)] #Ordinal',\n  group: 0,\n  tag: 'Value',\n  reason: 'half-ordinal'\n}, {\n  match: 'a #Value',\n  tag: 'Value',\n  reason: 'a-value'\n}, // ==== Money ====\n{\n  match: '[#Value+] #Currency',\n  group: 0,\n  tag: 'Money',\n  reason: '15 usd'\n}, // thousand and two\n{\n  match: \"(hundred|thousand|million|billion|trillion|quadrillion)+ and #Value\",\n  tag: 'Value',\n  reason: 'magnitude-and-value'\n}, //'a/an' can mean 1 - \"a hour\"\n{\n  match: '[(a|an)] (#Duration|hundred|thousand|million|billion|trillion)',\n  group: 0,\n  tag: 'Value',\n  reason: 'a-is-one'\n}];\n\nvar verbs$1 = '(pat|wade|ollie|will|rob|buck|bob|mark|jack)';\nvar list$3 = [// ==== Tense ====\n//he left\n{\n  match: '#Noun #Adverb? [left]',\n  group: 0,\n  tag: 'PastTense',\n  reason: 'left-verb'\n}, //this rocks\n{\n  match: '(this|that) [#Plural]',\n  group: 0,\n  tag: 'PresentTense',\n  reason: 'this-verbs'\n}, // ==== Auxiliary ====\n//was walking\n{\n  match: \"[#Copula (#Adverb|not)+?] (#Gerund|#PastTense)\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'copula-walking'\n}, //support a splattering of auxillaries before a verb\n{\n  match: \"[(has|had) (#Adverb|not)+?] #PastTense\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'had-walked'\n}, //would walk\n{\n  match: \"[(#Modal|did) (#Adverb|not)+?] #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'modal-verb'\n}, //would have had\n{\n  match: \"[#Modal (#Adverb|not)+? have (#Adverb|not)+? had (#Adverb|not)+?] #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'would-have'\n}, //would be walking\n{\n  match: \"#Modal (#Adverb|not)+? be (#Adverb|not)+? #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'would-be'\n}, //had been walking\n{\n  match: \"(#Modal|had|has) (#Adverb|not)+? been (#Adverb|not)+? #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'had-been'\n}, //was walking\n{\n  match: \"[#Copula (#Adverb|not)+?] (#Gerund|#PastTense)\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'copula-walking'\n}, //support a splattering of auxillaries before a verb\n{\n  match: \"[(has|had) (#Adverb|not)+?] #PastTense\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'had-walked'\n}, //would walk\n{\n  match: \"[(#Modal|did) (#Adverb|not)+?] #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'modal-verb'\n}, // will walk\n{\n  match: '[(do|does|will|have|had)] (not|#Adverb)? #Verb',\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'have-had'\n}, // about to go\n{\n  match: '[about to] #Adverb? #Verb',\n  group: 0,\n  tag: ['Auxiliary', 'Verb'],\n  reason: 'about-to'\n}, //would be walking\n{\n  match: \"#Modal (#Adverb|not)+? be (#Adverb|not)+? #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'would-be'\n}, //would have had\n{\n  match: \"[#Modal (#Adverb|not)+? have (#Adverb|not)+? had (#Adverb|not)+?] #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'would-have'\n}, //had been walking\n{\n  match: \"(#Modal|had|has) (#Adverb|not)+? been (#Adverb|not)+? #Verb\",\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'had-been'\n}, // was being driven\n{\n  match: '[being] #Participle',\n  group: 0,\n  tag: 'Auxiliary',\n  reason: 'being-foo'\n}, // ==== Phrasal ====\n//'foo-up'\n{\n  match: '(#Verb && @hasHyphen) up',\n  group: 0,\n  tag: 'PhrasalVerb',\n  reason: 'foo-up'\n}, {\n  match: '(#Verb && @hasHyphen) off',\n  group: 0,\n  tag: 'PhrasalVerb',\n  reason: 'foo-off'\n}, {\n  match: '(#Verb && @hasHyphen) over',\n  group: 0,\n  tag: 'PhrasalVerb',\n  reason: 'foo-over'\n}, {\n  match: '(#Verb && @hasHyphen) out',\n  group: 0,\n  tag: 'PhrasalVerb',\n  reason: 'foo-out'\n}, //fall over\n{\n  match: '#PhrasalVerb [#PhrasalVerb]',\n  group: 0,\n  tag: 'Particle',\n  reason: 'phrasal-particle'\n}, // ==== Copula ====\n//will be running (not copula)\n{\n  match: '[will #Adverb? not? #Adverb? be] #Gerund',\n  group: 0,\n  tag: 'Copula',\n  reason: 'will-be-copula'\n}, //for more complex forms, just tag 'be'\n{\n  match: 'will #Adverb? not? #Adverb? [be] #Adjective',\n  group: 0,\n  tag: 'Copula',\n  reason: 'be-copula'\n}, // ==== Infinitive ====\n//march to\n{\n  match: '[march] (up|down|back|to|toward)',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'march-to'\n}, //must march\n{\n  match: '#Modal [march]',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'must-march'\n}, //let him glue\n{\n  match: '(let|make|made) (him|her|it|#Person|#Place|#Organization)+ [#Singular] (a|an|the|it)',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'let-him-glue'\n}, //he quickly foo\n{\n  match: '#Noun #Adverb [#Noun]',\n  group: 0,\n  tag: 'Verb',\n  reason: 'quickly-foo'\n}, //will secure our\n{\n  match: 'will [#Adjective]',\n  group: 0,\n  tag: 'Verb',\n  reason: 'will-adj'\n}, //he disguised the thing\n{\n  match: '#Pronoun [#Adjective] #Determiner #Adjective? #Noun',\n  group: 0,\n  tag: 'Verb',\n  reason: 'he-adj-the'\n}, //is eager to go\n{\n  match: '#Copula [#Adjective to] #Verb',\n  group: 0,\n  tag: 'Verb',\n  reason: 'adj-to'\n}, // open the door\n{\n  match: '[open] #Determiner',\n  group: 0,\n  tag: 'Infinitive',\n  reason: 'open-the'\n}, // would wade\n{\n  match: \"#Modal [\".concat(verbs$1, \"]\"),\n  group: 0,\n  tag: 'Verb',\n  reason: 'would-mark'\n}, {\n  match: \"#Adverb [\".concat(verbs$1, \"]\"),\n  group: 0,\n  tag: 'Verb',\n  reason: 'really-mark'\n}, // wade smith\n{\n  match: \"\".concat(verbs$1, \" #Person\"),\n  tag: 'Person',\n  reason: 'rob-smith'\n}, // wade m. Cooper\n{\n  match: \"\".concat(verbs$1, \" #Acronym? #ProperNoun\"),\n  tag: 'Person',\n  reason: 'rob-a-smith'\n}, // damn them\n{\n  match: '[shit] (#Determiner|#Possessive|them)',\n  group: 0,\n  tag: 'Verb',\n  reason: 'swear1-verb'\n}, {\n  match: '[damn] (#Determiner|#Possessive|them)',\n  group: 0,\n  tag: 'Verb',\n  reason: 'swear2-verb'\n}, {\n  match: '[fuck] (#Determiner|#Possessive|them)',\n  group: 0,\n  tag: 'Verb',\n  reason: 'swear3-verb'\n}];\nvar _07Verbs = list$3;\n\nvar places = '(paris|alexandria|houston|kobe|salvador|sydney)';\nvar list$4 = [// ==== Region ====\n//West Norforlk\n{\n  match: '(west|north|south|east|western|northern|southern|eastern)+ #Place',\n  tag: 'Region',\n  reason: 'west-norfolk'\n}, //some us-state acronyms (exlude: al, in, la, mo, hi, me, md, ok..)\n{\n  match: '#City [(al|ak|az|ar|ca|ct|dc|fl|ga|id|il|nv|nh|nj|ny|oh|or|pa|sc|tn|tx|ut|vt|pr)]',\n  group: 0,\n  tag: 'Region',\n  reason: 'us-state'\n}, //Foo District\n{\n  match: '#ProperNoun+ (district|region|province|county|prefecture|municipality|territory|burough|reservation)',\n  tag: 'Region',\n  reason: 'foo-district'\n}, //District of Foo\n{\n  match: '(district|region|province|municipality|territory|burough|state) of #ProperNoun',\n  tag: 'Region',\n  reason: 'district-of-Foo'\n}, // in Foo California\n{\n  match: 'in [#ProperNoun] #Place',\n  group: 0,\n  tag: 'Place',\n  reason: 'propernoun-place'\n}, // ==== Address ====\n{\n  match: '#Value #Noun (st|street|rd|road|crescent|cr|way|tr|terrace|avenue|ave)',\n  tag: 'Address',\n  reason: 'address-st'\n}, // in houston\n{\n  match: \"in [\".concat(places, \"]\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'in-paris'\n}, {\n  match: \"near [\".concat(places, \"]\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'near-paris'\n}, {\n  match: \"at [\".concat(places, \"]\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'at-paris'\n}, {\n  match: \"from [\".concat(places, \"]\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'from-paris'\n}, {\n  match: \"to [\".concat(places, \"]\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'to-paris'\n}, {\n  match: \"#Place [\".concat(places, \"]\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'tokyo-paris'\n}, // houston texas\n{\n  match: \"[\".concat(places, \"] #Place\"),\n  group: 0,\n  tag: 'Place',\n  reason: 'paris-france'\n}];\nvar _08Place = list$4;\n\nvar _09Org = [//John & Joe's\n{\n  match: '#Noun (&|n) #Noun',\n  tag: 'Organization',\n  reason: 'Noun-&-Noun'\n}, // teachers union of Ontario\n{\n  match: '#Organization of the? #ProperNoun',\n  tag: 'Organization',\n  reason: 'org-of-place',\n  safe: true\n}, //walmart USA\n{\n  match: '#Organization #Country',\n  tag: 'Organization',\n  reason: 'org-country'\n}, //organization\n{\n  match: '#ProperNoun #Organization',\n  tag: 'Organization',\n  reason: 'titlecase-org'\n}, //FitBit Inc\n{\n  match: '#ProperNoun (ltd|co|inc|dept|assn|bros)',\n  tag: 'Organization',\n  reason: 'org-abbrv'\n}, // the OCED\n{\n  match: 'the [#Acronym]',\n  group: 0,\n  tag: 'Organization',\n  reason: 'the-acronym',\n  safe: true\n}, // global trade union\n{\n  match: '(world|global|international|national|#Demonym) #Organization',\n  tag: 'Organization',\n  reason: 'global-org'\n}, // schools\n{\n  match: '#Noun+ (public|private) school',\n  tag: 'School',\n  reason: 'noun-public-school'\n}];\n\nvar nouns$1 = '(rose|robin|dawn|ray|holly|bill|joy|viola|penny|sky|violet|daisy|melody|kelvin|hope|mercedes|olive|jewel|faith|van|charity|miles|lily|summer|dolly|rod|dick|cliff|lane|reed|kitty|art|jean|trinity)';\nvar months = '(january|april|may|june|jan|sep)'; //summer|autumn\n\nvar list$5 = [// ==== Honorific ====\n{\n  match: '[(1st|2nd|first|second)] #Honorific',\n  group: 0,\n  tag: 'Honorific',\n  reason: 'ordinal-honorific'\n}, {\n  match: '[(private|general|major|corporal|lord|lady|secretary|premier)] #Honorific? #Person',\n  group: 0,\n  tag: 'Honorific',\n  reason: 'ambg-honorifics'\n}, // ==== FirstNames ====\n//is foo Smith\n{\n  match: '#Copula [(#Noun|#PresentTense)] #LastName',\n  group: 0,\n  tag: 'FirstName',\n  reason: 'copula-noun-lastname'\n}, //pope francis\n{\n  match: '(lady|queen|sister) #ProperNoun',\n  tag: 'FemaleName',\n  reason: 'lady-titlecase',\n  safe: true\n}, {\n  match: '(king|pope|father) #ProperNoun',\n  tag: 'MaleName',\n  reason: 'pope-titlecase',\n  safe: true\n}, //ambiguous-but-common firstnames\n{\n  match: '[(will|may|april|june|said|rob|wade|ray|rusty|drew|miles|jack|chuck|randy|jan|pat|cliff|bill)] #LastName',\n  group: 0,\n  tag: 'FirstName',\n  reason: 'maybe-lastname'\n}, // ==== Nickname ====\n// Dwayne 'the rock' Johnson\n{\n  match: '#FirstName [#Determiner #Noun] #LastName',\n  group: 0,\n  tag: 'NickName',\n  reason: 'first-noun-last'\n}, //my buddy\n{\n  match: '#Possessive [#FirstName]',\n  group: 0,\n  tag: 'Person',\n  reason: 'possessive-name'\n}, {\n  match: '#Acronym #ProperNoun',\n  tag: 'Person',\n  reason: 'acronym-titlecase',\n  safe: true\n}, //ludwig van beethovan\n{\n  match: '#Person (jr|sr|md)',\n  tag: 'Person',\n  reason: 'person-honorific'\n}, //peter II\n{\n  match: '#Person #Person the? #RomanNumeral',\n  tag: 'Person',\n  reason: 'roman-numeral'\n}, //'Professor Fink', 'General McCarthy'\n{\n  match: '#FirstName [/^[^aiurck]$/]',\n  group: 0,\n  tag: ['Acronym', 'Person'],\n  reason: 'john-e'\n}, //Doctor john smith jr\n//general pearson\n{\n  match: '#Honorific #Person',\n  tag: 'Person',\n  reason: 'honorific-person'\n}, //remove single 'mr'\n{\n  match: '#Honorific #Acronym',\n  tag: 'Person',\n  reason: 'Honorific-TitleCase'\n}, //j.k Rowling\n{\n  match: '#Noun van der? #Noun',\n  tag: 'Person',\n  reason: 'von der noun',\n  safe: true\n}, //king of spain\n{\n  match: '(king|queen|prince|saint|lady) of? #Noun',\n  tag: 'Person',\n  reason: 'king-of-noun',\n  safe: true\n}, //Foo U Ford\n{\n  match: '[#ProperNoun] #Person',\n  group: 0,\n  tag: 'Person',\n  reason: 'proper-person',\n  safe: true\n}, // al sharpton\n{\n  match: 'al (#Person|#ProperNoun)',\n  tag: 'Person',\n  reason: 'al-borlen',\n  safe: true\n}, //ferdinand de almar\n{\n  match: '#FirstName de #Noun',\n  tag: 'Person',\n  reason: 'bill-de-noun'\n}, //Osama bin Laden\n{\n  match: '#FirstName (bin|al) #Noun',\n  tag: 'Person',\n  reason: 'bill-al-noun'\n}, //John L. Foo\n{\n  match: '#FirstName #Acronym #ProperNoun',\n  tag: 'Person',\n  reason: 'bill-acronym-title'\n}, //Andrew Lloyd Webber\n{\n  match: '#FirstName #FirstName #ProperNoun',\n  tag: 'Person',\n  reason: 'bill-firstname-title'\n}, //Mr Foo\n{\n  match: '#Honorific #FirstName? #ProperNoun',\n  tag: 'Person',\n  reason: 'dr-john-Title'\n}, //peter the great\n{\n  match: '#FirstName the #Adjective',\n  tag: 'Person',\n  reason: 'name-the-great'\n}, //very common-but-ambiguous lastnames\n{\n  match: '#FirstName (green|white|brown|hall|young|king|hill|cook|gray|price)',\n  tag: 'Person',\n  reason: 'bill-green'\n}, // faith smith\n{\n  match: \"\".concat(nouns$1, \" #Person\"),\n  tag: 'Person',\n  reason: 'ray-smith',\n  safe: true\n}, // faith m. Smith\n{\n  match: \"\".concat(nouns$1, \" #Acronym? #ProperNoun\"),\n  tag: 'Person',\n  reason: 'ray-a-smith',\n  safe: true\n}, //give to april\n{\n  match: \"#Infinitive #Determiner? #Adjective? #Noun? (to|for) [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'ambig-person'\n}, // remind june\n{\n  match: \"#Infinitive [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'infinitive-person'\n}, // may waits for\n{\n  match: \"[\".concat(months, \"] #PresentTense for\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'ambig-active-for'\n}, // may waits for\n{\n  match: \"[\".concat(months, \"] #PresentTense to\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'ambig-active-to'\n}, // april will\n{\n  match: \"[\".concat(months, \"] #Modal\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'ambig-modal'\n}, // would april\n{\n  match: \"#Modal [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'modal-ambig'\n}, // it is may\n{\n  match: \"#Copula [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'is-may'\n}, // may is\n{\n  match: \"[\".concat(months, \"] #Copula\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'may-is'\n}, // with april\n{\n  match: \"that [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'that-month'\n}, // with april\n{\n  match: \"with [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'with-month'\n}, // for april\n{\n  match: \"for [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Person',\n  reason: 'for-month'\n}, // this april\n{\n  match: \"this [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Month',\n  reason: 'this-may'\n}, //maybe not 'this'\n// next april\n{\n  match: \"next [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Month',\n  reason: 'next-may'\n}, // last april\n{\n  match: \"last [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Month',\n  reason: 'last-may'\n}, // wednesday april\n{\n  match: \"#Date [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Month',\n  reason: 'date-may'\n}, // may 5th\n{\n  match: \"[\".concat(months, \"] the? #Value\"),\n  group: 0,\n  tag: 'Month',\n  reason: 'may-5th'\n}, // 5th of may\n{\n  match: \"#Value of [\".concat(months, \"]\"),\n  group: 0,\n  tag: 'Month',\n  reason: '5th-of-may'\n}, // dick van dyke\n{\n  match: '#ProperNoun (van|al|bin) #ProperNoun',\n  tag: 'Person',\n  reason: 'title-van-title',\n  safe: true\n}, //jose de Sucre\n{\n  match: '#ProperNoun (de|du) la? #ProperNoun',\n  tag: 'Person',\n  reason: 'title-de-title',\n  safe: true\n}, //Jani K. Smith\n{\n  match: '#Singular #Acronym #LastName',\n  tag: '#Person',\n  reason: 'title-acro-noun',\n  safe: true\n}, //John Foo\n{\n  match: '#FirstName (#Noun && #ProperNoun) #ProperNoun?',\n  tag: 'Person',\n  reason: 'firstname-titlecase'\n}, //Joe K. Sombrero\n{\n  match: '#FirstName #Acronym #Noun',\n  tag: 'Person',\n  reason: 'n-acro-noun',\n  safe: true\n}];\nvar _10People = list$5;\n\nvar matches = [];\nmatches = matches.concat(_01Misc);\nmatches = matches.concat(_02Dates);\nmatches = matches.concat(_03Noun);\nmatches = matches.concat(_04Adjective);\nmatches = matches.concat(_05Adverb);\nmatches = matches.concat(_06Value);\nmatches = matches.concat(_07Verbs);\nmatches = matches.concat(_08Place);\nmatches = matches.concat(_09Org);\nmatches = matches.concat(_10People); // cache the easier conditions up-front\n\nvar cacheRequired$1 = function cacheRequired(reg) {\n  var needTags = [];\n  var needWords = [];\n  reg.forEach(function (obj) {\n    if (obj.optional === true || obj.negative === true) {\n      return;\n    }\n\n    if (obj.tag !== undefined) {\n      needTags.push(obj.tag);\n    }\n\n    if (obj.word !== undefined) {\n      needWords.push(obj.word);\n    }\n  });\n  return {\n    tags: _unique(needTags),\n    words: _unique(needWords)\n  };\n};\n\nvar allLists = function allLists(m) {\n  var more = [];\n  var lists = m.reg.filter(function (r) {\n    return r.oneOf !== undefined;\n  });\n\n  if (lists.length === 1) {\n    var i = m.reg.findIndex(function (r) {\n      return r.oneOf !== undefined;\n    });\n    Object.keys(m.reg[i].oneOf).forEach(function (w) {\n      var newM = Object.assign({}, m);\n      newM.reg = newM.reg.slice(0);\n      newM.reg[i] = Object.assign({}, newM.reg[i]);\n      newM.reg[i].word = w;\n      delete newM.reg[i].operator;\n      delete newM.reg[i].oneOf;\n      newM.reason += '-' + w;\n      more.push(newM);\n    });\n  }\n\n  return more;\n}; // parse them\n\n\nvar all = [];\nmatches.forEach(function (m) {\n  m.reg = syntax_1(m.match);\n  var enumerated = allLists(m);\n\n  if (enumerated.length > 0) {\n    all = all.concat(enumerated);\n  } else {\n    all.push(m);\n  }\n});\nall.forEach(function (m) {\n  m.required = cacheRequired$1(m.reg);\n  return m;\n});\nvar matches_1 = all;\n\nvar hasEvery = function hasEvery(chances) {\n  if (chances.length === 0) {\n    return [];\n  }\n\n  var obj = {};\n  chances.forEach(function (arr) {\n    arr = _unique(arr);\n\n    for (var i = 0; i < arr.length; i++) {\n      obj[arr[i]] = obj[arr[i]] || 0;\n      obj[arr[i]] += 1;\n    }\n  });\n  var res = Object.keys(obj);\n  res = res.filter(function (k) {\n    return obj[k] === chances.length;\n  });\n  res = res.map(function (num) {\n    return Number(num);\n  });\n  return res;\n};\n\nvar runner = function runner(doc) {\n  //find phrases to try for each match\n  matches_1.forEach(function (m) {\n    var allChances = [];\n    m.required.words.forEach(function (w) {\n      allChances.push(doc._cache.words[w] || []);\n    });\n    m.required.tags.forEach(function (tag) {\n      allChances.push(doc._cache.tags[tag] || []);\n    });\n    var worthIt = hasEvery(allChances);\n\n    if (worthIt.length === 0) {\n      return;\n    }\n\n    var phrases = worthIt.map(function (index) {\n      return doc.list[index];\n    });\n    var tryDoc = doc.buildFrom(phrases); // phrases getting tagged\n\n    var match = tryDoc.match(m.reg, m.group);\n\n    if (match.found) {\n      if (m.safe === true) {\n        match.tagSafe(m.tag, m.reason);\n      } else {\n        match.tag(m.tag, m.reason);\n      }\n    }\n  });\n};\n\nvar runner_1 = runner; // console.log(hasEvery([[1, 2, 2, 3], [2, 3], []]))\n\n// misc: 40ms\n//sequence of match-tag statements to correct mis-tags\n\nvar corrections = function corrections(doc) {\n  runner_1(doc);\n  fixMisc(doc);\n  return doc;\n};\n\nvar _04Correction = corrections;\n\n/** POS-tag all terms in this document */\n\nvar tagger = function tagger(doc) {\n  var terms = doc.termList(); // check against any known-words\n\n  doc = _01Init(doc, terms); // everything has gotta be something. ¯\\_(:/)_/¯\n\n  doc = _02Fallbacks(doc, terms); // support \"didn't\" & \"spencer's\"\n\n  doc = _03Contractions(doc); //set our cache, to speed things up\n\n  doc.cache(); // wiggle-around the results, so they make more sense\n\n  doc = _04Correction(doc); // remove our cache, as it's invalidated now\n\n  doc.uncache(); // run any user-given tagger functions\n\n  doc.world.taggers.forEach(function (fn) {\n    fn(doc);\n  });\n  return doc;\n};\n\nvar _02Tagger = tagger;\n\nvar addMethod = function addMethod(Doc) {\n  /**  */\n  var Abbreviations = /*#__PURE__*/function (_Doc) {\n    _inherits(Abbreviations, _Doc);\n\n    var _super = _createSuper(Abbreviations);\n\n    function Abbreviations() {\n      _classCallCheck(this, Abbreviations);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Abbreviations, [{\n      key: \"stripPeriods\",\n      value: function stripPeriods() {\n        this.termList().forEach(function (t) {\n          if (t.tags.Abbreviation === true && t.next) {\n            t.post = t.post.replace(/^\\./, '');\n          }\n\n          var str = t.text.replace(/\\./, '');\n          t.set(str);\n        });\n        return this;\n      }\n    }, {\n      key: \"addPeriods\",\n      value: function addPeriods() {\n        this.termList().forEach(function (t) {\n          t.post = t.post.replace(/^\\./, '');\n          t.post = '.' + t.post;\n        });\n        return this;\n      }\n    }]);\n\n    return Abbreviations;\n  }(Doc);\n\n  Abbreviations.prototype.unwrap = Abbreviations.prototype.stripPeriods;\n\n  Doc.prototype.abbreviations = function (n) {\n    var match = this.match('#Abbreviation');\n\n    if (typeof n === 'number') {\n      match = match.get(n);\n    }\n\n    return new Abbreviations(match.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Abbreviations = addMethod;\n\nvar hasPeriod = /\\./;\n\nvar addMethod$1 = function addMethod(Doc) {\n  /**  */\n  var Acronyms = /*#__PURE__*/function (_Doc) {\n    _inherits(Acronyms, _Doc);\n\n    var _super = _createSuper(Acronyms);\n\n    function Acronyms() {\n      _classCallCheck(this, Acronyms);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Acronyms, [{\n      key: \"stripPeriods\",\n      value: function stripPeriods() {\n        this.termList().forEach(function (t) {\n          var str = t.text.replace(/\\./g, '');\n          t.set(str);\n        });\n        return this;\n      }\n    }, {\n      key: \"addPeriods\",\n      value: function addPeriods() {\n        this.termList().forEach(function (t) {\n          var str = t.text.replace(/\\./g, '');\n          str = str.split('').join('.'); // don't add a end-period if there's a sentence-end one\n\n          if (hasPeriod.test(t.post) === false) {\n            str += '.';\n          }\n\n          t.set(str);\n        });\n        return this;\n      }\n    }]);\n\n    return Acronyms;\n  }(Doc);\n\n  Acronyms.prototype.unwrap = Acronyms.prototype.stripPeriods;\n  Acronyms.prototype.strip = Acronyms.prototype.stripPeriods;\n\n  Doc.prototype.acronyms = function (n) {\n    var match = this.match('#Acronym');\n\n    if (typeof n === 'number') {\n      match = match.get(n);\n    }\n\n    return new Acronyms(match.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Acronyms = addMethod$1;\n\nvar addMethod$2 = function addMethod(Doc) {\n  /** split into approximate sub-sentence phrases */\n  Doc.prototype.clauses = function (n) {\n    // an awkward way to disambiguate a comma use\n    var commas = this[\"if\"]('@hasComma').notIf('@hasComma @hasComma') //fun, cool...\n    .notIf('@hasComma . .? (and|or) .') //cool, and fun\n    .notIf('(#City && @hasComma) #Country') //'toronto, canada'\n    .notIf('(#Date && @hasComma) #Year') //'july 6, 1992'\n    .notIf('@hasComma (too|also)$') //at end of sentence\n    .match('@hasComma');\n    var found = this.splitAfter(commas);\n    var quotes = found.quotations();\n    found = found.splitOn(quotes);\n    var parentheses = found.parentheses();\n    found = found.splitOn(parentheses); // it is cool and it is ..\n\n    var conjunctions = found[\"if\"]('#Copula #Adjective #Conjunction (#Pronoun|#Determiner) #Verb').match('#Conjunction');\n    found = found.splitBefore(conjunctions); // if it is this then that\n\n    var condition = found[\"if\"]('if .{2,9} then .').match('then');\n    found = found.splitBefore(condition); // misc clause partitions\n\n    found = found.splitBefore('as well as .');\n    found = found.splitBefore('such as .');\n    found = found.splitBefore('in addition to .'); // semicolons, dashes\n\n    found = found.splitAfter('@hasSemicolon');\n    found = found.splitAfter('@hasDash'); // passive voice verb - '.. which was robbed is empty'\n    // let passive = found.match('#Noun (which|that) (was|is) #Adverb? #PastTense #Adverb?')\n    // if (passive.found) {\n    //   found = found.splitAfter(passive)\n    // }\n    // //which the boy robbed\n    // passive = found.match('#Noun (which|that) the? #Noun+ #Adverb? #PastTense #Adverb?')\n    // if (passive.found) {\n    //   found = found.splitAfter(passive)\n    // }\n    // does there appear to have relative/subordinate clause still?\n\n    var tooLong = found.filter(function (d) {\n      return d.wordCount() > 5 && d.match('#Verb+').length >= 2;\n    });\n\n    if (tooLong.found) {\n      var m = tooLong.splitAfter('#Noun .* #Verb .* #Noun+');\n      found = found.splitOn(m.eq(0));\n    }\n\n    if (typeof n === 'number') {\n      found = found.get(n);\n    }\n\n    return new Doc(found.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Clauses = addMethod$2;\n\nvar addMethod$3 = function addMethod(Doc) {\n  /**  */\n  var Contractions = /*#__PURE__*/function (_Doc) {\n    _inherits(Contractions, _Doc);\n\n    var _super = _createSuper(Contractions);\n\n    function Contractions(list, from, world) {\n      var _this;\n\n      _classCallCheck(this, Contractions);\n\n      _this = _super.call(this, list, from, world);\n      _this.contracted = null;\n      return _this;\n    }\n    /** turn didn't into 'did not' */\n\n\n    _createClass(Contractions, [{\n      key: \"expand\",\n      value: function expand() {\n        this.list.forEach(function (p) {\n          var terms = p.terms(); //change the case?\n\n          var isTitlecase = terms[0].isTitleCase();\n          terms.forEach(function (t, i) {\n            //use the implicit text\n            t.set(t.implicit || t.text);\n            t.implicit = undefined; //add whitespace\n\n            if (i < terms.length - 1 && t.post === '') {\n              t.post += ' ';\n            }\n          }); //set titlecase\n\n          if (isTitlecase) {\n            terms[0].toTitleCase();\n          }\n        });\n        return this;\n      }\n    }]);\n\n    return Contractions;\n  }(Doc); //find contractable, expanded-contractions\n  // const findExpanded = r => {\n  //   let remain = r.not('#Contraction')\n  //   let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n  //   m.concat(remain.match('(they|we|you|i) have'))\n  //   m.concat(remain.match('i am'))\n  //   m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n  //   return m\n  // }\n\n\n  Doc.prototype.contractions = function (n) {\n    //find currently-contracted\n    var found = this.match('@hasContraction+'); //(may want to split these up)\n    //todo: split consecutive contractions\n\n    if (typeof n === 'number') {\n      found = found.get(n);\n    }\n\n    return new Contractions(found.list, this, this.world);\n  }; //aliases\n\n\n  Doc.prototype.expanded = Doc.prototype.isExpanded;\n  Doc.prototype.contracted = Doc.prototype.isContracted;\n  return Doc;\n};\n\nvar Contractions = addMethod$3;\n\nvar addMethod$4 = function addMethod(Doc) {\n  //pull it apart..\n  var parse = function parse(doc) {\n    var things = doc.splitAfter('@hasComma').splitOn('(and|or) not?').not('(and|or) not?');\n    var beforeLast = doc.match('[.] (and|or)', 0);\n    return {\n      things: things,\n      conjunction: doc.match('(and|or) not?'),\n      beforeLast: beforeLast,\n      hasOxford: beforeLast.has('@hasComma')\n    };\n  };\n  /** cool, fun, and nice */\n\n\n  var Lists = /*#__PURE__*/function (_Doc) {\n    _inherits(Lists, _Doc);\n\n    var _super = _createSuper(Lists);\n\n    function Lists() {\n      _classCallCheck(this, Lists);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Lists, [{\n      key: \"conjunctions\",\n\n      /** coordinating conjunction */\n      value: function conjunctions() {\n        return this.match('(and|or)');\n      }\n      /** split-up by list object */\n\n    }, {\n      key: \"parts\",\n      value: function parts() {\n        return this.splitAfter('@hasComma').splitOn('(and|or) not?');\n      }\n      /** remove the conjunction */\n\n    }, {\n      key: \"items\",\n      value: function items() {\n        return parse(this).things;\n      }\n      /** add a new unit to the list */\n\n    }, {\n      key: \"add\",\n      value: function add(str) {\n        this.forEach(function (p) {\n          var beforeLast = parse(p).beforeLast;\n          beforeLast.append(str); //add a comma to it\n\n          beforeLast.termList(0).addPunctuation(',');\n        });\n        return this;\n      }\n      /** remove any matching unit from the list */\n\n    }, {\n      key: \"remove\",\n      value: function remove(match) {\n        return this.items()[\"if\"](match).remove();\n      }\n      /** return only lists that use a serial comma */\n\n    }, {\n      key: \"hasOxfordComma\",\n      value: function hasOxfordComma() {\n        return this.filter(function (doc) {\n          return parse(doc).hasOxford;\n        });\n      }\n    }, {\n      key: \"addOxfordComma\",\n      value: function addOxfordComma() {\n        var items = this.items();\n        var needsComma = items.eq(items.length - 2);\n\n        if (needsComma.found && needsComma.has('@hasComma') === false) {\n          needsComma.post(', ');\n        }\n\n        return this;\n      }\n    }, {\n      key: \"removeOxfordComma\",\n      value: function removeOxfordComma() {\n        var items = this.items();\n        var needsComma = items.eq(items.length - 2);\n\n        if (needsComma.found && needsComma.has('@hasComma') === true) {\n          needsComma.post(' ');\n        }\n\n        return this;\n      }\n    }]);\n\n    return Lists;\n  }(Doc); // aliases\n\n\n  Lists.prototype.things = Lists.prototype.items;\n\n  Doc.prototype.lists = function (n) {\n    var m = this[\"if\"]('@hasComma+ .? (and|or) not? .'); // person-list\n\n    var nounList = m.match('(#Noun|#Adjective|#Determiner|#Article)+ #Conjunction not? (#Article|#Determiner)? #Adjective? #Noun+')[\"if\"]('#Noun');\n    var adjList = m.match('(#Adjective|#Adverb)+ #Conjunction not? #Adverb? #Adjective+');\n    var verbList = m.match('(#Verb|#Adverb)+ #Conjunction not? #Adverb? #Verb+');\n    var result = nounList.concat(adjList);\n    result = result.concat(verbList);\n    result = result[\"if\"]('@hasComma');\n\n    if (typeof n === 'number') {\n      result = m.get(n);\n    }\n\n    return new Lists(result.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Lists = addMethod$4;\n\nvar noPlural = '(#Pronoun|#Place|#Value|#Person|#Uncountable|#Month|#WeekDay|#Holiday|#Possessive)'; //certain words can't be plural, like 'peace'\n\nvar hasPlural = function hasPlural(doc) {\n  if (doc.has('#Plural') === true) {\n    return true;\n  } // these can't be plural\n\n\n  if (doc.has(noPlural) === true) {\n    return false;\n  }\n\n  return true;\n};\n\nvar hasPlural_1 = hasPlural;\n\nvar irregulars$5 = {\n  hour: 'an',\n  heir: 'an',\n  heirloom: 'an',\n  honest: 'an',\n  honour: 'an',\n  honor: 'an',\n  uber: 'an' //german u\n\n}; //pronounced letters of acronyms that get a 'an'\n\nvar an_acronyms = {\n  a: true,\n  e: true,\n  f: true,\n  h: true,\n  i: true,\n  l: true,\n  m: true,\n  n: true,\n  o: true,\n  r: true,\n  s: true,\n  x: true\n}; //'a' regexes\n\nvar a_regexs = [/^onc?e/i, //'wu' sound of 'o'\n/^u[bcfhjkqrstn][aeiou]/i, // 'yu' sound for hard 'u'\n/^eul/i];\n\nvar makeArticle = function makeArticle(doc) {\n  //no 'the john smith', but 'a london hotel'\n  if (doc.has('#Person') || doc.has('#Place')) {\n    return '';\n  } //no a/an if it's plural\n\n\n  if (doc.has('#Plural')) {\n    return 'the';\n  }\n\n  var str = doc.text('normal').trim(); //explicit irregular forms\n\n  if (irregulars$5.hasOwnProperty(str)) {\n    return irregulars$5[str];\n  } //spelled-out acronyms\n\n\n  var firstLetter = str.substr(0, 1);\n\n  if (doc.has('^@isAcronym') && an_acronyms.hasOwnProperty(firstLetter)) {\n    return 'an';\n  } //'a' regexes\n\n\n  for (var i = 0; i < a_regexs.length; i++) {\n    if (a_regexs[i].test(str)) {\n      return 'a';\n    }\n  } //basic vowel-startings\n\n\n  if (/^[aeiou]/i.test(str)) {\n    return 'an';\n  }\n\n  return 'a';\n};\n\nvar getArticle = makeArticle;\n\n//similar to plural/singularize rules, but not the same\nvar isPlural$1 = [/(antenn|formul|nebul|vertebr|vit)ae$/i, /(octop|vir|radi|nucle|fung|cact|stimul)i$/i, /men$/i, /.tia$/i, /(m|l)ice$/i]; //similar to plural/singularize rules, but not the same\n\nvar isSingular$1 = [/(ax|test)is$/i, /(octop|vir|radi|nucle|fung|cact|stimul)us$/i, /(octop|vir)i$/i, /(rl)f$/i, /(alias|status)$/i, /(bu)s$/i, /(al|ad|at|er|et|ed|ad)o$/i, /(ti)um$/i, /(ti)a$/i, /sis$/i, /(?:(^f)fe|(lr)f)$/i, /hive$/i, /(^aeiouy|qu)y$/i, /(x|ch|ss|sh|z)$/i, /(matr|vert|ind|cort)(ix|ex)$/i, /(m|l)ouse$/i, /(m|l)ice$/i, /(antenn|formul|nebul|vertebr|vit)a$/i, /.sis$/i, /^(?!talis|.*hu)(.*)man$/i];\nvar _rules$2 = {\n  isSingular: isSingular$1,\n  isPlural: isPlural$1\n};\n\nvar endS = /s$/; // double-check this term, if it is not plural, or singular.\n// (this is a partial copy of ./tagger/fallbacks/plural)\n// fallback plural if it ends in an 's'.\n\nvar isPlural$2 = function isPlural(str) {\n  // isSingular suffix rules\n  if (_rules$2.isSingular.find(function (reg) {\n    return reg.test(str);\n  })) {\n    return false;\n  } // does it end in an s?\n\n\n  if (endS.test(str) === true) {\n    return true;\n  } // is it a plural like 'fungi'?\n\n\n  if (_rules$2.isPlural.find(function (reg) {\n    return reg.test(str);\n  })) {\n    return true;\n  }\n\n  return null;\n};\n\nvar isPlural_1$1 = isPlural$2;\n\nvar exceptions = {\n  he: 'his',\n  she: 'hers',\n  they: 'theirs',\n  we: 'ours',\n  i: 'mine',\n  you: 'yours',\n  her: 'hers',\n  their: 'theirs',\n  our: 'ours',\n  my: 'mine',\n  your: 'yours'\n}; // turn \"David\" to \"David's\"\n\nvar toPossessive = function toPossessive(doc) {\n  var str = doc.text('text').trim(); // exceptions\n\n  if (exceptions.hasOwnProperty(str)) {\n    doc.replaceWith(exceptions[str], true);\n    doc.tag('Possessive', 'toPossessive');\n    return;\n  } // flanders'\n\n\n  if (/s$/.test(str)) {\n    str += \"'\";\n    doc.replaceWith(str, true);\n    doc.tag('Possessive', 'toPossessive');\n    return;\n  } //normal form:\n\n\n  str += \"'s\";\n  doc.replaceWith(str, true);\n  doc.tag('Possessive', 'toPossessive');\n  return;\n};\n\nvar toPossessive_1 = toPossessive;\n\n// .nouns() supports some noun-phrase-ish groupings\n// pull these apart, if necessary\nvar parse$1 = function parse(doc) {\n  var res = {\n    main: doc\n  }; //support 'mayor of chicago' as one noun-phrase\n\n  if (doc.has('#Noun (of|by|for) .')) {\n    var m = doc.splitAfter('[#Noun+]', 0);\n    res.main = m.eq(0);\n    res.post = m.eq(1);\n  }\n\n  return res;\n};\n\nvar parse_1 = parse$1;\n\nvar methods$6 = {\n  /** overload the original json with noun information */\n  json: function json(options) {\n    var n = null;\n\n    if (typeof options === 'number') {\n      n = options;\n      options = null;\n    }\n\n    options = options || {\n      text: true,\n      normal: true,\n      trim: true,\n      terms: true\n    };\n    var res = [];\n    this.forEach(function (doc) {\n      var json = doc.json(options)[0];\n      json.article = getArticle(doc);\n      res.push(json);\n    });\n\n    if (n !== null) {\n      return res[n];\n    }\n\n    return res;\n  },\n\n  /** get all adjectives describing this noun*/\n  adjectives: function adjectives() {\n    var list = this.lookAhead('^(that|who|which)? (was|is|will)? be? #Adverb? #Adjective+');\n    list = list.concat(this.lookBehind('#Adjective+ #Adverb?$'));\n    list = list.match('#Adjective');\n    return list.sort('index');\n  },\n  isPlural: function isPlural() {\n    return this[\"if\"]('#Plural'); //assume tagger has run?\n  },\n  hasPlural: function hasPlural() {\n    return this.filter(function (d) {\n      return hasPlural_1(d);\n    });\n  },\n  toPlural: function toPlural(agree) {\n    var _this = this;\n\n    var toPlural = this.world.transforms.toPlural;\n    this.forEach(function (doc) {\n      if (doc.has('#Plural') || hasPlural_1(doc) === false) {\n        return;\n      } // double-check it isn't an un-tagged plural\n\n\n      var main = parse_1(doc).main;\n      var str = main.text('reduced');\n\n      if (!main.has('#Singular') && isPlural_1$1(str) === true) {\n        return;\n      }\n\n      str = toPlural(str, _this.world);\n      main.replace(str).tag('#Plural'); // 'an apple' -> 'apples'\n\n      if (agree) {\n        var an = main.lookBefore('(an|a) #Adjective?$').not('#Adjective');\n\n        if (an.found === true) {\n          an.remove();\n        }\n      }\n    });\n    return this;\n  },\n  toSingular: function toSingular(agree) {\n    var _this2 = this;\n\n    var toSingular = this.world.transforms.toSingular;\n    this.forEach(function (doc) {\n      if (doc.has('^#Singular+$') || hasPlural_1(doc) === false) {\n        return;\n      } // double-check it isn't an un-tagged plural\n\n\n      var main = parse_1(doc).main;\n      var str = main.text('reduced');\n\n      if (!main.has('#Plural') && isPlural_1$1(str) !== true) {\n        return;\n      }\n\n      str = toSingular(str, _this2.world);\n      main.replace(str).tag('#Singular'); // add an article\n\n      if (agree) {\n        // 'apples' -> 'an apple'\n        var start = doc;\n        var adj = doc.lookBefore('#Adjective');\n\n        if (adj.found) {\n          start = adj;\n        }\n\n        var article = getArticle(start);\n        start.insertBefore(article);\n      }\n    });\n    return this;\n  },\n  toPossessive: function toPossessive() {\n    this.forEach(function (d) {\n      toPossessive_1(d);\n    });\n    return this;\n  }\n};\nvar methods_1 = methods$6;\n\nvar addMethod$5 = function addMethod(Doc) {\n  /**  */\n  var Nouns = /*#__PURE__*/function (_Doc) {\n    _inherits(Nouns, _Doc);\n\n    var _super = _createSuper(Nouns);\n\n    function Nouns() {\n      _classCallCheck(this, Nouns);\n\n      return _super.apply(this, arguments);\n    }\n\n    return Nouns;\n  }(Doc); // add-in our methods\n\n\n  Object.assign(Nouns.prototype, methods_1);\n\n  Doc.prototype.nouns = function (n) {\n    // don't split 'paris, france'\n    var keep = this.match('(#City && @hasComma) (#Region|#Country)'); // but split the other commas\n\n    var m = this.not(keep).splitAfter('@hasComma'); // combine them back together\n\n    m = m.concat(keep);\n    m = m.match('#Noun+ (of|by)? the? #Noun+?'); //nouns that we don't want in these results, for weird reasons\n\n    m = m.not('#Pronoun');\n    m = m.not('(there|these)');\n    m = m.not('(#Month|#WeekDay)'); //allow Durations, Holidays\n    // //allow possessives like \"spencer's\", but not generic ones like,\n\n    m = m.not('(my|our|your|their|her|his)');\n    m = m.not('(of|for|by|the)$');\n\n    if (typeof n === 'number') {\n      m = m.get(n);\n    }\n\n    return new Nouns(m.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Nouns = addMethod$5;\n\nvar open = /\\(/;\nvar close = /\\)/;\n\nvar addMethod$6 = function addMethod(Doc) {\n  /** anything between (these things) */\n  var Parentheses = /*#__PURE__*/function (_Doc) {\n    _inherits(Parentheses, _Doc);\n\n    var _super = _createSuper(Parentheses);\n\n    function Parentheses() {\n      _classCallCheck(this, Parentheses);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Parentheses, [{\n      key: \"unwrap\",\n\n      /** remove the parentheses characters */\n      value: function unwrap() {\n        this.list.forEach(function (p) {\n          var first = p.terms(0);\n          first.pre = first.pre.replace(open, '');\n          var last = p.lastTerm();\n          last.post = last.post.replace(close, '');\n        });\n        return this;\n      }\n    }]);\n\n    return Parentheses;\n  }(Doc);\n\n  Doc.prototype.parentheses = function (n) {\n    var list = [];\n    this.list.forEach(function (p) {\n      var terms = p.terms(); //look for opening brackets\n\n      for (var i = 0; i < terms.length; i += 1) {\n        var t = terms[i];\n\n        if (open.test(t.pre)) {\n          //look for the closing bracket..\n          for (var o = i; o < terms.length; o += 1) {\n            if (close.test(terms[o].post)) {\n              var len = o - i + 1;\n              list.push(p.buildFrom(t.id, len));\n              i = o;\n              break;\n            }\n          }\n        }\n      }\n    }); //support nth result\n\n    if (typeof n === 'number') {\n      if (list[n]) {\n        list = [list[n]];\n      } else {\n        list = [];\n      }\n\n      return new Parentheses(list, this, this.world);\n    }\n\n    return new Parentheses(list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Parentheses = addMethod$6;\n\nvar addMethod$7 = function addMethod(Doc) {\n  /**  */\n  var Possessives = /*#__PURE__*/function (_Doc) {\n    _inherits(Possessives, _Doc);\n\n    var _super = _createSuper(Possessives);\n\n    function Possessives(list, from, world) {\n      var _this;\n\n      _classCallCheck(this, Possessives);\n\n      _this = _super.call(this, list, from, world);\n      _this.contracted = null;\n      return _this;\n    }\n    /** turn didn't into 'did not' */\n\n\n    _createClass(Possessives, [{\n      key: \"strip\",\n      value: function strip() {\n        this.list.forEach(function (p) {\n          var terms = p.terms();\n          terms.forEach(function (t) {\n            var str = t.text.replace(/'s$/, '');\n            t.set(str || t.text);\n          });\n        });\n        return this;\n      }\n    }]);\n\n    return Possessives;\n  }(Doc); //find contractable, expanded-contractions\n  // const findExpanded = r => {\n  //   let remain = r.not('#Contraction')\n  //   let m = remain.match('(#Noun|#QuestionWord) (#Copula|did|do|have|had|could|would|will)')\n  //   m.concat(remain.match('(they|we|you|i) have'))\n  //   m.concat(remain.match('i am'))\n  //   m.concat(remain.match('(#Copula|#Modal|do|does|have|has|can|will) not'))\n  //   return m\n  // }\n\n\n  Doc.prototype.possessives = function (n) {\n    //find currently-contracted\n    var found = this.match('#Noun+? #Possessive'); //todo: split consecutive contractions\n\n    if (typeof n === 'number') {\n      found = found.get(n);\n    }\n\n    return new Possessives(found.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar Possessives = addMethod$7;\n\nvar pairs = {\n  \"\\\"\": \"\\\"\",\n  // 'StraightDoubleQuotes'\n  \"\\uFF02\": \"\\uFF02\",\n  // 'StraightDoubleQuotesWide'\n  \"'\": \"'\",\n  // 'StraightSingleQuotes'\n  \"\\u201C\": \"\\u201D\",\n  // 'CommaDoubleQuotes'\n  \"\\u2018\": \"\\u2019\",\n  // 'CommaSingleQuotes'\n  \"\\u201F\": \"\\u201D\",\n  // 'CurlyDoubleQuotesReversed'\n  \"\\u201B\": \"\\u2019\",\n  // 'CurlySingleQuotesReversed'\n  \"\\u201E\": \"\\u201D\",\n  // 'LowCurlyDoubleQuotes'\n  \"\\u2E42\": \"\\u201D\",\n  // 'LowCurlyDoubleQuotesReversed'\n  \"\\u201A\": \"\\u2019\",\n  // 'LowCurlySingleQuotes'\n  \"\\xAB\": \"\\xBB\",\n  // 'AngleDoubleQuotes'\n  \"\\u2039\": \"\\u203A\",\n  // 'AngleSingleQuotes'\n  // Prime 'non quotation'\n  \"\\u2035\": \"\\u2032\",\n  // 'PrimeSingleQuotes'\n  \"\\u2036\": \"\\u2033\",\n  // 'PrimeDoubleQuotes'\n  \"\\u2037\": \"\\u2034\",\n  // 'PrimeTripleQuotes'\n  // Prime 'quotation' variation\n  \"\\u301D\": \"\\u301E\",\n  // 'PrimeDoubleQuotes'\n  \"`\": \"\\xB4\",\n  // 'PrimeSingleQuotes'\n  \"\\u301F\": \"\\u301E\" // 'LowPrimeDoubleQuotesReversed'\n\n};\nvar hasOpen = RegExp('(' + Object.keys(pairs).join('|') + ')');\n\nvar addMethod$8 = function addMethod(Doc) {\n  /** \"these things\" */\n  var Quotations = /*#__PURE__*/function (_Doc) {\n    _inherits(Quotations, _Doc);\n\n    var _super = _createSuper(Quotations);\n\n    function Quotations() {\n      _classCallCheck(this, Quotations);\n\n      return _super.apply(this, arguments);\n    }\n\n    _createClass(Quotations, [{\n      key: \"unwrap\",\n\n      /** remove the quote characters */\n      value: function unwrap() {\n        return this;\n      }\n    }]);\n\n    return Quotations;\n  }(Doc);\n\n  Doc.prototype.quotations = function (n) {\n    var list = [];\n    this.list.forEach(function (p) {\n      var terms = p.terms(); //look for opening quotes\n\n      for (var i = 0; i < terms.length; i += 1) {\n        var t = terms[i];\n\n        if (hasOpen.test(t.pre)) {\n          var _char = (t.pre.match(hasOpen) || [])[0];\n          var want = pairs[_char]; // if (!want) {\n          //   console.warn('missing quote char ' + char)\n          // }\n          //look for the closing bracket..\n\n          for (var o = i; o < terms.length; o += 1) {\n            if (terms[o].post.indexOf(want) !== -1) {\n              var len = o - i + 1;\n              list.push(p.buildFrom(t.id, len));\n              i = o;\n              break;\n            }\n          }\n        }\n      }\n    }); //support nth result\n\n    if (typeof n === 'number') {\n      if (list[n]) {\n        list = [list[n]];\n      } else {\n        list = [];\n      }\n\n      return new Quotations(list, this, this.world);\n    }\n\n    return new Quotations(list, this, this.world);\n  }; // alias\n\n\n  Doc.prototype.quotes = Doc.prototype.quotations;\n  return Doc;\n};\n\nvar Quotations = addMethod$8;\n\n// walked => walk  - turn a verb into it's root form\nvar toInfinitive$1 = function toInfinitive(parsed, world) {\n  var verb = parsed.verb; // console.log(parsed)\n  // verb.debug()\n  //1. if it's already infinitive\n\n  var str = verb.text('normal');\n\n  if (verb.has('#Infinitive')) {\n    return str;\n  } // 2. world transform does the heavy-lifting\n\n\n  var tense = null;\n\n  if (verb.has('#PastTense')) {\n    tense = 'PastTense';\n  } else if (verb.has('#Gerund')) {\n    tense = 'Gerund';\n  } else if (verb.has('#PresentTense')) {\n    tense = 'PresentTense';\n  } else if (verb.has('#Participle')) {\n    tense = 'Participle';\n  } else if (verb.has('#Actor')) {\n    tense = 'Actor';\n  }\n\n  return world.transforms.toInfinitive(str, world, tense);\n};\n\nvar toInfinitive_1$1 = toInfinitive$1;\n\n// spencer walks -> singular\n// we walk -> plural\n// the most-recent noun-phrase, before this verb.\nvar findNoun = function findNoun(vb) {\n  var noun = vb.lookBehind('#Noun+').last();\n  return noun;\n}; //sometimes you can tell if a verb is plural/singular, just by the verb\n// i am / we were\n// othertimes you need its subject 'we walk' vs 'i walk'\n\n\nvar isPlural$3 = function isPlural(parsed) {\n  var vb = parsed.verb;\n\n  if (vb.has('(are|were|does)') || parsed.auxiliary.has('(are|were|does)')) {\n    return true;\n  }\n\n  if (vb.has('(is|am|do|was)') || parsed.auxiliary.has('(is|am|do|was)')) {\n    return false;\n  } //consider its prior noun\n\n\n  var noun = findNoun(vb);\n\n  if (noun.has('(we|they|you)')) {\n    return true;\n  }\n\n  if (noun.has('#Plural')) {\n    return true;\n  }\n\n  if (noun.has('#Singular')) {\n    return false;\n  }\n\n  return null;\n};\n\nvar isPlural_1$2 = isPlural$3;\n\n// #Copula : is           -> 'is not'\n// #PastTense : walked    -> did not walk\n// #PresentTense : walks  -> does not walk\n// #Gerund : walking:     -> not walking\n// #Infinitive : walk     -> do not walk\n\nvar toNegative = function toNegative(parsed, world) {\n  var vb = parsed.verb; // if it's already negative...\n\n  if (parsed.negative.found) {\n    return;\n  } // would walk -> would not walk\n\n\n  if (parsed.auxiliary.found) {\n    parsed.auxiliary.eq(0).append('not');\n    return;\n  } // is walking -> is not walking\n\n\n  if (vb.has('(#Copula|will|has|had|do)')) {\n    vb.append('not');\n    return;\n  } // walked -> did not walk\n\n\n  if (vb.has('#PastTense')) {\n    var inf = toInfinitive_1$1(parsed, world);\n    vb.replaceWith(inf, true);\n    vb.prepend('did not');\n    return;\n  } // walks -> does not walk\n\n\n  if (vb.has('#PresentTense')) {\n    var _inf = toInfinitive_1$1(parsed, world);\n\n    vb.replaceWith(_inf, true);\n\n    if (isPlural_1$2(parsed)) {\n      vb.prepend('do not');\n    } else {\n      vb.prepend('does not');\n    }\n\n    return;\n  } //walking -> not walking\n\n\n  if (vb.has('#Gerund')) {\n    var _inf2 = toInfinitive_1$1(parsed, world);\n\n    vb.replaceWith(_inf2, true);\n    vb.prepend('not');\n    return;\n  } //fallback 1:  walk -> does not walk\n\n\n  if (isPlural_1$2(parsed)) {\n    vb.prepend('does not');\n    return;\n  } //fallback 2:  walk -> do not walk\n\n\n  vb.prepend('do not');\n  return;\n};\n\nvar toNegative_1 = toNegative;\n\n// turn 'would not really walk up' into parts\nvar parseVerb = function parseVerb(vb) {\n  var parsed = {\n    adverb: vb.match('#Adverb+'),\n    // 'really'\n    negative: vb.match('#Negative'),\n    // 'not'\n    auxiliary: vb.match('#Auxiliary').not('(#Negative|#Adverb)'),\n    // 'will' of 'will go'\n    particle: vb.match('#Particle'),\n    // 'up' of 'pull up'\n    verb: vb.match('#Verb').not('(#Adverb|#Negative|#Auxiliary|#Particle)')\n  }; // fallback, if no verb found\n\n  if (!parsed.verb.found) {\n    // blank-everything\n    Object.keys(parsed).forEach(function (k) {\n      parsed[k] = parsed[k].not('.');\n    }); // it's all the verb\n\n    parsed.verb = vb;\n    return parsed;\n  } //\n\n\n  if (parsed.adverb && parsed.adverb.found) {\n    var match = parsed.adverb.text('reduced') + '$';\n\n    if (vb.has(match)) {\n      parsed.adverbAfter = true;\n    }\n  }\n\n  return parsed;\n};\n\nvar parse$2 = parseVerb;\n\n/** too many special cases for is/was/will be*/\n\nvar toBe = function toBe(parsed) {\n  var isI = false;\n  var plural = isPlural_1$2(parsed);\n  var isNegative = parsed.negative.found; //account for 'i is' -> 'i am' irregular\n  // if (vb.parent && vb.parent.has('i #Adverb? #Copula')) {\n  //   isI = true;\n  // }\n  // 'i look', not 'i looks'\n\n  if (parsed.verb.lookBehind('(i|we) (#Adverb|#Verb)?$').found) {\n    isI = true;\n  }\n\n  var obj = {\n    PastTense: 'was',\n    PresentTense: 'is',\n    FutureTense: 'will be',\n    Infinitive: 'is',\n    Gerund: 'being',\n    Actor: '',\n    PerfectTense: 'been',\n    Pluperfect: 'been'\n  }; //\"i is\" -> \"i am\"\n\n  if (isI === true) {\n    obj.PresentTense = 'am';\n    obj.Infinitive = 'am';\n  }\n\n  if (plural) {\n    obj.PastTense = 'were';\n    obj.PresentTense = 'are';\n    obj.Infinitive = 'are';\n  }\n\n  if (isNegative) {\n    obj.PastTense += ' not';\n    obj.PresentTense += ' not';\n    obj.FutureTense = 'will not be';\n    obj.Infinitive += ' not';\n    obj.PerfectTense = 'not ' + obj.PerfectTense;\n    obj.Pluperfect = 'not ' + obj.Pluperfect;\n    obj.Gerund = 'not ' + obj.Gerund;\n  }\n\n  return obj;\n};\n\nvar toBe_1 = toBe;\n\nvar conjugate$2 = function conjugate(parsed, world) {\n  var verb = parsed.verb; //special handling of 'is', 'will be', etc.\n\n  if (verb.has('#Copula') || verb.out('normal') === 'be' && parsed.auxiliary.has('will')) {\n    return toBe_1(parsed);\n  }\n\n  var hasHyphen = parsed.verb.termList(0).hasHyphen();\n  var infinitive = toInfinitive_1$1(parsed, world);\n\n  if (!infinitive) {\n    return {};\n  }\n\n  var forms = world.transforms.conjugate(infinitive, world);\n  forms.Infinitive = infinitive; // add particle to phrasal verbs ('fall over')\n\n  if (parsed.particle.found) {\n    var particle = parsed.particle.text();\n    var space = hasHyphen === true ? '-' : ' ';\n    Object.keys(forms).forEach(function (k) {\n      return forms[k] += space + particle;\n    });\n  } //put the adverb at the end?\n\n\n  if (parsed.adverb.found) {\n    var adverb = parsed.adverb.text();\n\n    var _space = hasHyphen === true ? '-' : ' ';\n\n    if (parsed.adverbAfter === true) {\n      Object.keys(forms).forEach(function (k) {\n        return forms[k] += _space + adverb;\n      });\n    } else {\n      Object.keys(forms).forEach(function (k) {\n        return forms[k] = adverb + _space + forms[k];\n      });\n    }\n  } //apply negative\n\n\n  var isNegative = parsed.negative.found;\n\n  if (isNegative) {\n    forms.PastTense = 'did not ' + forms.Infinitive;\n    forms.PresentTense = 'does not ' + forms.Infinitive;\n    forms.Gerund = 'not ' + forms.Gerund;\n  } //future Tense is pretty straightforward\n\n\n  if (!forms.FutureTense) {\n    if (isNegative) {\n      forms.FutureTense = 'will not ' + forms.Infinitive;\n    } else {\n      forms.FutureTense = 'will ' + forms.Infinitive;\n    }\n  }\n\n  if (isNegative) {\n    forms.Infinitive = 'not ' + forms.Infinitive;\n  }\n\n  return forms;\n};\n\nvar conjugate_1$1 = conjugate$2;\n\nvar methods$7 = {\n  /** overload the original json with verb information */\n  json: function json(options) {\n    var _this = this;\n\n    var n = null;\n\n    if (typeof options === 'number') {\n      n = options;\n      options = null;\n    }\n\n    options = options || {\n      text: true,\n      normal: true,\n      trim: true,\n      terms: true\n    };\n    var res = [];\n    this.forEach(function (p) {\n      var json = p.json(options)[0];\n      var parsed = parse$2(p);\n      json.parts = {};\n      Object.keys(parsed).forEach(function (k) {\n        if (parsed[k] && parsed[k].isA === 'Doc') {\n          json.parts[k] = parsed[k].text('normal');\n        } else {\n          json.parts[k] = parsed[k];\n        }\n      });\n      json.isNegative = p.has('#Negative');\n      json.conjugations = conjugate_1$1(parsed, _this.world);\n      res.push(json);\n    });\n\n    if (n !== null) {\n      return res[n];\n    }\n\n    return res;\n  },\n\n  /** grab the adverbs describing these verbs */\n  adverbs: function adverbs() {\n    var list = []; // look at internal adverbs\n\n    this.forEach(function (vb) {\n      var advb = parse$2(vb).adverb;\n\n      if (advb.found) {\n        list = list.concat(advb.list);\n      }\n    }); // look for leading adverbs\n\n    var m = this.lookBehind('#Adverb+$');\n\n    if (m.found) {\n      list = m.list.concat(list);\n    } // look for trailing adverbs\n\n\n    m = this.lookAhead('^#Adverb+');\n\n    if (m.found) {\n      list = list.concat(m.list);\n    }\n\n    return this.buildFrom(list);\n  },\n\n  /**return verbs like 'we walk' and not 'spencer walks' */\n  isPlural: function isPlural() {\n    var _this2 = this;\n\n    var list = [];\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      if (isPlural_1$2(parsed, _this2.world) === true) {\n        list.push(vb.list[0]);\n      }\n    });\n    return this.buildFrom(list);\n  },\n\n  /** return verbs like 'spencer walks' and not 'we walk' */\n  isSingular: function isSingular() {\n    var _this3 = this;\n\n    var list = [];\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      if (isPlural_1$2(parsed, _this3.world) === false) {\n        list.push(vb.list[0]);\n      }\n    });\n    return this.buildFrom(list);\n  },\n\n  /**  */\n  conjugate: function conjugate() {\n    var _this4 = this;\n\n    var result = [];\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      var forms = conjugate_1$1(parsed, _this4.world);\n\n      result.push(forms);\n    });\n    return result;\n  },\n\n  /** */\n  toPastTense: function toPastTense() {\n    var _this5 = this;\n\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      var str = conjugate_1$1(parsed, _this5.world).PastTense;\n\n      if (str) {\n        vb.replaceWith(str, false); // vb.tag('PastTense')\n      }\n    });\n    return this;\n  },\n\n  /** */\n  toPresentTense: function toPresentTense() {\n    var _this6 = this;\n\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      var obj = conjugate_1$1(parsed, _this6.world);\n\n      var str = obj.PresentTense; // 'i look', not 'i looks'\n\n      if (vb.lookBehind('(i|we) (#Adverb|#Verb)?$').found) {\n        str = obj.Infinitive;\n      }\n\n      if (str) {\n        vb.replaceWith(str, false);\n        vb.tag('PresentTense');\n      }\n    });\n    return this;\n  },\n\n  /** */\n  toFutureTense: function toFutureTense() {\n    var _this7 = this;\n\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      var str = conjugate_1$1(parsed, _this7.world).FutureTense;\n\n      if (str) {\n        vb.replaceWith(str, false);\n        vb.tag('FutureTense');\n      }\n    });\n    return this;\n  },\n\n  /** */\n  toInfinitive: function toInfinitive() {\n    var _this8 = this;\n\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      var str = conjugate_1$1(parsed, _this8.world).Infinitive;\n\n      if (str) {\n        vb.replaceWith(str, false);\n        vb.tag('Infinitive');\n      }\n    });\n    return this;\n  },\n\n  /** */\n  toGerund: function toGerund() {\n    var _this9 = this;\n\n    this.forEach(function (vb) {\n      var parsed = parse$2(vb);\n\n      var str = conjugate_1$1(parsed, _this9.world).Gerund;\n\n      if (str) {\n        vb.replaceWith(str, false);\n        vb.tag('Gerund');\n      }\n    });\n    return this;\n  },\n\n  /** return only verbs with 'not'*/\n  isNegative: function isNegative() {\n    return this[\"if\"]('#Negative');\n  },\n\n  /**  return only verbs without 'not'*/\n  isPositive: function isPositive() {\n    return this.ifNo('#Negative');\n  },\n\n  /** add a 'not' to these verbs */\n  toNegative: function toNegative() {\n    var _this10 = this;\n\n    this.list.forEach(function (p) {\n      var doc = _this10.buildFrom([p]);\n\n      var parsed = parse$2(doc);\n\n      toNegative_1(parsed, doc.world);\n    });\n    return this;\n  },\n\n  /** remove 'not' from these verbs */\n  toPositive: function toPositive() {\n    var m = this.match('do not #Verb');\n\n    if (m.found) {\n      m.remove('do not');\n    }\n\n    return this.remove('#Negative');\n  }\n};\n\nvar addMethod$9 = function addMethod(Doc) {\n  /**  */\n  var Verbs = /*#__PURE__*/function (_Doc) {\n    _inherits(Verbs, _Doc);\n\n    var _super = _createSuper(Verbs);\n\n    function Verbs() {\n      _classCallCheck(this, Verbs);\n\n      return _super.apply(this, arguments);\n    }\n\n    return Verbs;\n  }(Doc); // add-in our methods\n\n\n  Object.assign(Verbs.prototype, methods$7); // aliases\n\n  Verbs.prototype.negate = Verbs.prototype.toNegative;\n\n  Doc.prototype.verbs = function (n) {\n    var match = this.match('(#Adverb|#Auxiliary|#Verb|#Negative|#Particle)+'); // try to ignore leading and trailing adverbs\n\n    match = match.not('^#Adverb+');\n    match = match.not('#Adverb+$'); // handle commas:\n    // don't split 'really, really'\n\n    var keep = match.match('(#Adverb && @hasComma) #Adverb'); // // but split the other commas\n\n    var m = match.not(keep).splitAfter('@hasComma'); // // combine them back together\n\n    m = m.concat(keep);\n    m.sort('index'); //handle slashes?\n    //ensure there's actually a verb\n\n    m = m[\"if\"]('#Verb'); // the reason he will is ...\n\n    if (m.has('(is|was)$')) {\n      m = m.splitBefore('(is|was)$');\n    } //grab (n)th result\n\n\n    if (typeof n === 'number') {\n      m = m.get(n);\n    }\n\n    var vb = new Verbs(m.list, this, this.world);\n    return vb;\n  };\n\n  return Doc;\n};\n\nvar Verbs = addMethod$9;\n\nvar addMethod$a = function addMethod(Doc) {\n  /**  */\n  var People = /*#__PURE__*/function (_Doc) {\n    _inherits(People, _Doc);\n\n    var _super = _createSuper(People);\n\n    function People() {\n      _classCallCheck(this, People);\n\n      return _super.apply(this, arguments);\n    }\n\n    return People;\n  }(Doc);\n\n  Doc.prototype.people = function (n) {\n    var match = this.splitAfter('@hasComma');\n    match = match.match('#Person+'); //grab (n)th result\n\n    if (typeof n === 'number') {\n      match = match.get(n);\n    }\n\n    return new People(match.list, this, this.world);\n  };\n\n  return Doc;\n};\n\nvar People = addMethod$a;\n\nvar subclass = [Abbreviations, Acronyms, Clauses, Contractions, Lists, Nouns, Parentheses, Possessives, Quotations, Verbs, People];\n\nvar extend = function extend(Doc) {\n  // add basic methods\n  Object.keys(_simple).forEach(function (k) {\n    return Doc.prototype[k] = _simple[k];\n  }); // add subclassed methods\n\n  subclass.forEach(function (addFn) {\n    return addFn(Doc);\n  });\n  return Doc;\n};\n\nvar Subset = extend;\n\nvar methods$8 = {\n  misc: methods$4,\n  selections: _simple\n};\n/** a parsed text object */\n\nvar Doc = /*#__PURE__*/function () {\n  function Doc(list, from, world) {\n    var _this = this;\n\n    _classCallCheck(this, Doc);\n\n    this.list = list; //quiet these properties in console.logs\n\n    Object.defineProperty(this, 'from', {\n      enumerable: false,\n      value: from,\n      writable: true\n    }); //borrow some missing data from parent\n\n    if (world === undefined && from !== undefined) {\n      world = from.world;\n    } //'world' getter\n\n\n    Object.defineProperty(this, 'world', {\n      enumerable: false,\n      value: world,\n      writable: true\n    }); //fast-scans for our data\n\n    Object.defineProperty(this, '_cache', {\n      enumerable: false,\n      writable: true,\n      value: {}\n    }); //'found' getter\n\n    Object.defineProperty(this, 'found', {\n      get: function get() {\n        return _this.list.length > 0;\n      }\n    }); //'length' getter\n\n    Object.defineProperty(this, 'length', {\n      get: function get() {\n        return _this.list.length;\n      }\n    }); // this is way easier than .constructor.name...\n\n    Object.defineProperty(this, 'isA', {\n      get: function get() {\n        return 'Doc';\n      }\n    });\n  }\n  /** run part-of-speech tagger on all results*/\n\n\n  _createClass(Doc, [{\n    key: \"tagger\",\n    value: function tagger() {\n      return _02Tagger(this);\n    }\n    /** pool is stored on phrase objects */\n\n  }, {\n    key: \"pool\",\n    value: function pool() {\n      if (this.list.length > 0) {\n        return this.list[0].pool;\n      }\n\n      return this.all().list[0].pool;\n    }\n  }]);\n\n  return Doc;\n}();\n/** create a new Document object */\n\n\nDoc.prototype.buildFrom = function (list) {\n  list = list.map(function (p) {\n    return p.clone(true);\n  }); // new this.constructor()\n\n  var doc = new Doc(list, this, this.world);\n  return doc;\n};\n/** create a new Document from plaintext. */\n\n\nDoc.prototype.fromText = function (str) {\n  var list = _01Tokenizer(str, this.world, this.pool());\n  return this.buildFrom(list);\n};\n\nObject.assign(Doc.prototype, methods$8.misc);\nObject.assign(Doc.prototype, methods$8.selections); //add sub-classes\n\nSubset(Doc); //aliases\n\nvar aliases$1 = {\n  untag: 'unTag',\n  and: 'match',\n  notIf: 'ifNo',\n  only: 'if',\n  onlyIf: 'if'\n};\nObject.keys(aliases$1).forEach(function (k) {\n  return Doc.prototype[k] = Doc.prototype[aliases$1[k]];\n});\nvar Doc_1 = Doc;\n\nvar smallTagger = function smallTagger(doc) {\n  var terms = doc.termList();\n  _01Lexicon(terms, doc.world);\n  return doc;\n};\n\nvar tiny = smallTagger;\n\nfunction instance(worldInstance) {\n  //blast-out our word-lists, just once\n  var world = worldInstance;\n  /** parse and tag text into a compromise object  */\n\n  var nlp = function nlp() {\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var lexicon = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (lexicon) {\n      world.addWords(lexicon);\n    }\n\n    var list = _01Tokenizer(text, world);\n    var doc = new Doc_1(list, null, world);\n    doc.tagger();\n    return doc;\n  };\n  /** parse text into a compromise object, without running POS-tagging */\n\n\n  nlp.tokenize = function () {\n    var text = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var lexicon = arguments.length > 1 ? arguments[1] : undefined;\n    var w = world;\n\n    if (lexicon) {\n      w = w.clone();\n      w.words = {};\n      w.addWords(lexicon);\n    }\n\n    var list = _01Tokenizer(text, w);\n    var doc = new Doc_1(list, null, w);\n\n    if (lexicon) {\n      tiny(doc);\n    }\n\n    return doc;\n  };\n  /** mix in a compromise-plugin */\n\n\n  nlp.extend = function (fn) {\n    fn(Doc_1, world, this, Phrase_1, Term_1, Pool_1);\n    return this;\n  };\n  /** create a compromise Doc object from .json() results */\n\n\n  nlp.fromJSON = function (json) {\n    var list = fromJSON_1(json, world);\n    return new Doc_1(list, null, world);\n  };\n  /** make a deep-copy of the library state */\n\n\n  nlp.clone = function () {\n    return instance(world.clone());\n  };\n  /** log our decision-making for debugging */\n\n\n  nlp.verbose = function () {\n    var bool = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    world.verbose(bool);\n    return this;\n  };\n  /** grab currently-used World object */\n\n\n  nlp.world = function () {\n    return world;\n  };\n  /** current version of the library */\n\n\n  nlp.version = _version; // alias\n\n  nlp[\"import\"] = nlp.load;\n  return nlp;\n}\n\nvar src = instance(new World_1());\n\nexport default src;\n","export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","/*! https://mths.be/punycode v1.4.1 by @mathias */\n;(function(root) {\n\n\t/** Detect free variables */\n\tvar freeExports = typeof exports == 'object' && exports &&\n\t\t!exports.nodeType && exports;\n\tvar freeModule = typeof module == 'object' && module &&\n\t\t!module.nodeType && module;\n\tvar freeGlobal = typeof global == 'object' && global;\n\tif (\n\t\tfreeGlobal.global === freeGlobal ||\n\t\tfreeGlobal.window === freeGlobal ||\n\t\tfreeGlobal.self === freeGlobal\n\t) {\n\t\troot = freeGlobal;\n\t}\n\n\t/**\n\t * The `punycode` object.\n\t * @name punycode\n\t * @type Object\n\t */\n\tvar punycode,\n\n\t/** Highest positive signed 32-bit float value */\n\tmaxInt = 2147483647, // aka. 0x7FFFFFFF or 2^31-1\n\n\t/** Bootstring parameters */\n\tbase = 36,\n\ttMin = 1,\n\ttMax = 26,\n\tskew = 38,\n\tdamp = 700,\n\tinitialBias = 72,\n\tinitialN = 128, // 0x80\n\tdelimiter = '-', // '\\x2D'\n\n\t/** Regular expressions */\n\tregexPunycode = /^xn--/,\n\tregexNonASCII = /[^\\x20-\\x7E]/, // unprintable ASCII chars + non-ASCII chars\n\tregexSeparators = /[\\x2E\\u3002\\uFF0E\\uFF61]/g, // RFC 3490 separators\n\n\t/** Error messages */\n\terrors = {\n\t\t'overflow': 'Overflow: input needs wider integers to process',\n\t\t'not-basic': 'Illegal input >= 0x80 (not a basic code point)',\n\t\t'invalid-input': 'Invalid input'\n\t},\n\n\t/** Convenience shortcuts */\n\tbaseMinusTMin = base - tMin,\n\tfloor = Math.floor,\n\tstringFromCharCode = String.fromCharCode,\n\n\t/** Temporary variable */\n\tkey;\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/**\n\t * A generic error utility function.\n\t * @private\n\t * @param {String} type The error type.\n\t * @returns {Error} Throws a `RangeError` with the applicable error message.\n\t */\n\tfunction error(type) {\n\t\tthrow new RangeError(errors[type]);\n\t}\n\n\t/**\n\t * A generic `Array#map` utility function.\n\t * @private\n\t * @param {Array} array The array to iterate over.\n\t * @param {Function} callback The function that gets called for every array\n\t * item.\n\t * @returns {Array} A new array of values returned by the callback function.\n\t */\n\tfunction map(array, fn) {\n\t\tvar length = array.length;\n\t\tvar result = [];\n\t\twhile (length--) {\n\t\t\tresult[length] = fn(array[length]);\n\t\t}\n\t\treturn result;\n\t}\n\n\t/**\n\t * A simple `Array#map`-like wrapper to work with domain name strings or email\n\t * addresses.\n\t * @private\n\t * @param {String} domain The domain name or email address.\n\t * @param {Function} callback The function that gets called for every\n\t * character.\n\t * @returns {Array} A new string of characters returned by the callback\n\t * function.\n\t */\n\tfunction mapDomain(string, fn) {\n\t\tvar parts = string.split('@');\n\t\tvar result = '';\n\t\tif (parts.length > 1) {\n\t\t\t// In email addresses, only the domain name should be punycoded. Leave\n\t\t\t// the local part (i.e. everything up to `@`) intact.\n\t\t\tresult = parts[0] + '@';\n\t\t\tstring = parts[1];\n\t\t}\n\t\t// Avoid `split(regex)` for IE8 compatibility. See #17.\n\t\tstring = string.replace(regexSeparators, '\\x2E');\n\t\tvar labels = string.split('.');\n\t\tvar encoded = map(labels, fn).join('.');\n\t\treturn result + encoded;\n\t}\n\n\t/**\n\t * Creates an array containing the numeric code points of each Unicode\n\t * character in the string. While JavaScript uses UCS-2 internally,\n\t * this function will convert a pair of surrogate halves (each of which\n\t * UCS-2 exposes as separate characters) into a single code point,\n\t * matching UTF-16.\n\t * @see `punycode.ucs2.encode`\n\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t * @memberOf punycode.ucs2\n\t * @name decode\n\t * @param {String} string The Unicode input string (UCS-2).\n\t * @returns {Array} The new array of code points.\n\t */\n\tfunction ucs2decode(string) {\n\t\tvar output = [],\n\t\t    counter = 0,\n\t\t    length = string.length,\n\t\t    value,\n\t\t    extra;\n\t\twhile (counter < length) {\n\t\t\tvalue = string.charCodeAt(counter++);\n\t\t\tif (value >= 0xD800 && value <= 0xDBFF && counter < length) {\n\t\t\t\t// high surrogate, and there is a next character\n\t\t\t\textra = string.charCodeAt(counter++);\n\t\t\t\tif ((extra & 0xFC00) == 0xDC00) { // low surrogate\n\t\t\t\t\toutput.push(((value & 0x3FF) << 10) + (extra & 0x3FF) + 0x10000);\n\t\t\t\t} else {\n\t\t\t\t\t// unmatched surrogate; only append this code unit, in case the next\n\t\t\t\t\t// code unit is the high surrogate of a surrogate pair\n\t\t\t\t\toutput.push(value);\n\t\t\t\t\tcounter--;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\toutput.push(value);\n\t\t\t}\n\t\t}\n\t\treturn output;\n\t}\n\n\t/**\n\t * Creates a string based on an array of numeric code points.\n\t * @see `punycode.ucs2.decode`\n\t * @memberOf punycode.ucs2\n\t * @name encode\n\t * @param {Array} codePoints The array of numeric code points.\n\t * @returns {String} The new Unicode string (UCS-2).\n\t */\n\tfunction ucs2encode(array) {\n\t\treturn map(array, function(value) {\n\t\t\tvar output = '';\n\t\t\tif (value > 0xFFFF) {\n\t\t\t\tvalue -= 0x10000;\n\t\t\t\toutput += stringFromCharCode(value >>> 10 & 0x3FF | 0xD800);\n\t\t\t\tvalue = 0xDC00 | value & 0x3FF;\n\t\t\t}\n\t\t\toutput += stringFromCharCode(value);\n\t\t\treturn output;\n\t\t}).join('');\n\t}\n\n\t/**\n\t * Converts a basic code point into a digit/integer.\n\t * @see `digitToBasic()`\n\t * @private\n\t * @param {Number} codePoint The basic numeric code point value.\n\t * @returns {Number} The numeric value of a basic code point (for use in\n\t * representing integers) in the range `0` to `base - 1`, or `base` if\n\t * the code point does not represent a value.\n\t */\n\tfunction basicToDigit(codePoint) {\n\t\tif (codePoint - 48 < 10) {\n\t\t\treturn codePoint - 22;\n\t\t}\n\t\tif (codePoint - 65 < 26) {\n\t\t\treturn codePoint - 65;\n\t\t}\n\t\tif (codePoint - 97 < 26) {\n\t\t\treturn codePoint - 97;\n\t\t}\n\t\treturn base;\n\t}\n\n\t/**\n\t * Converts a digit/integer into a basic code point.\n\t * @see `basicToDigit()`\n\t * @private\n\t * @param {Number} digit The numeric value of a basic code point.\n\t * @returns {Number} The basic code point whose value (when used for\n\t * representing integers) is `digit`, which needs to be in the range\n\t * `0` to `base - 1`. If `flag` is non-zero, the uppercase form is\n\t * used; else, the lowercase form is used. The behavior is undefined\n\t * if `flag` is non-zero and `digit` has no uppercase form.\n\t */\n\tfunction digitToBasic(digit, flag) {\n\t\t//  0..25 map to ASCII a..z or A..Z\n\t\t// 26..35 map to ASCII 0..9\n\t\treturn digit + 22 + 75 * (digit < 26) - ((flag != 0) << 5);\n\t}\n\n\t/**\n\t * Bias adaptation function as per section 3.4 of RFC 3492.\n\t * https://tools.ietf.org/html/rfc3492#section-3.4\n\t * @private\n\t */\n\tfunction adapt(delta, numPoints, firstTime) {\n\t\tvar k = 0;\n\t\tdelta = firstTime ? floor(delta / damp) : delta >> 1;\n\t\tdelta += floor(delta / numPoints);\n\t\tfor (/* no initialization */; delta > baseMinusTMin * tMax >> 1; k += base) {\n\t\t\tdelta = floor(delta / baseMinusTMin);\n\t\t}\n\t\treturn floor(k + (baseMinusTMin + 1) * delta / (delta + skew));\n\t}\n\n\t/**\n\t * Converts a Punycode string of ASCII-only symbols to a string of Unicode\n\t * symbols.\n\t * @memberOf punycode\n\t * @param {String} input The Punycode string of ASCII-only symbols.\n\t * @returns {String} The resulting string of Unicode symbols.\n\t */\n\tfunction decode(input) {\n\t\t// Don't use UCS-2\n\t\tvar output = [],\n\t\t    inputLength = input.length,\n\t\t    out,\n\t\t    i = 0,\n\t\t    n = initialN,\n\t\t    bias = initialBias,\n\t\t    basic,\n\t\t    j,\n\t\t    index,\n\t\t    oldi,\n\t\t    w,\n\t\t    k,\n\t\t    digit,\n\t\t    t,\n\t\t    /** Cached calculation results */\n\t\t    baseMinusT;\n\n\t\t// Handle the basic code points: let `basic` be the number of input code\n\t\t// points before the last delimiter, or `0` if there is none, then copy\n\t\t// the first basic code points to the output.\n\n\t\tbasic = input.lastIndexOf(delimiter);\n\t\tif (basic < 0) {\n\t\t\tbasic = 0;\n\t\t}\n\n\t\tfor (j = 0; j < basic; ++j) {\n\t\t\t// if it's not a basic code point\n\t\t\tif (input.charCodeAt(j) >= 0x80) {\n\t\t\t\terror('not-basic');\n\t\t\t}\n\t\t\toutput.push(input.charCodeAt(j));\n\t\t}\n\n\t\t// Main decoding loop: start just after the last delimiter if any basic code\n\t\t// points were copied; start at the beginning otherwise.\n\n\t\tfor (index = basic > 0 ? basic + 1 : 0; index < inputLength; /* no final expression */) {\n\n\t\t\t// `index` is the index of the next character to be consumed.\n\t\t\t// Decode a generalized variable-length integer into `delta`,\n\t\t\t// which gets added to `i`. The overflow checking is easier\n\t\t\t// if we increase `i` as we go, then subtract off its starting\n\t\t\t// value at the end to obtain `delta`.\n\t\t\tfor (oldi = i, w = 1, k = base; /* no condition */; k += base) {\n\n\t\t\t\tif (index >= inputLength) {\n\t\t\t\t\terror('invalid-input');\n\t\t\t\t}\n\n\t\t\t\tdigit = basicToDigit(input.charCodeAt(index++));\n\n\t\t\t\tif (digit >= base || digit > floor((maxInt - i) / w)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\ti += digit * w;\n\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\n\t\t\t\tif (digit < t) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tbaseMinusT = base - t;\n\t\t\t\tif (w > floor(maxInt / baseMinusT)) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tw *= baseMinusT;\n\n\t\t\t}\n\n\t\t\tout = output.length + 1;\n\t\t\tbias = adapt(i - oldi, out, oldi == 0);\n\n\t\t\t// `i` was supposed to wrap around from `out` to `0`,\n\t\t\t// incrementing `n` each time, so we'll fix that now:\n\t\t\tif (floor(i / out) > maxInt - n) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tn += floor(i / out);\n\t\t\ti %= out;\n\n\t\t\t// Insert `n` at position `i` of the output\n\t\t\toutput.splice(i++, 0, n);\n\n\t\t}\n\n\t\treturn ucs2encode(output);\n\t}\n\n\t/**\n\t * Converts a string of Unicode symbols (e.g. a domain name label) to a\n\t * Punycode string of ASCII-only symbols.\n\t * @memberOf punycode\n\t * @param {String} input The string of Unicode symbols.\n\t * @returns {String} The resulting Punycode string of ASCII-only symbols.\n\t */\n\tfunction encode(input) {\n\t\tvar n,\n\t\t    delta,\n\t\t    handledCPCount,\n\t\t    basicLength,\n\t\t    bias,\n\t\t    j,\n\t\t    m,\n\t\t    q,\n\t\t    k,\n\t\t    t,\n\t\t    currentValue,\n\t\t    output = [],\n\t\t    /** `inputLength` will hold the number of code points in `input`. */\n\t\t    inputLength,\n\t\t    /** Cached calculation results */\n\t\t    handledCPCountPlusOne,\n\t\t    baseMinusT,\n\t\t    qMinusT;\n\n\t\t// Convert the input in UCS-2 to Unicode\n\t\tinput = ucs2decode(input);\n\n\t\t// Cache the length\n\t\tinputLength = input.length;\n\n\t\t// Initialize the state\n\t\tn = initialN;\n\t\tdelta = 0;\n\t\tbias = initialBias;\n\n\t\t// Handle the basic code points\n\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\tcurrentValue = input[j];\n\t\t\tif (currentValue < 0x80) {\n\t\t\t\toutput.push(stringFromCharCode(currentValue));\n\t\t\t}\n\t\t}\n\n\t\thandledCPCount = basicLength = output.length;\n\n\t\t// `handledCPCount` is the number of code points that have been handled;\n\t\t// `basicLength` is the number of basic code points.\n\n\t\t// Finish the basic string - if it is not empty - with a delimiter\n\t\tif (basicLength) {\n\t\t\toutput.push(delimiter);\n\t\t}\n\n\t\t// Main encoding loop:\n\t\twhile (handledCPCount < inputLength) {\n\n\t\t\t// All non-basic code points < n have been handled already. Find the next\n\t\t\t// larger one:\n\t\t\tfor (m = maxInt, j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\t\t\t\tif (currentValue >= n && currentValue < m) {\n\t\t\t\t\tm = currentValue;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// Increase `delta` enough to advance the decoder's <n,i> state to <m,0>,\n\t\t\t// but guard against overflow\n\t\t\thandledCPCountPlusOne = handledCPCount + 1;\n\t\t\tif (m - n > floor((maxInt - delta) / handledCPCountPlusOne)) {\n\t\t\t\terror('overflow');\n\t\t\t}\n\n\t\t\tdelta += (m - n) * handledCPCountPlusOne;\n\t\t\tn = m;\n\n\t\t\tfor (j = 0; j < inputLength; ++j) {\n\t\t\t\tcurrentValue = input[j];\n\n\t\t\t\tif (currentValue < n && ++delta > maxInt) {\n\t\t\t\t\terror('overflow');\n\t\t\t\t}\n\n\t\t\t\tif (currentValue == n) {\n\t\t\t\t\t// Represent delta as a generalized variable-length integer\n\t\t\t\t\tfor (q = delta, k = base; /* no condition */; k += base) {\n\t\t\t\t\t\tt = k <= bias ? tMin : (k >= bias + tMax ? tMax : k - bias);\n\t\t\t\t\t\tif (q < t) {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tqMinusT = q - t;\n\t\t\t\t\t\tbaseMinusT = base - t;\n\t\t\t\t\t\toutput.push(\n\t\t\t\t\t\t\tstringFromCharCode(digitToBasic(t + qMinusT % baseMinusT, 0))\n\t\t\t\t\t\t);\n\t\t\t\t\t\tq = floor(qMinusT / baseMinusT);\n\t\t\t\t\t}\n\n\t\t\t\t\toutput.push(stringFromCharCode(digitToBasic(q, 0)));\n\t\t\t\t\tbias = adapt(delta, handledCPCountPlusOne, handledCPCount == basicLength);\n\t\t\t\t\tdelta = 0;\n\t\t\t\t\t++handledCPCount;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t++delta;\n\t\t\t++n;\n\n\t\t}\n\t\treturn output.join('');\n\t}\n\n\t/**\n\t * Converts a Punycode string representing a domain name or an email address\n\t * to Unicode. Only the Punycoded parts of the input will be converted, i.e.\n\t * it doesn't matter if you call it on a string that has already been\n\t * converted to Unicode.\n\t * @memberOf punycode\n\t * @param {String} input The Punycoded domain name or email address to\n\t * convert to Unicode.\n\t * @returns {String} The Unicode representation of the given Punycode\n\t * string.\n\t */\n\tfunction toUnicode(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexPunycode.test(string)\n\t\t\t\t? decode(string.slice(4).toLowerCase())\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/**\n\t * Converts a Unicode string representing a domain name or an email address to\n\t * Punycode. Only the non-ASCII parts of the domain name will be converted,\n\t * i.e. it doesn't matter if you call it with a domain that's already in\n\t * ASCII.\n\t * @memberOf punycode\n\t * @param {String} input The domain name or email address to convert, as a\n\t * Unicode string.\n\t * @returns {String} The Punycode representation of the given domain name or\n\t * email address.\n\t */\n\tfunction toASCII(input) {\n\t\treturn mapDomain(input, function(string) {\n\t\t\treturn regexNonASCII.test(string)\n\t\t\t\t? 'xn--' + encode(string)\n\t\t\t\t: string;\n\t\t});\n\t}\n\n\t/*--------------------------------------------------------------------------*/\n\n\t/** Define the public API */\n\tpunycode = {\n\t\t/**\n\t\t * A string representing the current Punycode.js version number.\n\t\t * @memberOf punycode\n\t\t * @type String\n\t\t */\n\t\t'version': '1.4.1',\n\t\t/**\n\t\t * An object of methods to convert from JavaScript's internal character\n\t\t * representation (UCS-2) to Unicode code points, and back.\n\t\t * @see <https://mathiasbynens.be/notes/javascript-encoding>\n\t\t * @memberOf punycode\n\t\t * @type Object\n\t\t */\n\t\t'ucs2': {\n\t\t\t'decode': ucs2decode,\n\t\t\t'encode': ucs2encode\n\t\t},\n\t\t'decode': decode,\n\t\t'encode': encode,\n\t\t'toASCII': toASCII,\n\t\t'toUnicode': toUnicode\n\t};\n\n\t/** Expose `punycode` */\n\t// Some AMD build optimizers, like r.js, check for specific condition patterns\n\t// like the following:\n\tif (\n\t\ttypeof define == 'function' &&\n\t\ttypeof define.amd == 'object' &&\n\t\tdefine.amd\n\t) {\n\t\tdefine('punycode', function() {\n\t\t\treturn punycode;\n\t\t});\n\t} else if (freeExports && freeModule) {\n\t\tif (module.exports == freeExports) {\n\t\t\t// in Node.js, io.js, or RingoJS v0.8.0+\n\t\t\tfreeModule.exports = punycode;\n\t\t} else {\n\t\t\t// in Narwhal or RingoJS v0.7.0-\n\t\t\tfor (key in punycode) {\n\t\t\t\tpunycode.hasOwnProperty(key) && (freeExports[key] = punycode[key]);\n\t\t\t}\n\t\t}\n\t} else {\n\t\t// in Rhino or a web browser\n\t\troot.punycode = punycode;\n\t}\n\n}(this));\n","module.exports={9:\"Tab;\",10:\"NewLine;\",33:\"excl;\",34:\"quot;\",35:\"num;\",36:\"dollar;\",37:\"percnt;\",38:\"amp;\",39:\"apos;\",40:\"lpar;\",41:\"rpar;\",42:\"midast;\",43:\"plus;\",44:\"comma;\",46:\"period;\",47:\"sol;\",58:\"colon;\",59:\"semi;\",60:\"lt;\",61:\"equals;\",62:\"gt;\",63:\"quest;\",64:\"commat;\",91:\"lsqb;\",92:\"bsol;\",93:\"rsqb;\",94:\"Hat;\",95:\"UnderBar;\",96:\"grave;\",123:\"lcub;\",124:\"VerticalLine;\",125:\"rcub;\",160:\"NonBreakingSpace;\",161:\"iexcl;\",162:\"cent;\",163:\"pound;\",164:\"curren;\",165:\"yen;\",166:\"brvbar;\",167:\"sect;\",168:\"uml;\",169:\"copy;\",170:\"ordf;\",171:\"laquo;\",172:\"not;\",173:\"shy;\",174:\"reg;\",175:\"strns;\",176:\"deg;\",177:\"pm;\",178:\"sup2;\",179:\"sup3;\",180:\"DiacriticalAcute;\",181:\"micro;\",182:\"para;\",183:\"middot;\",184:\"Cedilla;\",185:\"sup1;\",186:\"ordm;\",187:\"raquo;\",188:\"frac14;\",189:\"half;\",190:\"frac34;\",191:\"iquest;\",192:\"Agrave;\",193:\"Aacute;\",194:\"Acirc;\",195:\"Atilde;\",196:\"Auml;\",197:\"Aring;\",198:\"AElig;\",199:\"Ccedil;\",200:\"Egrave;\",201:\"Eacute;\",202:\"Ecirc;\",203:\"Euml;\",204:\"Igrave;\",205:\"Iacute;\",206:\"Icirc;\",207:\"Iuml;\",208:\"ETH;\",209:\"Ntilde;\",210:\"Ograve;\",211:\"Oacute;\",212:\"Ocirc;\",213:\"Otilde;\",214:\"Ouml;\",215:\"times;\",216:\"Oslash;\",217:\"Ugrave;\",218:\"Uacute;\",219:\"Ucirc;\",220:\"Uuml;\",221:\"Yacute;\",222:\"THORN;\",223:\"szlig;\",224:\"agrave;\",225:\"aacute;\",226:\"acirc;\",227:\"atilde;\",228:\"auml;\",229:\"aring;\",230:\"aelig;\",231:\"ccedil;\",232:\"egrave;\",233:\"eacute;\",234:\"ecirc;\",235:\"euml;\",236:\"igrave;\",237:\"iacute;\",238:\"icirc;\",239:\"iuml;\",240:\"eth;\",241:\"ntilde;\",242:\"ograve;\",243:\"oacute;\",244:\"ocirc;\",245:\"otilde;\",246:\"ouml;\",247:\"divide;\",248:\"oslash;\",249:\"ugrave;\",250:\"uacute;\",251:\"ucirc;\",252:\"uuml;\",253:\"yacute;\",254:\"thorn;\",255:\"yuml;\",256:\"Amacr;\",257:\"amacr;\",258:\"Abreve;\",259:\"abreve;\",260:\"Aogon;\",261:\"aogon;\",262:\"Cacute;\",263:\"cacute;\",264:\"Ccirc;\",265:\"ccirc;\",266:\"Cdot;\",267:\"cdot;\",268:\"Ccaron;\",269:\"ccaron;\",270:\"Dcaron;\",271:\"dcaron;\",272:\"Dstrok;\",273:\"dstrok;\",274:\"Emacr;\",275:\"emacr;\",278:\"Edot;\",279:\"edot;\",280:\"Eogon;\",281:\"eogon;\",282:\"Ecaron;\",283:\"ecaron;\",284:\"Gcirc;\",285:\"gcirc;\",286:\"Gbreve;\",287:\"gbreve;\",288:\"Gdot;\",289:\"gdot;\",290:\"Gcedil;\",292:\"Hcirc;\",293:\"hcirc;\",294:\"Hstrok;\",295:\"hstrok;\",296:\"Itilde;\",297:\"itilde;\",298:\"Imacr;\",299:\"imacr;\",302:\"Iogon;\",303:\"iogon;\",304:\"Idot;\",305:\"inodot;\",306:\"IJlig;\",307:\"ijlig;\",308:\"Jcirc;\",309:\"jcirc;\",310:\"Kcedil;\",311:\"kcedil;\",312:\"kgreen;\",313:\"Lacute;\",314:\"lacute;\",315:\"Lcedil;\",316:\"lcedil;\",317:\"Lcaron;\",318:\"lcaron;\",319:\"Lmidot;\",320:\"lmidot;\",321:\"Lstrok;\",322:\"lstrok;\",323:\"Nacute;\",324:\"nacute;\",325:\"Ncedil;\",326:\"ncedil;\",327:\"Ncaron;\",328:\"ncaron;\",329:\"napos;\",330:\"ENG;\",331:\"eng;\",332:\"Omacr;\",333:\"omacr;\",336:\"Odblac;\",337:\"odblac;\",338:\"OElig;\",339:\"oelig;\",340:\"Racute;\",341:\"racute;\",342:\"Rcedil;\",343:\"rcedil;\",344:\"Rcaron;\",345:\"rcaron;\",346:\"Sacute;\",347:\"sacute;\",348:\"Scirc;\",349:\"scirc;\",350:\"Scedil;\",351:\"scedil;\",352:\"Scaron;\",353:\"scaron;\",354:\"Tcedil;\",355:\"tcedil;\",356:\"Tcaron;\",357:\"tcaron;\",358:\"Tstrok;\",359:\"tstrok;\",360:\"Utilde;\",361:\"utilde;\",362:\"Umacr;\",363:\"umacr;\",364:\"Ubreve;\",365:\"ubreve;\",366:\"Uring;\",367:\"uring;\",368:\"Udblac;\",369:\"udblac;\",370:\"Uogon;\",371:\"uogon;\",372:\"Wcirc;\",373:\"wcirc;\",374:\"Ycirc;\",375:\"ycirc;\",376:\"Yuml;\",377:\"Zacute;\",378:\"zacute;\",379:\"Zdot;\",380:\"zdot;\",381:\"Zcaron;\",382:\"zcaron;\",402:\"fnof;\",437:\"imped;\",501:\"gacute;\",567:\"jmath;\",710:\"circ;\",711:\"Hacek;\",728:\"breve;\",729:\"dot;\",730:\"ring;\",731:\"ogon;\",732:\"tilde;\",733:\"DiacriticalDoubleAcute;\",785:\"DownBreve;\",913:\"Alpha;\",914:\"Beta;\",915:\"Gamma;\",916:\"Delta;\",917:\"Epsilon;\",918:\"Zeta;\",919:\"Eta;\",920:\"Theta;\",921:\"Iota;\",922:\"Kappa;\",923:\"Lambda;\",924:\"Mu;\",925:\"Nu;\",926:\"Xi;\",927:\"Omicron;\",928:\"Pi;\",929:\"Rho;\",931:\"Sigma;\",932:\"Tau;\",933:\"Upsilon;\",934:\"Phi;\",935:\"Chi;\",936:\"Psi;\",937:\"Omega;\",945:\"alpha;\",946:\"beta;\",947:\"gamma;\",948:\"delta;\",949:\"epsilon;\",950:\"zeta;\",951:\"eta;\",952:\"theta;\",953:\"iota;\",954:\"kappa;\",955:\"lambda;\",956:\"mu;\",957:\"nu;\",958:\"xi;\",959:\"omicron;\",960:\"pi;\",961:\"rho;\",962:\"varsigma;\",963:\"sigma;\",964:\"tau;\",965:\"upsilon;\",966:\"phi;\",967:\"chi;\",968:\"psi;\",969:\"omega;\",977:\"vartheta;\",978:\"upsih;\",981:\"varphi;\",982:\"varpi;\",988:\"Gammad;\",989:\"gammad;\",1008:\"varkappa;\",1009:\"varrho;\",1013:\"varepsilon;\",1014:\"bepsi;\",1025:\"IOcy;\",1026:\"DJcy;\",1027:\"GJcy;\",1028:\"Jukcy;\",1029:\"DScy;\",1030:\"Iukcy;\",1031:\"YIcy;\",1032:\"Jsercy;\",1033:\"LJcy;\",1034:\"NJcy;\",1035:\"TSHcy;\",1036:\"KJcy;\",1038:\"Ubrcy;\",1039:\"DZcy;\",1040:\"Acy;\",1041:\"Bcy;\",1042:\"Vcy;\",1043:\"Gcy;\",1044:\"Dcy;\",1045:\"IEcy;\",1046:\"ZHcy;\",1047:\"Zcy;\",1048:\"Icy;\",1049:\"Jcy;\",1050:\"Kcy;\",1051:\"Lcy;\",1052:\"Mcy;\",1053:\"Ncy;\",1054:\"Ocy;\",1055:\"Pcy;\",1056:\"Rcy;\",1057:\"Scy;\",1058:\"Tcy;\",1059:\"Ucy;\",1060:\"Fcy;\",1061:\"KHcy;\",1062:\"TScy;\",1063:\"CHcy;\",1064:\"SHcy;\",1065:\"SHCHcy;\",1066:\"HARDcy;\",1067:\"Ycy;\",1068:\"SOFTcy;\",1069:\"Ecy;\",1070:\"YUcy;\",1071:\"YAcy;\",1072:\"acy;\",1073:\"bcy;\",1074:\"vcy;\",1075:\"gcy;\",1076:\"dcy;\",1077:\"iecy;\",1078:\"zhcy;\",1079:\"zcy;\",1080:\"icy;\",1081:\"jcy;\",1082:\"kcy;\",1083:\"lcy;\",1084:\"mcy;\",1085:\"ncy;\",1086:\"ocy;\",1087:\"pcy;\",1088:\"rcy;\",1089:\"scy;\",1090:\"tcy;\",1091:\"ucy;\",1092:\"fcy;\",1093:\"khcy;\",1094:\"tscy;\",1095:\"chcy;\",1096:\"shcy;\",1097:\"shchcy;\",1098:\"hardcy;\",1099:\"ycy;\",1100:\"softcy;\",1101:\"ecy;\",1102:\"yucy;\",1103:\"yacy;\",1105:\"iocy;\",1106:\"djcy;\",1107:\"gjcy;\",1108:\"jukcy;\",1109:\"dscy;\",1110:\"iukcy;\",1111:\"yicy;\",1112:\"jsercy;\",1113:\"ljcy;\",1114:\"njcy;\",1115:\"tshcy;\",1116:\"kjcy;\",1118:\"ubrcy;\",1119:\"dzcy;\",8194:\"ensp;\",8195:\"emsp;\",8196:\"emsp13;\",8197:\"emsp14;\",8199:\"numsp;\",8200:\"puncsp;\",8201:\"ThinSpace;\",8202:\"VeryThinSpace;\",8203:\"ZeroWidthSpace;\",8204:\"zwnj;\",8205:\"zwj;\",8206:\"lrm;\",8207:\"rlm;\",8208:\"hyphen;\",8211:\"ndash;\",8212:\"mdash;\",8213:\"horbar;\",8214:\"Vert;\",8216:\"OpenCurlyQuote;\",8217:\"rsquor;\",8218:\"sbquo;\",8220:\"OpenCurlyDoubleQuote;\",8221:\"rdquor;\",8222:\"ldquor;\",8224:\"dagger;\",8225:\"ddagger;\",8226:\"bullet;\",8229:\"nldr;\",8230:\"mldr;\",8240:\"permil;\",8241:\"pertenk;\",8242:\"prime;\",8243:\"Prime;\",8244:\"tprime;\",8245:\"bprime;\",8249:\"lsaquo;\",8250:\"rsaquo;\",8254:\"OverBar;\",8257:\"caret;\",8259:\"hybull;\",8260:\"frasl;\",8271:\"bsemi;\",8279:\"qprime;\",8287:\"MediumSpace;\",8288:\"NoBreak;\",8289:\"ApplyFunction;\",8290:\"it;\",8291:\"InvisibleComma;\",8364:\"euro;\",8411:\"TripleDot;\",8412:\"DotDot;\",8450:\"Copf;\",8453:\"incare;\",8458:\"gscr;\",8459:\"Hscr;\",8460:\"Poincareplane;\",8461:\"quaternions;\",8462:\"planckh;\",8463:\"plankv;\",8464:\"Iscr;\",8465:\"imagpart;\",8466:\"Lscr;\",8467:\"ell;\",8469:\"Nopf;\",8470:\"numero;\",8471:\"copysr;\",8472:\"wp;\",8473:\"primes;\",8474:\"rationals;\",8475:\"Rscr;\",8476:\"Rfr;\",8477:\"Ropf;\",8478:\"rx;\",8482:\"trade;\",8484:\"Zopf;\",8487:\"mho;\",8488:\"Zfr;\",8489:\"iiota;\",8492:\"Bscr;\",8493:\"Cfr;\",8495:\"escr;\",8496:\"expectation;\",8497:\"Fscr;\",8499:\"phmmat;\",8500:\"oscr;\",8501:\"aleph;\",8502:\"beth;\",8503:\"gimel;\",8504:\"daleth;\",8517:\"DD;\",8518:\"DifferentialD;\",8519:\"exponentiale;\",8520:\"ImaginaryI;\",8531:\"frac13;\",8532:\"frac23;\",8533:\"frac15;\",8534:\"frac25;\",8535:\"frac35;\",8536:\"frac45;\",8537:\"frac16;\",8538:\"frac56;\",8539:\"frac18;\",8540:\"frac38;\",8541:\"frac58;\",8542:\"frac78;\",8592:\"slarr;\",8593:\"uparrow;\",8594:\"srarr;\",8595:\"ShortDownArrow;\",8596:\"leftrightarrow;\",8597:\"varr;\",8598:\"UpperLeftArrow;\",8599:\"UpperRightArrow;\",8600:\"searrow;\",8601:\"swarrow;\",8602:\"nleftarrow;\",8603:\"nrightarrow;\",8605:\"rightsquigarrow;\",8606:\"twoheadleftarrow;\",8607:\"Uarr;\",8608:\"twoheadrightarrow;\",8609:\"Darr;\",8610:\"leftarrowtail;\",8611:\"rightarrowtail;\",8612:\"mapstoleft;\",8613:\"UpTeeArrow;\",8614:\"RightTeeArrow;\",8615:\"mapstodown;\",8617:\"larrhk;\",8618:\"rarrhk;\",8619:\"looparrowleft;\",8620:\"rarrlp;\",8621:\"leftrightsquigarrow;\",8622:\"nleftrightarrow;\",8624:\"lsh;\",8625:\"rsh;\",8626:\"ldsh;\",8627:\"rdsh;\",8629:\"crarr;\",8630:\"curvearrowleft;\",8631:\"curvearrowright;\",8634:\"olarr;\",8635:\"orarr;\",8636:\"lharu;\",8637:\"lhard;\",8638:\"upharpoonright;\",8639:\"upharpoonleft;\",8640:\"RightVector;\",8641:\"rightharpoondown;\",8642:\"RightDownVector;\",8643:\"LeftDownVector;\",8644:\"rlarr;\",8645:\"UpArrowDownArrow;\",8646:\"lrarr;\",8647:\"llarr;\",8648:\"uuarr;\",8649:\"rrarr;\",8650:\"downdownarrows;\",8651:\"ReverseEquilibrium;\",8652:\"rlhar;\",8653:\"nLeftarrow;\",8654:\"nLeftrightarrow;\",8655:\"nRightarrow;\",8656:\"Leftarrow;\",8657:\"Uparrow;\",8658:\"Rightarrow;\",8659:\"Downarrow;\",8660:\"Leftrightarrow;\",8661:\"vArr;\",8662:\"nwArr;\",8663:\"neArr;\",8664:\"seArr;\",8665:\"swArr;\",8666:\"Lleftarrow;\",8667:\"Rrightarrow;\",8669:\"zigrarr;\",8676:\"LeftArrowBar;\",8677:\"RightArrowBar;\",8693:\"duarr;\",8701:\"loarr;\",8702:\"roarr;\",8703:\"hoarr;\",8704:\"forall;\",8705:\"complement;\",8706:\"PartialD;\",8707:\"Exists;\",8708:\"NotExists;\",8709:\"varnothing;\",8711:\"nabla;\",8712:\"isinv;\",8713:\"notinva;\",8715:\"SuchThat;\",8716:\"NotReverseElement;\",8719:\"Product;\",8720:\"Coproduct;\",8721:\"sum;\",8722:\"minus;\",8723:\"mp;\",8724:\"plusdo;\",8726:\"ssetmn;\",8727:\"lowast;\",8728:\"SmallCircle;\",8730:\"Sqrt;\",8733:\"vprop;\",8734:\"infin;\",8735:\"angrt;\",8736:\"angle;\",8737:\"measuredangle;\",8738:\"angsph;\",8739:\"VerticalBar;\",8740:\"nsmid;\",8741:\"spar;\",8742:\"nspar;\",8743:\"wedge;\",8744:\"vee;\",8745:\"cap;\",8746:\"cup;\",8747:\"Integral;\",8748:\"Int;\",8749:\"tint;\",8750:\"oint;\",8751:\"DoubleContourIntegral;\",8752:\"Cconint;\",8753:\"cwint;\",8754:\"cwconint;\",8755:\"CounterClockwiseContourIntegral;\",8756:\"therefore;\",8757:\"because;\",8758:\"ratio;\",8759:\"Proportion;\",8760:\"minusd;\",8762:\"mDDot;\",8763:\"homtht;\",8764:\"Tilde;\",8765:\"bsim;\",8766:\"mstpos;\",8767:\"acd;\",8768:\"wreath;\",8769:\"nsim;\",8770:\"esim;\",8771:\"TildeEqual;\",8772:\"nsimeq;\",8773:\"TildeFullEqual;\",8774:\"simne;\",8775:\"NotTildeFullEqual;\",8776:\"TildeTilde;\",8777:\"NotTildeTilde;\",8778:\"approxeq;\",8779:\"apid;\",8780:\"bcong;\",8781:\"CupCap;\",8782:\"HumpDownHump;\",8783:\"HumpEqual;\",8784:\"esdot;\",8785:\"eDot;\",8786:\"fallingdotseq;\",8787:\"risingdotseq;\",8788:\"coloneq;\",8789:\"eqcolon;\",8790:\"eqcirc;\",8791:\"cire;\",8793:\"wedgeq;\",8794:\"veeeq;\",8796:\"trie;\",8799:\"questeq;\",8800:\"NotEqual;\",8801:\"equiv;\",8802:\"NotCongruent;\",8804:\"leq;\",8805:\"GreaterEqual;\",8806:\"LessFullEqual;\",8807:\"GreaterFullEqual;\",8808:\"lneqq;\",8809:\"gneqq;\",8810:\"NestedLessLess;\",8811:\"NestedGreaterGreater;\",8812:\"twixt;\",8813:\"NotCupCap;\",8814:\"NotLess;\",8815:\"NotGreater;\",8816:\"NotLessEqual;\",8817:\"NotGreaterEqual;\",8818:\"lsim;\",8819:\"gtrsim;\",8820:\"NotLessTilde;\",8821:\"NotGreaterTilde;\",8822:\"lg;\",8823:\"gtrless;\",8824:\"ntlg;\",8825:\"ntgl;\",8826:\"Precedes;\",8827:\"Succeeds;\",8828:\"PrecedesSlantEqual;\",8829:\"SucceedsSlantEqual;\",8830:\"prsim;\",8831:\"succsim;\",8832:\"nprec;\",8833:\"nsucc;\",8834:\"subset;\",8835:\"supset;\",8836:\"nsub;\",8837:\"nsup;\",8838:\"SubsetEqual;\",8839:\"supseteq;\",8840:\"nsubseteq;\",8841:\"nsupseteq;\",8842:\"subsetneq;\",8843:\"supsetneq;\",8845:\"cupdot;\",8846:\"uplus;\",8847:\"SquareSubset;\",8848:\"SquareSuperset;\",8849:\"SquareSubsetEqual;\",8850:\"SquareSupersetEqual;\",8851:\"SquareIntersection;\",8852:\"SquareUnion;\",8853:\"oplus;\",8854:\"ominus;\",8855:\"otimes;\",8856:\"osol;\",8857:\"odot;\",8858:\"ocir;\",8859:\"oast;\",8861:\"odash;\",8862:\"plusb;\",8863:\"minusb;\",8864:\"timesb;\",8865:\"sdotb;\",8866:\"vdash;\",8867:\"LeftTee;\",8868:\"top;\",8869:\"UpTee;\",8871:\"models;\",8872:\"vDash;\",8873:\"Vdash;\",8874:\"Vvdash;\",8875:\"VDash;\",8876:\"nvdash;\",8877:\"nvDash;\",8878:\"nVdash;\",8879:\"nVDash;\",8880:\"prurel;\",8882:\"vltri;\",8883:\"vrtri;\",8884:\"trianglelefteq;\",8885:\"trianglerighteq;\",8886:\"origof;\",8887:\"imof;\",8888:\"mumap;\",8889:\"hercon;\",8890:\"intercal;\",8891:\"veebar;\",8893:\"barvee;\",8894:\"angrtvb;\",8895:\"lrtri;\",8896:\"xwedge;\",8897:\"xvee;\",8898:\"xcap;\",8899:\"xcup;\",8900:\"diamond;\",8901:\"sdot;\",8902:\"Star;\",8903:\"divonx;\",8904:\"bowtie;\",8905:\"ltimes;\",8906:\"rtimes;\",8907:\"lthree;\",8908:\"rthree;\",8909:\"bsime;\",8910:\"cuvee;\",8911:\"cuwed;\",8912:\"Subset;\",8913:\"Supset;\",8914:\"Cap;\",8915:\"Cup;\",8916:\"pitchfork;\",8917:\"epar;\",8918:\"ltdot;\",8919:\"gtrdot;\",8920:\"Ll;\",8921:\"ggg;\",8922:\"LessEqualGreater;\",8923:\"gtreqless;\",8926:\"curlyeqprec;\",8927:\"curlyeqsucc;\",8928:\"nprcue;\",8929:\"nsccue;\",8930:\"nsqsube;\",8931:\"nsqsupe;\",8934:\"lnsim;\",8935:\"gnsim;\",8936:\"prnsim;\",8937:\"succnsim;\",8938:\"ntriangleleft;\",8939:\"ntriangleright;\",8940:\"ntrianglelefteq;\",8941:\"ntrianglerighteq;\",8942:\"vellip;\",8943:\"ctdot;\",8944:\"utdot;\",8945:\"dtdot;\",8946:\"disin;\",8947:\"isinsv;\",8948:\"isins;\",8949:\"isindot;\",8950:\"notinvc;\",8951:\"notinvb;\",8953:\"isinE;\",8954:\"nisd;\",8955:\"xnis;\",8956:\"nis;\",8957:\"notnivc;\",8958:\"notnivb;\",8965:\"barwedge;\",8966:\"doublebarwedge;\",8968:\"LeftCeiling;\",8969:\"RightCeiling;\",8970:\"lfloor;\",8971:\"RightFloor;\",8972:\"drcrop;\",8973:\"dlcrop;\",8974:\"urcrop;\",8975:\"ulcrop;\",8976:\"bnot;\",8978:\"profline;\",8979:\"profsurf;\",8981:\"telrec;\",8982:\"target;\",8988:\"ulcorner;\",8989:\"urcorner;\",8990:\"llcorner;\",8991:\"lrcorner;\",8994:\"sfrown;\",8995:\"ssmile;\",9005:\"cylcty;\",9006:\"profalar;\",9014:\"topbot;\",9021:\"ovbar;\",9023:\"solbar;\",9084:\"angzarr;\",9136:\"lmoustache;\",9137:\"rmoustache;\",9140:\"tbrk;\",9141:\"UnderBracket;\",9142:\"bbrktbrk;\",9180:\"OverParenthesis;\",9181:\"UnderParenthesis;\",9182:\"OverBrace;\",9183:\"UnderBrace;\",9186:\"trpezium;\",9191:\"elinters;\",9251:\"blank;\",9416:\"oS;\",9472:\"HorizontalLine;\",9474:\"boxv;\",9484:\"boxdr;\",9488:\"boxdl;\",9492:\"boxur;\",9496:\"boxul;\",9500:\"boxvr;\",9508:\"boxvl;\",9516:\"boxhd;\",9524:\"boxhu;\",9532:\"boxvh;\",9552:\"boxH;\",9553:\"boxV;\",9554:\"boxdR;\",9555:\"boxDr;\",9556:\"boxDR;\",9557:\"boxdL;\",9558:\"boxDl;\",9559:\"boxDL;\",9560:\"boxuR;\",9561:\"boxUr;\",9562:\"boxUR;\",9563:\"boxuL;\",9564:\"boxUl;\",9565:\"boxUL;\",9566:\"boxvR;\",9567:\"boxVr;\",9568:\"boxVR;\",9569:\"boxvL;\",9570:\"boxVl;\",9571:\"boxVL;\",9572:\"boxHd;\",9573:\"boxhD;\",9574:\"boxHD;\",9575:\"boxHu;\",9576:\"boxhU;\",9577:\"boxHU;\",9578:\"boxvH;\",9579:\"boxVh;\",9580:\"boxVH;\",9600:\"uhblk;\",9604:\"lhblk;\",9608:\"block;\",9617:\"blk14;\",9618:\"blk12;\",9619:\"blk34;\",9633:\"square;\",9642:\"squf;\",9643:\"EmptyVerySmallSquare;\",9645:\"rect;\",9646:\"marker;\",9649:\"fltns;\",9651:\"xutri;\",9652:\"utrif;\",9653:\"utri;\",9656:\"rtrif;\",9657:\"triangleright;\",9661:\"xdtri;\",9662:\"dtrif;\",9663:\"triangledown;\",9666:\"ltrif;\",9667:\"triangleleft;\",9674:\"lozenge;\",9675:\"cir;\",9708:\"tridot;\",9711:\"xcirc;\",9720:\"ultri;\",9721:\"urtri;\",9722:\"lltri;\",9723:\"EmptySmallSquare;\",9724:\"FilledSmallSquare;\",9733:\"starf;\",9734:\"star;\",9742:\"phone;\",9792:\"female;\",9794:\"male;\",9824:\"spadesuit;\",9827:\"clubsuit;\",9829:\"heartsuit;\",9830:\"diams;\",9834:\"sung;\",9837:\"flat;\",9838:\"natural;\",9839:\"sharp;\",10003:\"checkmark;\",10007:\"cross;\",10016:\"maltese;\",10038:\"sext;\",10072:\"VerticalSeparator;\",10098:\"lbbrk;\",10099:\"rbbrk;\",10184:\"bsolhsub;\",10185:\"suphsol;\",10214:\"lobrk;\",10215:\"robrk;\",10216:\"LeftAngleBracket;\",10217:\"RightAngleBracket;\",10218:\"Lang;\",10219:\"Rang;\",10220:\"loang;\",10221:\"roang;\",10229:\"xlarr;\",10230:\"xrarr;\",10231:\"xharr;\",10232:\"xlArr;\",10233:\"xrArr;\",10234:\"xhArr;\",10236:\"xmap;\",10239:\"dzigrarr;\",10498:\"nvlArr;\",10499:\"nvrArr;\",10500:\"nvHarr;\",10501:\"Map;\",10508:\"lbarr;\",10509:\"rbarr;\",10510:\"lBarr;\",10511:\"rBarr;\",10512:\"RBarr;\",10513:\"DDotrahd;\",10514:\"UpArrowBar;\",10515:\"DownArrowBar;\",10518:\"Rarrtl;\",10521:\"latail;\",10522:\"ratail;\",10523:\"lAtail;\",10524:\"rAtail;\",10525:\"larrfs;\",10526:\"rarrfs;\",10527:\"larrbfs;\",10528:\"rarrbfs;\",10531:\"nwarhk;\",10532:\"nearhk;\",10533:\"searhk;\",10534:\"swarhk;\",10535:\"nwnear;\",10536:\"toea;\",10537:\"tosa;\",10538:\"swnwar;\",10547:\"rarrc;\",10549:\"cudarrr;\",10550:\"ldca;\",10551:\"rdca;\",10552:\"cudarrl;\",10553:\"larrpl;\",10556:\"curarrm;\",10557:\"cularrp;\",10565:\"rarrpl;\",10568:\"harrcir;\",10569:\"Uarrocir;\",10570:\"lurdshar;\",10571:\"ldrushar;\",10574:\"LeftRightVector;\",10575:\"RightUpDownVector;\",10576:\"DownLeftRightVector;\",10577:\"LeftUpDownVector;\",10578:\"LeftVectorBar;\",10579:\"RightVectorBar;\",10580:\"RightUpVectorBar;\",10581:\"RightDownVectorBar;\",10582:\"DownLeftVectorBar;\",10583:\"DownRightVectorBar;\",10584:\"LeftUpVectorBar;\",10585:\"LeftDownVectorBar;\",10586:\"LeftTeeVector;\",10587:\"RightTeeVector;\",10588:\"RightUpTeeVector;\",10589:\"RightDownTeeVector;\",10590:\"DownLeftTeeVector;\",10591:\"DownRightTeeVector;\",10592:\"LeftUpTeeVector;\",10593:\"LeftDownTeeVector;\",10594:\"lHar;\",10595:\"uHar;\",10596:\"rHar;\",10597:\"dHar;\",10598:\"luruhar;\",10599:\"ldrdhar;\",10600:\"ruluhar;\",10601:\"rdldhar;\",10602:\"lharul;\",10603:\"llhard;\",10604:\"rharul;\",10605:\"lrhard;\",10606:\"UpEquilibrium;\",10607:\"ReverseUpEquilibrium;\",10608:\"RoundImplies;\",10609:\"erarr;\",10610:\"simrarr;\",10611:\"larrsim;\",10612:\"rarrsim;\",10613:\"rarrap;\",10614:\"ltlarr;\",10616:\"gtrarr;\",10617:\"subrarr;\",10619:\"suplarr;\",10620:\"lfisht;\",10621:\"rfisht;\",10622:\"ufisht;\",10623:\"dfisht;\",10629:\"lopar;\",10630:\"ropar;\",10635:\"lbrke;\",10636:\"rbrke;\",10637:\"lbrkslu;\",10638:\"rbrksld;\",10639:\"lbrksld;\",10640:\"rbrkslu;\",10641:\"langd;\",10642:\"rangd;\",10643:\"lparlt;\",10644:\"rpargt;\",10645:\"gtlPar;\",10646:\"ltrPar;\",10650:\"vzigzag;\",10652:\"vangrt;\",10653:\"angrtvbd;\",10660:\"ange;\",10661:\"range;\",10662:\"dwangle;\",10663:\"uwangle;\",10664:\"angmsdaa;\",10665:\"angmsdab;\",10666:\"angmsdac;\",10667:\"angmsdad;\",10668:\"angmsdae;\",10669:\"angmsdaf;\",10670:\"angmsdag;\",10671:\"angmsdah;\",10672:\"bemptyv;\",10673:\"demptyv;\",10674:\"cemptyv;\",10675:\"raemptyv;\",10676:\"laemptyv;\",10677:\"ohbar;\",10678:\"omid;\",10679:\"opar;\",10681:\"operp;\",10683:\"olcross;\",10684:\"odsold;\",10686:\"olcir;\",10687:\"ofcir;\",10688:\"olt;\",10689:\"ogt;\",10690:\"cirscir;\",10691:\"cirE;\",10692:\"solb;\",10693:\"bsolb;\",10697:\"boxbox;\",10701:\"trisb;\",10702:\"rtriltri;\",10703:\"LeftTriangleBar;\",10704:\"RightTriangleBar;\",10716:\"iinfin;\",10717:\"infintie;\",10718:\"nvinfin;\",10723:\"eparsl;\",10724:\"smeparsl;\",10725:\"eqvparsl;\",10731:\"lozf;\",10740:\"RuleDelayed;\",10742:\"dsol;\",10752:\"xodot;\",10753:\"xoplus;\",10754:\"xotime;\",10756:\"xuplus;\",10758:\"xsqcup;\",10764:\"qint;\",10765:\"fpartint;\",10768:\"cirfnint;\",10769:\"awint;\",10770:\"rppolint;\",10771:\"scpolint;\",10772:\"npolint;\",10773:\"pointint;\",10774:\"quatint;\",10775:\"intlarhk;\",10786:\"pluscir;\",10787:\"plusacir;\",10788:\"simplus;\",10789:\"plusdu;\",10790:\"plussim;\",10791:\"plustwo;\",10793:\"mcomma;\",10794:\"minusdu;\",10797:\"loplus;\",10798:\"roplus;\",10799:\"Cross;\",10800:\"timesd;\",10801:\"timesbar;\",10803:\"smashp;\",10804:\"lotimes;\",10805:\"rotimes;\",10806:\"otimesas;\",10807:\"Otimes;\",10808:\"odiv;\",10809:\"triplus;\",10810:\"triminus;\",10811:\"tritime;\",10812:\"iprod;\",10815:\"amalg;\",10816:\"capdot;\",10818:\"ncup;\",10819:\"ncap;\",10820:\"capand;\",10821:\"cupor;\",10822:\"cupcap;\",10823:\"capcup;\",10824:\"cupbrcap;\",10825:\"capbrcup;\",10826:\"cupcup;\",10827:\"capcap;\",10828:\"ccups;\",10829:\"ccaps;\",10832:\"ccupssm;\",10835:\"And;\",10836:\"Or;\",10837:\"andand;\",10838:\"oror;\",10839:\"orslope;\",10840:\"andslope;\",10842:\"andv;\",10843:\"orv;\",10844:\"andd;\",10845:\"ord;\",10847:\"wedbar;\",10854:\"sdote;\",10858:\"simdot;\",10861:\"congdot;\",10862:\"easter;\",10863:\"apacir;\",10864:\"apE;\",10865:\"eplus;\",10866:\"pluse;\",10867:\"Esim;\",10868:\"Colone;\",10869:\"Equal;\",10871:\"eDDot;\",10872:\"equivDD;\",10873:\"ltcir;\",10874:\"gtcir;\",10875:\"ltquest;\",10876:\"gtquest;\",10877:\"LessSlantEqual;\",10878:\"GreaterSlantEqual;\",10879:\"lesdot;\",10880:\"gesdot;\",10881:\"lesdoto;\",10882:\"gesdoto;\",10883:\"lesdotor;\",10884:\"gesdotol;\",10885:\"lessapprox;\",10886:\"gtrapprox;\",10887:\"lneq;\",10888:\"gneq;\",10889:\"lnapprox;\",10890:\"gnapprox;\",10891:\"lesseqqgtr;\",10892:\"gtreqqless;\",10893:\"lsime;\",10894:\"gsime;\",10895:\"lsimg;\",10896:\"gsiml;\",10897:\"lgE;\",10898:\"glE;\",10899:\"lesges;\",10900:\"gesles;\",10901:\"eqslantless;\",10902:\"eqslantgtr;\",10903:\"elsdot;\",10904:\"egsdot;\",10905:\"el;\",10906:\"eg;\",10909:\"siml;\",10910:\"simg;\",10911:\"simlE;\",10912:\"simgE;\",10913:\"LessLess;\",10914:\"GreaterGreater;\",10916:\"glj;\",10917:\"gla;\",10918:\"ltcc;\",10919:\"gtcc;\",10920:\"lescc;\",10921:\"gescc;\",10922:\"smt;\",10923:\"lat;\",10924:\"smte;\",10925:\"late;\",10926:\"bumpE;\",10927:\"preceq;\",10928:\"succeq;\",10931:\"prE;\",10932:\"scE;\",10933:\"prnE;\",10934:\"succneqq;\",10935:\"precapprox;\",10936:\"succapprox;\",10937:\"prnap;\",10938:\"succnapprox;\",10939:\"Pr;\",10940:\"Sc;\",10941:\"subdot;\",10942:\"supdot;\",10943:\"subplus;\",10944:\"supplus;\",10945:\"submult;\",10946:\"supmult;\",10947:\"subedot;\",10948:\"supedot;\",10949:\"subseteqq;\",10950:\"supseteqq;\",10951:\"subsim;\",10952:\"supsim;\",10955:\"subsetneqq;\",10956:\"supsetneqq;\",10959:\"csub;\",10960:\"csup;\",10961:\"csube;\",10962:\"csupe;\",10963:\"subsup;\",10964:\"supsub;\",10965:\"subsub;\",10966:\"supsup;\",10967:\"suphsub;\",10968:\"supdsub;\",10969:\"forkv;\",10970:\"topfork;\",10971:\"mlcp;\",10980:\"DoubleLeftTee;\",10982:\"Vdashl;\",10983:\"Barv;\",10984:\"vBar;\",10985:\"vBarv;\",10987:\"Vbar;\",10988:\"Not;\",10989:\"bNot;\",10990:\"rnmid;\",10991:\"cirmid;\",10992:\"midcir;\",10993:\"topcir;\",10994:\"nhpar;\",10995:\"parsim;\",11005:\"parsl;\",64256:\"fflig;\",64257:\"filig;\",64258:\"fllig;\",64259:\"ffilig;\",64260:\"ffllig;\"};","var punycode = require('punycode');\nvar revEntities = require('./reversed.json');\n\nmodule.exports = encode;\n\nfunction encode (str, opts) {\n    if (typeof str !== 'string') {\n        throw new TypeError('Expected a String');\n    }\n    if (!opts) opts = {};\n\n    var numeric = true;\n    if (opts.named) numeric = false;\n    if (opts.numeric !== undefined) numeric = opts.numeric;\n\n    var special = opts.special || {\n        '\"': true, \"'\": true,\n        '<': true, '>': true,\n        '&': true\n    };\n\n    var codePoints = punycode.ucs2.decode(str);\n    var chars = [];\n    for (var i = 0; i < codePoints.length; i++) {\n        var cc = codePoints[i];\n        var c = punycode.ucs2.encode([ cc ]);\n        var e = revEntities[cc];\n        if (e && (cc >= 127 || special[c]) && !numeric) {\n            chars.push('&' + (/;$/.test(e) ? e : e + ';'));\n        }\n        else if (cc < 32 || cc >= 127 || special[c]) {\n            chars.push('&#' + cc + ';');\n        }\n        else {\n            chars.push(c);\n        }\n    }\n    return chars.join('');\n}\n","module.exports={\"Aacute;\":\"Á\",Aacute:\"Á\",\"aacute;\":\"á\",aacute:\"á\",\"Abreve;\":\"Ă\",\"abreve;\":\"ă\",\"ac;\":\"∾\",\"acd;\":\"∿\",\"acE;\":\"∾̳\",\"Acirc;\":\"Â\",Acirc:\"Â\",\"acirc;\":\"â\",acirc:\"â\",\"acute;\":\"´\",acute:\"´\",\"Acy;\":\"А\",\"acy;\":\"а\",\"AElig;\":\"Æ\",AElig:\"Æ\",\"aelig;\":\"æ\",aelig:\"æ\",\"af;\":\"⁡\",\"Afr;\":\"𝔄\",\"afr;\":\"𝔞\",\"Agrave;\":\"À\",Agrave:\"À\",\"agrave;\":\"à\",agrave:\"à\",\"alefsym;\":\"ℵ\",\"aleph;\":\"ℵ\",\"Alpha;\":\"Α\",\"alpha;\":\"α\",\"Amacr;\":\"Ā\",\"amacr;\":\"ā\",\"amalg;\":\"⨿\",\"AMP;\":\"&\",AMP:\"&\",\"amp;\":\"&\",amp:\"&\",\"And;\":\"⩓\",\"and;\":\"∧\",\"andand;\":\"⩕\",\"andd;\":\"⩜\",\"andslope;\":\"⩘\",\"andv;\":\"⩚\",\"ang;\":\"∠\",\"ange;\":\"⦤\",\"angle;\":\"∠\",\"angmsd;\":\"∡\",\"angmsdaa;\":\"⦨\",\"angmsdab;\":\"⦩\",\"angmsdac;\":\"⦪\",\"angmsdad;\":\"⦫\",\"angmsdae;\":\"⦬\",\"angmsdaf;\":\"⦭\",\"angmsdag;\":\"⦮\",\"angmsdah;\":\"⦯\",\"angrt;\":\"∟\",\"angrtvb;\":\"⊾\",\"angrtvbd;\":\"⦝\",\"angsph;\":\"∢\",\"angst;\":\"Å\",\"angzarr;\":\"⍼\",\"Aogon;\":\"Ą\",\"aogon;\":\"ą\",\"Aopf;\":\"𝔸\",\"aopf;\":\"𝕒\",\"ap;\":\"≈\",\"apacir;\":\"⩯\",\"apE;\":\"⩰\",\"ape;\":\"≊\",\"apid;\":\"≋\",\"apos;\":\"'\",\"ApplyFunction;\":\"⁡\",\"approx;\":\"≈\",\"approxeq;\":\"≊\",\"Aring;\":\"Å\",Aring:\"Å\",\"aring;\":\"å\",aring:\"å\",\"Ascr;\":\"𝒜\",\"ascr;\":\"𝒶\",\"Assign;\":\"≔\",\"ast;\":\"*\",\"asymp;\":\"≈\",\"asympeq;\":\"≍\",\"Atilde;\":\"Ã\",Atilde:\"Ã\",\"atilde;\":\"ã\",atilde:\"ã\",\"Auml;\":\"Ä\",Auml:\"Ä\",\"auml;\":\"ä\",auml:\"ä\",\"awconint;\":\"∳\",\"awint;\":\"⨑\",\"backcong;\":\"≌\",\"backepsilon;\":\"϶\",\"backprime;\":\"‵\",\"backsim;\":\"∽\",\"backsimeq;\":\"⋍\",\"Backslash;\":\"∖\",\"Barv;\":\"⫧\",\"barvee;\":\"⊽\",\"Barwed;\":\"⌆\",\"barwed;\":\"⌅\",\"barwedge;\":\"⌅\",\"bbrk;\":\"⎵\",\"bbrktbrk;\":\"⎶\",\"bcong;\":\"≌\",\"Bcy;\":\"Б\",\"bcy;\":\"б\",\"bdquo;\":\"„\",\"becaus;\":\"∵\",\"Because;\":\"∵\",\"because;\":\"∵\",\"bemptyv;\":\"⦰\",\"bepsi;\":\"϶\",\"bernou;\":\"ℬ\",\"Bernoullis;\":\"ℬ\",\"Beta;\":\"Β\",\"beta;\":\"β\",\"beth;\":\"ℶ\",\"between;\":\"≬\",\"Bfr;\":\"𝔅\",\"bfr;\":\"𝔟\",\"bigcap;\":\"⋂\",\"bigcirc;\":\"◯\",\"bigcup;\":\"⋃\",\"bigodot;\":\"⨀\",\"bigoplus;\":\"⨁\",\"bigotimes;\":\"⨂\",\"bigsqcup;\":\"⨆\",\"bigstar;\":\"★\",\"bigtriangledown;\":\"▽\",\"bigtriangleup;\":\"△\",\"biguplus;\":\"⨄\",\"bigvee;\":\"⋁\",\"bigwedge;\":\"⋀\",\"bkarow;\":\"⤍\",\"blacklozenge;\":\"⧫\",\"blacksquare;\":\"▪\",\"blacktriangle;\":\"▴\",\"blacktriangledown;\":\"▾\",\"blacktriangleleft;\":\"◂\",\"blacktriangleright;\":\"▸\",\"blank;\":\"␣\",\"blk12;\":\"▒\",\"blk14;\":\"░\",\"blk34;\":\"▓\",\"block;\":\"█\",\"bne;\":\"=⃥\",\"bnequiv;\":\"≡⃥\",\"bNot;\":\"⫭\",\"bnot;\":\"⌐\",\"Bopf;\":\"𝔹\",\"bopf;\":\"𝕓\",\"bot;\":\"⊥\",\"bottom;\":\"⊥\",\"bowtie;\":\"⋈\",\"boxbox;\":\"⧉\",\"boxDL;\":\"╗\",\"boxDl;\":\"╖\",\"boxdL;\":\"╕\",\"boxdl;\":\"┐\",\"boxDR;\":\"╔\",\"boxDr;\":\"╓\",\"boxdR;\":\"╒\",\"boxdr;\":\"┌\",\"boxH;\":\"═\",\"boxh;\":\"─\",\"boxHD;\":\"╦\",\"boxHd;\":\"╤\",\"boxhD;\":\"╥\",\"boxhd;\":\"┬\",\"boxHU;\":\"╩\",\"boxHu;\":\"╧\",\"boxhU;\":\"╨\",\"boxhu;\":\"┴\",\"boxminus;\":\"⊟\",\"boxplus;\":\"⊞\",\"boxtimes;\":\"⊠\",\"boxUL;\":\"╝\",\"boxUl;\":\"╜\",\"boxuL;\":\"╛\",\"boxul;\":\"┘\",\"boxUR;\":\"╚\",\"boxUr;\":\"╙\",\"boxuR;\":\"╘\",\"boxur;\":\"└\",\"boxV;\":\"║\",\"boxv;\":\"│\",\"boxVH;\":\"╬\",\"boxVh;\":\"╫\",\"boxvH;\":\"╪\",\"boxvh;\":\"┼\",\"boxVL;\":\"╣\",\"boxVl;\":\"╢\",\"boxvL;\":\"╡\",\"boxvl;\":\"┤\",\"boxVR;\":\"╠\",\"boxVr;\":\"╟\",\"boxvR;\":\"╞\",\"boxvr;\":\"├\",\"bprime;\":\"‵\",\"Breve;\":\"˘\",\"breve;\":\"˘\",\"brvbar;\":\"¦\",brvbar:\"¦\",\"Bscr;\":\"ℬ\",\"bscr;\":\"𝒷\",\"bsemi;\":\"⁏\",\"bsim;\":\"∽\",\"bsime;\":\"⋍\",\"bsol;\":\"\\\\\",\"bsolb;\":\"⧅\",\"bsolhsub;\":\"⟈\",\"bull;\":\"•\",\"bullet;\":\"•\",\"bump;\":\"≎\",\"bumpE;\":\"⪮\",\"bumpe;\":\"≏\",\"Bumpeq;\":\"≎\",\"bumpeq;\":\"≏\",\"Cacute;\":\"Ć\",\"cacute;\":\"ć\",\"Cap;\":\"⋒\",\"cap;\":\"∩\",\"capand;\":\"⩄\",\"capbrcup;\":\"⩉\",\"capcap;\":\"⩋\",\"capcup;\":\"⩇\",\"capdot;\":\"⩀\",\"CapitalDifferentialD;\":\"ⅅ\",\"caps;\":\"∩︀\",\"caret;\":\"⁁\",\"caron;\":\"ˇ\",\"Cayleys;\":\"ℭ\",\"ccaps;\":\"⩍\",\"Ccaron;\":\"Č\",\"ccaron;\":\"č\",\"Ccedil;\":\"Ç\",Ccedil:\"Ç\",\"ccedil;\":\"ç\",ccedil:\"ç\",\"Ccirc;\":\"Ĉ\",\"ccirc;\":\"ĉ\",\"Cconint;\":\"∰\",\"ccups;\":\"⩌\",\"ccupssm;\":\"⩐\",\"Cdot;\":\"Ċ\",\"cdot;\":\"ċ\",\"cedil;\":\"¸\",cedil:\"¸\",\"Cedilla;\":\"¸\",\"cemptyv;\":\"⦲\",\"cent;\":\"¢\",cent:\"¢\",\"CenterDot;\":\"·\",\"centerdot;\":\"·\",\"Cfr;\":\"ℭ\",\"cfr;\":\"𝔠\",\"CHcy;\":\"Ч\",\"chcy;\":\"ч\",\"check;\":\"✓\",\"checkmark;\":\"✓\",\"Chi;\":\"Χ\",\"chi;\":\"χ\",\"cir;\":\"○\",\"circ;\":\"ˆ\",\"circeq;\":\"≗\",\"circlearrowleft;\":\"↺\",\"circlearrowright;\":\"↻\",\"circledast;\":\"⊛\",\"circledcirc;\":\"⊚\",\"circleddash;\":\"⊝\",\"CircleDot;\":\"⊙\",\"circledR;\":\"®\",\"circledS;\":\"Ⓢ\",\"CircleMinus;\":\"⊖\",\"CirclePlus;\":\"⊕\",\"CircleTimes;\":\"⊗\",\"cirE;\":\"⧃\",\"cire;\":\"≗\",\"cirfnint;\":\"⨐\",\"cirmid;\":\"⫯\",\"cirscir;\":\"⧂\",\"ClockwiseContourIntegral;\":\"∲\",\"CloseCurlyDoubleQuote;\":\"”\",\"CloseCurlyQuote;\":\"’\",\"clubs;\":\"♣\",\"clubsuit;\":\"♣\",\"Colon;\":\"∷\",\"colon;\":\":\",\"Colone;\":\"⩴\",\"colone;\":\"≔\",\"coloneq;\":\"≔\",\"comma;\":\",\",\"commat;\":\"@\",\"comp;\":\"∁\",\"compfn;\":\"∘\",\"complement;\":\"∁\",\"complexes;\":\"ℂ\",\"cong;\":\"≅\",\"congdot;\":\"⩭\",\"Congruent;\":\"≡\",\"Conint;\":\"∯\",\"conint;\":\"∮\",\"ContourIntegral;\":\"∮\",\"Copf;\":\"ℂ\",\"copf;\":\"𝕔\",\"coprod;\":\"∐\",\"Coproduct;\":\"∐\",\"COPY;\":\"©\",COPY:\"©\",\"copy;\":\"©\",copy:\"©\",\"copysr;\":\"℗\",\"CounterClockwiseContourIntegral;\":\"∳\",\"crarr;\":\"↵\",\"Cross;\":\"⨯\",\"cross;\":\"✗\",\"Cscr;\":\"𝒞\",\"cscr;\":\"𝒸\",\"csub;\":\"⫏\",\"csube;\":\"⫑\",\"csup;\":\"⫐\",\"csupe;\":\"⫒\",\"ctdot;\":\"⋯\",\"cudarrl;\":\"⤸\",\"cudarrr;\":\"⤵\",\"cuepr;\":\"⋞\",\"cuesc;\":\"⋟\",\"cularr;\":\"↶\",\"cularrp;\":\"⤽\",\"Cup;\":\"⋓\",\"cup;\":\"∪\",\"cupbrcap;\":\"⩈\",\"CupCap;\":\"≍\",\"cupcap;\":\"⩆\",\"cupcup;\":\"⩊\",\"cupdot;\":\"⊍\",\"cupor;\":\"⩅\",\"cups;\":\"∪︀\",\"curarr;\":\"↷\",\"curarrm;\":\"⤼\",\"curlyeqprec;\":\"⋞\",\"curlyeqsucc;\":\"⋟\",\"curlyvee;\":\"⋎\",\"curlywedge;\":\"⋏\",\"curren;\":\"¤\",curren:\"¤\",\"curvearrowleft;\":\"↶\",\"curvearrowright;\":\"↷\",\"cuvee;\":\"⋎\",\"cuwed;\":\"⋏\",\"cwconint;\":\"∲\",\"cwint;\":\"∱\",\"cylcty;\":\"⌭\",\"Dagger;\":\"‡\",\"dagger;\":\"†\",\"daleth;\":\"ℸ\",\"Darr;\":\"↡\",\"dArr;\":\"⇓\",\"darr;\":\"↓\",\"dash;\":\"‐\",\"Dashv;\":\"⫤\",\"dashv;\":\"⊣\",\"dbkarow;\":\"⤏\",\"dblac;\":\"˝\",\"Dcaron;\":\"Ď\",\"dcaron;\":\"ď\",\"Dcy;\":\"Д\",\"dcy;\":\"д\",\"DD;\":\"ⅅ\",\"dd;\":\"ⅆ\",\"ddagger;\":\"‡\",\"ddarr;\":\"⇊\",\"DDotrahd;\":\"⤑\",\"ddotseq;\":\"⩷\",\"deg;\":\"°\",deg:\"°\",\"Del;\":\"∇\",\"Delta;\":\"Δ\",\"delta;\":\"δ\",\"demptyv;\":\"⦱\",\"dfisht;\":\"⥿\",\"Dfr;\":\"𝔇\",\"dfr;\":\"𝔡\",\"dHar;\":\"⥥\",\"dharl;\":\"⇃\",\"dharr;\":\"⇂\",\"DiacriticalAcute;\":\"´\",\"DiacriticalDot;\":\"˙\",\"DiacriticalDoubleAcute;\":\"˝\",\"DiacriticalGrave;\":\"`\",\"DiacriticalTilde;\":\"˜\",\"diam;\":\"⋄\",\"Diamond;\":\"⋄\",\"diamond;\":\"⋄\",\"diamondsuit;\":\"♦\",\"diams;\":\"♦\",\"die;\":\"¨\",\"DifferentialD;\":\"ⅆ\",\"digamma;\":\"ϝ\",\"disin;\":\"⋲\",\"div;\":\"÷\",\"divide;\":\"÷\",divide:\"÷\",\"divideontimes;\":\"⋇\",\"divonx;\":\"⋇\",\"DJcy;\":\"Ђ\",\"djcy;\":\"ђ\",\"dlcorn;\":\"⌞\",\"dlcrop;\":\"⌍\",\"dollar;\":\"$\",\"Dopf;\":\"𝔻\",\"dopf;\":\"𝕕\",\"Dot;\":\"¨\",\"dot;\":\"˙\",\"DotDot;\":\"⃜\",\"doteq;\":\"≐\",\"doteqdot;\":\"≑\",\"DotEqual;\":\"≐\",\"dotminus;\":\"∸\",\"dotplus;\":\"∔\",\"dotsquare;\":\"⊡\",\"doublebarwedge;\":\"⌆\",\"DoubleContourIntegral;\":\"∯\",\"DoubleDot;\":\"¨\",\"DoubleDownArrow;\":\"⇓\",\"DoubleLeftArrow;\":\"⇐\",\"DoubleLeftRightArrow;\":\"⇔\",\"DoubleLeftTee;\":\"⫤\",\"DoubleLongLeftArrow;\":\"⟸\",\"DoubleLongLeftRightArrow;\":\"⟺\",\"DoubleLongRightArrow;\":\"⟹\",\"DoubleRightArrow;\":\"⇒\",\"DoubleRightTee;\":\"⊨\",\"DoubleUpArrow;\":\"⇑\",\"DoubleUpDownArrow;\":\"⇕\",\"DoubleVerticalBar;\":\"∥\",\"DownArrow;\":\"↓\",\"Downarrow;\":\"⇓\",\"downarrow;\":\"↓\",\"DownArrowBar;\":\"⤓\",\"DownArrowUpArrow;\":\"⇵\",\"DownBreve;\":\"̑\",\"downdownarrows;\":\"⇊\",\"downharpoonleft;\":\"⇃\",\"downharpoonright;\":\"⇂\",\"DownLeftRightVector;\":\"⥐\",\"DownLeftTeeVector;\":\"⥞\",\"DownLeftVector;\":\"↽\",\"DownLeftVectorBar;\":\"⥖\",\"DownRightTeeVector;\":\"⥟\",\"DownRightVector;\":\"⇁\",\"DownRightVectorBar;\":\"⥗\",\"DownTee;\":\"⊤\",\"DownTeeArrow;\":\"↧\",\"drbkarow;\":\"⤐\",\"drcorn;\":\"⌟\",\"drcrop;\":\"⌌\",\"Dscr;\":\"𝒟\",\"dscr;\":\"𝒹\",\"DScy;\":\"Ѕ\",\"dscy;\":\"ѕ\",\"dsol;\":\"⧶\",\"Dstrok;\":\"Đ\",\"dstrok;\":\"đ\",\"dtdot;\":\"⋱\",\"dtri;\":\"▿\",\"dtrif;\":\"▾\",\"duarr;\":\"⇵\",\"duhar;\":\"⥯\",\"dwangle;\":\"⦦\",\"DZcy;\":\"Џ\",\"dzcy;\":\"џ\",\"dzigrarr;\":\"⟿\",\"Eacute;\":\"É\",Eacute:\"É\",\"eacute;\":\"é\",eacute:\"é\",\"easter;\":\"⩮\",\"Ecaron;\":\"Ě\",\"ecaron;\":\"ě\",\"ecir;\":\"≖\",\"Ecirc;\":\"Ê\",Ecirc:\"Ê\",\"ecirc;\":\"ê\",ecirc:\"ê\",\"ecolon;\":\"≕\",\"Ecy;\":\"Э\",\"ecy;\":\"э\",\"eDDot;\":\"⩷\",\"Edot;\":\"Ė\",\"eDot;\":\"≑\",\"edot;\":\"ė\",\"ee;\":\"ⅇ\",\"efDot;\":\"≒\",\"Efr;\":\"𝔈\",\"efr;\":\"𝔢\",\"eg;\":\"⪚\",\"Egrave;\":\"È\",Egrave:\"È\",\"egrave;\":\"è\",egrave:\"è\",\"egs;\":\"⪖\",\"egsdot;\":\"⪘\",\"el;\":\"⪙\",\"Element;\":\"∈\",\"elinters;\":\"⏧\",\"ell;\":\"ℓ\",\"els;\":\"⪕\",\"elsdot;\":\"⪗\",\"Emacr;\":\"Ē\",\"emacr;\":\"ē\",\"empty;\":\"∅\",\"emptyset;\":\"∅\",\"EmptySmallSquare;\":\"◻\",\"emptyv;\":\"∅\",\"EmptyVerySmallSquare;\":\"▫\",\"emsp;\":\" \",\"emsp13;\":\" \",\"emsp14;\":\" \",\"ENG;\":\"Ŋ\",\"eng;\":\"ŋ\",\"ensp;\":\" \",\"Eogon;\":\"Ę\",\"eogon;\":\"ę\",\"Eopf;\":\"𝔼\",\"eopf;\":\"𝕖\",\"epar;\":\"⋕\",\"eparsl;\":\"⧣\",\"eplus;\":\"⩱\",\"epsi;\":\"ε\",\"Epsilon;\":\"Ε\",\"epsilon;\":\"ε\",\"epsiv;\":\"ϵ\",\"eqcirc;\":\"≖\",\"eqcolon;\":\"≕\",\"eqsim;\":\"≂\",\"eqslantgtr;\":\"⪖\",\"eqslantless;\":\"⪕\",\"Equal;\":\"⩵\",\"equals;\":\"=\",\"EqualTilde;\":\"≂\",\"equest;\":\"≟\",\"Equilibrium;\":\"⇌\",\"equiv;\":\"≡\",\"equivDD;\":\"⩸\",\"eqvparsl;\":\"⧥\",\"erarr;\":\"⥱\",\"erDot;\":\"≓\",\"Escr;\":\"ℰ\",\"escr;\":\"ℯ\",\"esdot;\":\"≐\",\"Esim;\":\"⩳\",\"esim;\":\"≂\",\"Eta;\":\"Η\",\"eta;\":\"η\",\"ETH;\":\"Ð\",ETH:\"Ð\",\"eth;\":\"ð\",eth:\"ð\",\"Euml;\":\"Ë\",Euml:\"Ë\",\"euml;\":\"ë\",euml:\"ë\",\"euro;\":\"€\",\"excl;\":\"!\",\"exist;\":\"∃\",\"Exists;\":\"∃\",\"expectation;\":\"ℰ\",\"ExponentialE;\":\"ⅇ\",\"exponentiale;\":\"ⅇ\",\"fallingdotseq;\":\"≒\",\"Fcy;\":\"Ф\",\"fcy;\":\"ф\",\"female;\":\"♀\",\"ffilig;\":\"ﬃ\",\"fflig;\":\"ﬀ\",\"ffllig;\":\"ﬄ\",\"Ffr;\":\"𝔉\",\"ffr;\":\"𝔣\",\"filig;\":\"ﬁ\",\"FilledSmallSquare;\":\"◼\",\"FilledVerySmallSquare;\":\"▪\",\"fjlig;\":\"fj\",\"flat;\":\"♭\",\"fllig;\":\"ﬂ\",\"fltns;\":\"▱\",\"fnof;\":\"ƒ\",\"Fopf;\":\"𝔽\",\"fopf;\":\"𝕗\",\"ForAll;\":\"∀\",\"forall;\":\"∀\",\"fork;\":\"⋔\",\"forkv;\":\"⫙\",\"Fouriertrf;\":\"ℱ\",\"fpartint;\":\"⨍\",\"frac12;\":\"½\",frac12:\"½\",\"frac13;\":\"⅓\",\"frac14;\":\"¼\",frac14:\"¼\",\"frac15;\":\"⅕\",\"frac16;\":\"⅙\",\"frac18;\":\"⅛\",\"frac23;\":\"⅔\",\"frac25;\":\"⅖\",\"frac34;\":\"¾\",frac34:\"¾\",\"frac35;\":\"⅗\",\"frac38;\":\"⅜\",\"frac45;\":\"⅘\",\"frac56;\":\"⅚\",\"frac58;\":\"⅝\",\"frac78;\":\"⅞\",\"frasl;\":\"⁄\",\"frown;\":\"⌢\",\"Fscr;\":\"ℱ\",\"fscr;\":\"𝒻\",\"gacute;\":\"ǵ\",\"Gamma;\":\"Γ\",\"gamma;\":\"γ\",\"Gammad;\":\"Ϝ\",\"gammad;\":\"ϝ\",\"gap;\":\"⪆\",\"Gbreve;\":\"Ğ\",\"gbreve;\":\"ğ\",\"Gcedil;\":\"Ģ\",\"Gcirc;\":\"Ĝ\",\"gcirc;\":\"ĝ\",\"Gcy;\":\"Г\",\"gcy;\":\"г\",\"Gdot;\":\"Ġ\",\"gdot;\":\"ġ\",\"gE;\":\"≧\",\"ge;\":\"≥\",\"gEl;\":\"⪌\",\"gel;\":\"⋛\",\"geq;\":\"≥\",\"geqq;\":\"≧\",\"geqslant;\":\"⩾\",\"ges;\":\"⩾\",\"gescc;\":\"⪩\",\"gesdot;\":\"⪀\",\"gesdoto;\":\"⪂\",\"gesdotol;\":\"⪄\",\"gesl;\":\"⋛︀\",\"gesles;\":\"⪔\",\"Gfr;\":\"𝔊\",\"gfr;\":\"𝔤\",\"Gg;\":\"⋙\",\"gg;\":\"≫\",\"ggg;\":\"⋙\",\"gimel;\":\"ℷ\",\"GJcy;\":\"Ѓ\",\"gjcy;\":\"ѓ\",\"gl;\":\"≷\",\"gla;\":\"⪥\",\"glE;\":\"⪒\",\"glj;\":\"⪤\",\"gnap;\":\"⪊\",\"gnapprox;\":\"⪊\",\"gnE;\":\"≩\",\"gne;\":\"⪈\",\"gneq;\":\"⪈\",\"gneqq;\":\"≩\",\"gnsim;\":\"⋧\",\"Gopf;\":\"𝔾\",\"gopf;\":\"𝕘\",\"grave;\":\"`\",\"GreaterEqual;\":\"≥\",\"GreaterEqualLess;\":\"⋛\",\"GreaterFullEqual;\":\"≧\",\"GreaterGreater;\":\"⪢\",\"GreaterLess;\":\"≷\",\"GreaterSlantEqual;\":\"⩾\",\"GreaterTilde;\":\"≳\",\"Gscr;\":\"𝒢\",\"gscr;\":\"ℊ\",\"gsim;\":\"≳\",\"gsime;\":\"⪎\",\"gsiml;\":\"⪐\",\"GT;\":\">\",GT:\">\",\"Gt;\":\"≫\",\"gt;\":\">\",gt:\">\",\"gtcc;\":\"⪧\",\"gtcir;\":\"⩺\",\"gtdot;\":\"⋗\",\"gtlPar;\":\"⦕\",\"gtquest;\":\"⩼\",\"gtrapprox;\":\"⪆\",\"gtrarr;\":\"⥸\",\"gtrdot;\":\"⋗\",\"gtreqless;\":\"⋛\",\"gtreqqless;\":\"⪌\",\"gtrless;\":\"≷\",\"gtrsim;\":\"≳\",\"gvertneqq;\":\"≩︀\",\"gvnE;\":\"≩︀\",\"Hacek;\":\"ˇ\",\"hairsp;\":\" \",\"half;\":\"½\",\"hamilt;\":\"ℋ\",\"HARDcy;\":\"Ъ\",\"hardcy;\":\"ъ\",\"hArr;\":\"⇔\",\"harr;\":\"↔\",\"harrcir;\":\"⥈\",\"harrw;\":\"↭\",\"Hat;\":\"^\",\"hbar;\":\"ℏ\",\"Hcirc;\":\"Ĥ\",\"hcirc;\":\"ĥ\",\"hearts;\":\"♥\",\"heartsuit;\":\"♥\",\"hellip;\":\"…\",\"hercon;\":\"⊹\",\"Hfr;\":\"ℌ\",\"hfr;\":\"𝔥\",\"HilbertSpace;\":\"ℋ\",\"hksearow;\":\"⤥\",\"hkswarow;\":\"⤦\",\"hoarr;\":\"⇿\",\"homtht;\":\"∻\",\"hookleftarrow;\":\"↩\",\"hookrightarrow;\":\"↪\",\"Hopf;\":\"ℍ\",\"hopf;\":\"𝕙\",\"horbar;\":\"―\",\"HorizontalLine;\":\"─\",\"Hscr;\":\"ℋ\",\"hscr;\":\"𝒽\",\"hslash;\":\"ℏ\",\"Hstrok;\":\"Ħ\",\"hstrok;\":\"ħ\",\"HumpDownHump;\":\"≎\",\"HumpEqual;\":\"≏\",\"hybull;\":\"⁃\",\"hyphen;\":\"‐\",\"Iacute;\":\"Í\",Iacute:\"Í\",\"iacute;\":\"í\",iacute:\"í\",\"ic;\":\"⁣\",\"Icirc;\":\"Î\",Icirc:\"Î\",\"icirc;\":\"î\",icirc:\"î\",\"Icy;\":\"И\",\"icy;\":\"и\",\"Idot;\":\"İ\",\"IEcy;\":\"Е\",\"iecy;\":\"е\",\"iexcl;\":\"¡\",iexcl:\"¡\",\"iff;\":\"⇔\",\"Ifr;\":\"ℑ\",\"ifr;\":\"𝔦\",\"Igrave;\":\"Ì\",Igrave:\"Ì\",\"igrave;\":\"ì\",igrave:\"ì\",\"ii;\":\"ⅈ\",\"iiiint;\":\"⨌\",\"iiint;\":\"∭\",\"iinfin;\":\"⧜\",\"iiota;\":\"℩\",\"IJlig;\":\"Ĳ\",\"ijlig;\":\"ĳ\",\"Im;\":\"ℑ\",\"Imacr;\":\"Ī\",\"imacr;\":\"ī\",\"image;\":\"ℑ\",\"ImaginaryI;\":\"ⅈ\",\"imagline;\":\"ℐ\",\"imagpart;\":\"ℑ\",\"imath;\":\"ı\",\"imof;\":\"⊷\",\"imped;\":\"Ƶ\",\"Implies;\":\"⇒\",\"in;\":\"∈\",\"incare;\":\"℅\",\"infin;\":\"∞\",\"infintie;\":\"⧝\",\"inodot;\":\"ı\",\"Int;\":\"∬\",\"int;\":\"∫\",\"intcal;\":\"⊺\",\"integers;\":\"ℤ\",\"Integral;\":\"∫\",\"intercal;\":\"⊺\",\"Intersection;\":\"⋂\",\"intlarhk;\":\"⨗\",\"intprod;\":\"⨼\",\"InvisibleComma;\":\"⁣\",\"InvisibleTimes;\":\"⁢\",\"IOcy;\":\"Ё\",\"iocy;\":\"ё\",\"Iogon;\":\"Į\",\"iogon;\":\"į\",\"Iopf;\":\"𝕀\",\"iopf;\":\"𝕚\",\"Iota;\":\"Ι\",\"iota;\":\"ι\",\"iprod;\":\"⨼\",\"iquest;\":\"¿\",iquest:\"¿\",\"Iscr;\":\"ℐ\",\"iscr;\":\"𝒾\",\"isin;\":\"∈\",\"isindot;\":\"⋵\",\"isinE;\":\"⋹\",\"isins;\":\"⋴\",\"isinsv;\":\"⋳\",\"isinv;\":\"∈\",\"it;\":\"⁢\",\"Itilde;\":\"Ĩ\",\"itilde;\":\"ĩ\",\"Iukcy;\":\"І\",\"iukcy;\":\"і\",\"Iuml;\":\"Ï\",Iuml:\"Ï\",\"iuml;\":\"ï\",iuml:\"ï\",\"Jcirc;\":\"Ĵ\",\"jcirc;\":\"ĵ\",\"Jcy;\":\"Й\",\"jcy;\":\"й\",\"Jfr;\":\"𝔍\",\"jfr;\":\"𝔧\",\"jmath;\":\"ȷ\",\"Jopf;\":\"𝕁\",\"jopf;\":\"𝕛\",\"Jscr;\":\"𝒥\",\"jscr;\":\"𝒿\",\"Jsercy;\":\"Ј\",\"jsercy;\":\"ј\",\"Jukcy;\":\"Є\",\"jukcy;\":\"є\",\"Kappa;\":\"Κ\",\"kappa;\":\"κ\",\"kappav;\":\"ϰ\",\"Kcedil;\":\"Ķ\",\"kcedil;\":\"ķ\",\"Kcy;\":\"К\",\"kcy;\":\"к\",\"Kfr;\":\"𝔎\",\"kfr;\":\"𝔨\",\"kgreen;\":\"ĸ\",\"KHcy;\":\"Х\",\"khcy;\":\"х\",\"KJcy;\":\"Ќ\",\"kjcy;\":\"ќ\",\"Kopf;\":\"𝕂\",\"kopf;\":\"𝕜\",\"Kscr;\":\"𝒦\",\"kscr;\":\"𝓀\",\"lAarr;\":\"⇚\",\"Lacute;\":\"Ĺ\",\"lacute;\":\"ĺ\",\"laemptyv;\":\"⦴\",\"lagran;\":\"ℒ\",\"Lambda;\":\"Λ\",\"lambda;\":\"λ\",\"Lang;\":\"⟪\",\"lang;\":\"⟨\",\"langd;\":\"⦑\",\"langle;\":\"⟨\",\"lap;\":\"⪅\",\"Laplacetrf;\":\"ℒ\",\"laquo;\":\"«\",laquo:\"«\",\"Larr;\":\"↞\",\"lArr;\":\"⇐\",\"larr;\":\"←\",\"larrb;\":\"⇤\",\"larrbfs;\":\"⤟\",\"larrfs;\":\"⤝\",\"larrhk;\":\"↩\",\"larrlp;\":\"↫\",\"larrpl;\":\"⤹\",\"larrsim;\":\"⥳\",\"larrtl;\":\"↢\",\"lat;\":\"⪫\",\"lAtail;\":\"⤛\",\"latail;\":\"⤙\",\"late;\":\"⪭\",\"lates;\":\"⪭︀\",\"lBarr;\":\"⤎\",\"lbarr;\":\"⤌\",\"lbbrk;\":\"❲\",\"lbrace;\":\"{\",\"lbrack;\":\"[\",\"lbrke;\":\"⦋\",\"lbrksld;\":\"⦏\",\"lbrkslu;\":\"⦍\",\"Lcaron;\":\"Ľ\",\"lcaron;\":\"ľ\",\"Lcedil;\":\"Ļ\",\"lcedil;\":\"ļ\",\"lceil;\":\"⌈\",\"lcub;\":\"{\",\"Lcy;\":\"Л\",\"lcy;\":\"л\",\"ldca;\":\"⤶\",\"ldquo;\":\"“\",\"ldquor;\":\"„\",\"ldrdhar;\":\"⥧\",\"ldrushar;\":\"⥋\",\"ldsh;\":\"↲\",\"lE;\":\"≦\",\"le;\":\"≤\",\"LeftAngleBracket;\":\"⟨\",\"LeftArrow;\":\"←\",\"Leftarrow;\":\"⇐\",\"leftarrow;\":\"←\",\"LeftArrowBar;\":\"⇤\",\"LeftArrowRightArrow;\":\"⇆\",\"leftarrowtail;\":\"↢\",\"LeftCeiling;\":\"⌈\",\"LeftDoubleBracket;\":\"⟦\",\"LeftDownTeeVector;\":\"⥡\",\"LeftDownVector;\":\"⇃\",\"LeftDownVectorBar;\":\"⥙\",\"LeftFloor;\":\"⌊\",\"leftharpoondown;\":\"↽\",\"leftharpoonup;\":\"↼\",\"leftleftarrows;\":\"⇇\",\"LeftRightArrow;\":\"↔\",\"Leftrightarrow;\":\"⇔\",\"leftrightarrow;\":\"↔\",\"leftrightarrows;\":\"⇆\",\"leftrightharpoons;\":\"⇋\",\"leftrightsquigarrow;\":\"↭\",\"LeftRightVector;\":\"⥎\",\"LeftTee;\":\"⊣\",\"LeftTeeArrow;\":\"↤\",\"LeftTeeVector;\":\"⥚\",\"leftthreetimes;\":\"⋋\",\"LeftTriangle;\":\"⊲\",\"LeftTriangleBar;\":\"⧏\",\"LeftTriangleEqual;\":\"⊴\",\"LeftUpDownVector;\":\"⥑\",\"LeftUpTeeVector;\":\"⥠\",\"LeftUpVector;\":\"↿\",\"LeftUpVectorBar;\":\"⥘\",\"LeftVector;\":\"↼\",\"LeftVectorBar;\":\"⥒\",\"lEg;\":\"⪋\",\"leg;\":\"⋚\",\"leq;\":\"≤\",\"leqq;\":\"≦\",\"leqslant;\":\"⩽\",\"les;\":\"⩽\",\"lescc;\":\"⪨\",\"lesdot;\":\"⩿\",\"lesdoto;\":\"⪁\",\"lesdotor;\":\"⪃\",\"lesg;\":\"⋚︀\",\"lesges;\":\"⪓\",\"lessapprox;\":\"⪅\",\"lessdot;\":\"⋖\",\"lesseqgtr;\":\"⋚\",\"lesseqqgtr;\":\"⪋\",\"LessEqualGreater;\":\"⋚\",\"LessFullEqual;\":\"≦\",\"LessGreater;\":\"≶\",\"lessgtr;\":\"≶\",\"LessLess;\":\"⪡\",\"lesssim;\":\"≲\",\"LessSlantEqual;\":\"⩽\",\"LessTilde;\":\"≲\",\"lfisht;\":\"⥼\",\"lfloor;\":\"⌊\",\"Lfr;\":\"𝔏\",\"lfr;\":\"𝔩\",\"lg;\":\"≶\",\"lgE;\":\"⪑\",\"lHar;\":\"⥢\",\"lhard;\":\"↽\",\"lharu;\":\"↼\",\"lharul;\":\"⥪\",\"lhblk;\":\"▄\",\"LJcy;\":\"Љ\",\"ljcy;\":\"љ\",\"Ll;\":\"⋘\",\"ll;\":\"≪\",\"llarr;\":\"⇇\",\"llcorner;\":\"⌞\",\"Lleftarrow;\":\"⇚\",\"llhard;\":\"⥫\",\"lltri;\":\"◺\",\"Lmidot;\":\"Ŀ\",\"lmidot;\":\"ŀ\",\"lmoust;\":\"⎰\",\"lmoustache;\":\"⎰\",\"lnap;\":\"⪉\",\"lnapprox;\":\"⪉\",\"lnE;\":\"≨\",\"lne;\":\"⪇\",\"lneq;\":\"⪇\",\"lneqq;\":\"≨\",\"lnsim;\":\"⋦\",\"loang;\":\"⟬\",\"loarr;\":\"⇽\",\"lobrk;\":\"⟦\",\"LongLeftArrow;\":\"⟵\",\"Longleftarrow;\":\"⟸\",\"longleftarrow;\":\"⟵\",\"LongLeftRightArrow;\":\"⟷\",\"Longleftrightarrow;\":\"⟺\",\"longleftrightarrow;\":\"⟷\",\"longmapsto;\":\"⟼\",\"LongRightArrow;\":\"⟶\",\"Longrightarrow;\":\"⟹\",\"longrightarrow;\":\"⟶\",\"looparrowleft;\":\"↫\",\"looparrowright;\":\"↬\",\"lopar;\":\"⦅\",\"Lopf;\":\"𝕃\",\"lopf;\":\"𝕝\",\"loplus;\":\"⨭\",\"lotimes;\":\"⨴\",\"lowast;\":\"∗\",\"lowbar;\":\"_\",\"LowerLeftArrow;\":\"↙\",\"LowerRightArrow;\":\"↘\",\"loz;\":\"◊\",\"lozenge;\":\"◊\",\"lozf;\":\"⧫\",\"lpar;\":\"(\",\"lparlt;\":\"⦓\",\"lrarr;\":\"⇆\",\"lrcorner;\":\"⌟\",\"lrhar;\":\"⇋\",\"lrhard;\":\"⥭\",\"lrm;\":\"‎\",\"lrtri;\":\"⊿\",\"lsaquo;\":\"‹\",\"Lscr;\":\"ℒ\",\"lscr;\":\"𝓁\",\"Lsh;\":\"↰\",\"lsh;\":\"↰\",\"lsim;\":\"≲\",\"lsime;\":\"⪍\",\"lsimg;\":\"⪏\",\"lsqb;\":\"[\",\"lsquo;\":\"‘\",\"lsquor;\":\"‚\",\"Lstrok;\":\"Ł\",\"lstrok;\":\"ł\",\"LT;\":\"<\",LT:\"<\",\"Lt;\":\"≪\",\"lt;\":\"<\",lt:\"<\",\"ltcc;\":\"⪦\",\"ltcir;\":\"⩹\",\"ltdot;\":\"⋖\",\"lthree;\":\"⋋\",\"ltimes;\":\"⋉\",\"ltlarr;\":\"⥶\",\"ltquest;\":\"⩻\",\"ltri;\":\"◃\",\"ltrie;\":\"⊴\",\"ltrif;\":\"◂\",\"ltrPar;\":\"⦖\",\"lurdshar;\":\"⥊\",\"luruhar;\":\"⥦\",\"lvertneqq;\":\"≨︀\",\"lvnE;\":\"≨︀\",\"macr;\":\"¯\",macr:\"¯\",\"male;\":\"♂\",\"malt;\":\"✠\",\"maltese;\":\"✠\",\"Map;\":\"⤅\",\"map;\":\"↦\",\"mapsto;\":\"↦\",\"mapstodown;\":\"↧\",\"mapstoleft;\":\"↤\",\"mapstoup;\":\"↥\",\"marker;\":\"▮\",\"mcomma;\":\"⨩\",\"Mcy;\":\"М\",\"mcy;\":\"м\",\"mdash;\":\"—\",\"mDDot;\":\"∺\",\"measuredangle;\":\"∡\",\"MediumSpace;\":\" \",\"Mellintrf;\":\"ℳ\",\"Mfr;\":\"𝔐\",\"mfr;\":\"𝔪\",\"mho;\":\"℧\",\"micro;\":\"µ\",micro:\"µ\",\"mid;\":\"∣\",\"midast;\":\"*\",\"midcir;\":\"⫰\",\"middot;\":\"·\",middot:\"·\",\"minus;\":\"−\",\"minusb;\":\"⊟\",\"minusd;\":\"∸\",\"minusdu;\":\"⨪\",\"MinusPlus;\":\"∓\",\"mlcp;\":\"⫛\",\"mldr;\":\"…\",\"mnplus;\":\"∓\",\"models;\":\"⊧\",\"Mopf;\":\"𝕄\",\"mopf;\":\"𝕞\",\"mp;\":\"∓\",\"Mscr;\":\"ℳ\",\"mscr;\":\"𝓂\",\"mstpos;\":\"∾\",\"Mu;\":\"Μ\",\"mu;\":\"μ\",\"multimap;\":\"⊸\",\"mumap;\":\"⊸\",\"nabla;\":\"∇\",\"Nacute;\":\"Ń\",\"nacute;\":\"ń\",\"nang;\":\"∠⃒\",\"nap;\":\"≉\",\"napE;\":\"⩰̸\",\"napid;\":\"≋̸\",\"napos;\":\"ŉ\",\"napprox;\":\"≉\",\"natur;\":\"♮\",\"natural;\":\"♮\",\"naturals;\":\"ℕ\",\"nbsp;\":\" \",nbsp:\" \",\"nbump;\":\"≎̸\",\"nbumpe;\":\"≏̸\",\"ncap;\":\"⩃\",\"Ncaron;\":\"Ň\",\"ncaron;\":\"ň\",\"Ncedil;\":\"Ņ\",\"ncedil;\":\"ņ\",\"ncong;\":\"≇\",\"ncongdot;\":\"⩭̸\",\"ncup;\":\"⩂\",\"Ncy;\":\"Н\",\"ncy;\":\"н\",\"ndash;\":\"–\",\"ne;\":\"≠\",\"nearhk;\":\"⤤\",\"neArr;\":\"⇗\",\"nearr;\":\"↗\",\"nearrow;\":\"↗\",\"nedot;\":\"≐̸\",\"NegativeMediumSpace;\":\"​\",\"NegativeThickSpace;\":\"​\",\"NegativeThinSpace;\":\"​\",\"NegativeVeryThinSpace;\":\"​\",\"nequiv;\":\"≢\",\"nesear;\":\"⤨\",\"nesim;\":\"≂̸\",\"NestedGreaterGreater;\":\"≫\",\"NestedLessLess;\":\"≪\",\"NewLine;\":\"\\n\",\"nexist;\":\"∄\",\"nexists;\":\"∄\",\"Nfr;\":\"𝔑\",\"nfr;\":\"𝔫\",\"ngE;\":\"≧̸\",\"nge;\":\"≱\",\"ngeq;\":\"≱\",\"ngeqq;\":\"≧̸\",\"ngeqslant;\":\"⩾̸\",\"nges;\":\"⩾̸\",\"nGg;\":\"⋙̸\",\"ngsim;\":\"≵\",\"nGt;\":\"≫⃒\",\"ngt;\":\"≯\",\"ngtr;\":\"≯\",\"nGtv;\":\"≫̸\",\"nhArr;\":\"⇎\",\"nharr;\":\"↮\",\"nhpar;\":\"⫲\",\"ni;\":\"∋\",\"nis;\":\"⋼\",\"nisd;\":\"⋺\",\"niv;\":\"∋\",\"NJcy;\":\"Њ\",\"njcy;\":\"њ\",\"nlArr;\":\"⇍\",\"nlarr;\":\"↚\",\"nldr;\":\"‥\",\"nlE;\":\"≦̸\",\"nle;\":\"≰\",\"nLeftarrow;\":\"⇍\",\"nleftarrow;\":\"↚\",\"nLeftrightarrow;\":\"⇎\",\"nleftrightarrow;\":\"↮\",\"nleq;\":\"≰\",\"nleqq;\":\"≦̸\",\"nleqslant;\":\"⩽̸\",\"nles;\":\"⩽̸\",\"nless;\":\"≮\",\"nLl;\":\"⋘̸\",\"nlsim;\":\"≴\",\"nLt;\":\"≪⃒\",\"nlt;\":\"≮\",\"nltri;\":\"⋪\",\"nltrie;\":\"⋬\",\"nLtv;\":\"≪̸\",\"nmid;\":\"∤\",\"NoBreak;\":\"⁠\",\"NonBreakingSpace;\":\" \",\"Nopf;\":\"ℕ\",\"nopf;\":\"𝕟\",\"Not;\":\"⫬\",\"not;\":\"¬\",not:\"¬\",\"NotCongruent;\":\"≢\",\"NotCupCap;\":\"≭\",\"NotDoubleVerticalBar;\":\"∦\",\"NotElement;\":\"∉\",\"NotEqual;\":\"≠\",\"NotEqualTilde;\":\"≂̸\",\"NotExists;\":\"∄\",\"NotGreater;\":\"≯\",\"NotGreaterEqual;\":\"≱\",\"NotGreaterFullEqual;\":\"≧̸\",\"NotGreaterGreater;\":\"≫̸\",\"NotGreaterLess;\":\"≹\",\"NotGreaterSlantEqual;\":\"⩾̸\",\"NotGreaterTilde;\":\"≵\",\"NotHumpDownHump;\":\"≎̸\",\"NotHumpEqual;\":\"≏̸\",\"notin;\":\"∉\",\"notindot;\":\"⋵̸\",\"notinE;\":\"⋹̸\",\"notinva;\":\"∉\",\"notinvb;\":\"⋷\",\"notinvc;\":\"⋶\",\"NotLeftTriangle;\":\"⋪\",\"NotLeftTriangleBar;\":\"⧏̸\",\"NotLeftTriangleEqual;\":\"⋬\",\"NotLess;\":\"≮\",\"NotLessEqual;\":\"≰\",\"NotLessGreater;\":\"≸\",\"NotLessLess;\":\"≪̸\",\"NotLessSlantEqual;\":\"⩽̸\",\"NotLessTilde;\":\"≴\",\"NotNestedGreaterGreater;\":\"⪢̸\",\"NotNestedLessLess;\":\"⪡̸\",\"notni;\":\"∌\",\"notniva;\":\"∌\",\"notnivb;\":\"⋾\",\"notnivc;\":\"⋽\",\"NotPrecedes;\":\"⊀\",\"NotPrecedesEqual;\":\"⪯̸\",\"NotPrecedesSlantEqual;\":\"⋠\",\"NotReverseElement;\":\"∌\",\"NotRightTriangle;\":\"⋫\",\"NotRightTriangleBar;\":\"⧐̸\",\"NotRightTriangleEqual;\":\"⋭\",\"NotSquareSubset;\":\"⊏̸\",\"NotSquareSubsetEqual;\":\"⋢\",\"NotSquareSuperset;\":\"⊐̸\",\"NotSquareSupersetEqual;\":\"⋣\",\"NotSubset;\":\"⊂⃒\",\"NotSubsetEqual;\":\"⊈\",\"NotSucceeds;\":\"⊁\",\"NotSucceedsEqual;\":\"⪰̸\",\"NotSucceedsSlantEqual;\":\"⋡\",\"NotSucceedsTilde;\":\"≿̸\",\"NotSuperset;\":\"⊃⃒\",\"NotSupersetEqual;\":\"⊉\",\"NotTilde;\":\"≁\",\"NotTildeEqual;\":\"≄\",\"NotTildeFullEqual;\":\"≇\",\"NotTildeTilde;\":\"≉\",\"NotVerticalBar;\":\"∤\",\"npar;\":\"∦\",\"nparallel;\":\"∦\",\"nparsl;\":\"⫽⃥\",\"npart;\":\"∂̸\",\"npolint;\":\"⨔\",\"npr;\":\"⊀\",\"nprcue;\":\"⋠\",\"npre;\":\"⪯̸\",\"nprec;\":\"⊀\",\"npreceq;\":\"⪯̸\",\"nrArr;\":\"⇏\",\"nrarr;\":\"↛\",\"nrarrc;\":\"⤳̸\",\"nrarrw;\":\"↝̸\",\"nRightarrow;\":\"⇏\",\"nrightarrow;\":\"↛\",\"nrtri;\":\"⋫\",\"nrtrie;\":\"⋭\",\"nsc;\":\"⊁\",\"nsccue;\":\"⋡\",\"nsce;\":\"⪰̸\",\"Nscr;\":\"𝒩\",\"nscr;\":\"𝓃\",\"nshortmid;\":\"∤\",\"nshortparallel;\":\"∦\",\"nsim;\":\"≁\",\"nsime;\":\"≄\",\"nsimeq;\":\"≄\",\"nsmid;\":\"∤\",\"nspar;\":\"∦\",\"nsqsube;\":\"⋢\",\"nsqsupe;\":\"⋣\",\"nsub;\":\"⊄\",\"nsubE;\":\"⫅̸\",\"nsube;\":\"⊈\",\"nsubset;\":\"⊂⃒\",\"nsubseteq;\":\"⊈\",\"nsubseteqq;\":\"⫅̸\",\"nsucc;\":\"⊁\",\"nsucceq;\":\"⪰̸\",\"nsup;\":\"⊅\",\"nsupE;\":\"⫆̸\",\"nsupe;\":\"⊉\",\"nsupset;\":\"⊃⃒\",\"nsupseteq;\":\"⊉\",\"nsupseteqq;\":\"⫆̸\",\"ntgl;\":\"≹\",\"Ntilde;\":\"Ñ\",Ntilde:\"Ñ\",\"ntilde;\":\"ñ\",ntilde:\"ñ\",\"ntlg;\":\"≸\",\"ntriangleleft;\":\"⋪\",\"ntrianglelefteq;\":\"⋬\",\"ntriangleright;\":\"⋫\",\"ntrianglerighteq;\":\"⋭\",\"Nu;\":\"Ν\",\"nu;\":\"ν\",\"num;\":\"#\",\"numero;\":\"№\",\"numsp;\":\" \",\"nvap;\":\"≍⃒\",\"nVDash;\":\"⊯\",\"nVdash;\":\"⊮\",\"nvDash;\":\"⊭\",\"nvdash;\":\"⊬\",\"nvge;\":\"≥⃒\",\"nvgt;\":\">⃒\",\"nvHarr;\":\"⤄\",\"nvinfin;\":\"⧞\",\"nvlArr;\":\"⤂\",\"nvle;\":\"≤⃒\",\"nvlt;\":\"<⃒\",\"nvltrie;\":\"⊴⃒\",\"nvrArr;\":\"⤃\",\"nvrtrie;\":\"⊵⃒\",\"nvsim;\":\"∼⃒\",\"nwarhk;\":\"⤣\",\"nwArr;\":\"⇖\",\"nwarr;\":\"↖\",\"nwarrow;\":\"↖\",\"nwnear;\":\"⤧\",\"Oacute;\":\"Ó\",Oacute:\"Ó\",\"oacute;\":\"ó\",oacute:\"ó\",\"oast;\":\"⊛\",\"ocir;\":\"⊚\",\"Ocirc;\":\"Ô\",Ocirc:\"Ô\",\"ocirc;\":\"ô\",ocirc:\"ô\",\"Ocy;\":\"О\",\"ocy;\":\"о\",\"odash;\":\"⊝\",\"Odblac;\":\"Ő\",\"odblac;\":\"ő\",\"odiv;\":\"⨸\",\"odot;\":\"⊙\",\"odsold;\":\"⦼\",\"OElig;\":\"Œ\",\"oelig;\":\"œ\",\"ofcir;\":\"⦿\",\"Ofr;\":\"𝔒\",\"ofr;\":\"𝔬\",\"ogon;\":\"˛\",\"Ograve;\":\"Ò\",Ograve:\"Ò\",\"ograve;\":\"ò\",ograve:\"ò\",\"ogt;\":\"⧁\",\"ohbar;\":\"⦵\",\"ohm;\":\"Ω\",\"oint;\":\"∮\",\"olarr;\":\"↺\",\"olcir;\":\"⦾\",\"olcross;\":\"⦻\",\"oline;\":\"‾\",\"olt;\":\"⧀\",\"Omacr;\":\"Ō\",\"omacr;\":\"ō\",\"Omega;\":\"Ω\",\"omega;\":\"ω\",\"Omicron;\":\"Ο\",\"omicron;\":\"ο\",\"omid;\":\"⦶\",\"ominus;\":\"⊖\",\"Oopf;\":\"𝕆\",\"oopf;\":\"𝕠\",\"opar;\":\"⦷\",\"OpenCurlyDoubleQuote;\":\"“\",\"OpenCurlyQuote;\":\"‘\",\"operp;\":\"⦹\",\"oplus;\":\"⊕\",\"Or;\":\"⩔\",\"or;\":\"∨\",\"orarr;\":\"↻\",\"ord;\":\"⩝\",\"order;\":\"ℴ\",\"orderof;\":\"ℴ\",\"ordf;\":\"ª\",ordf:\"ª\",\"ordm;\":\"º\",ordm:\"º\",\"origof;\":\"⊶\",\"oror;\":\"⩖\",\"orslope;\":\"⩗\",\"orv;\":\"⩛\",\"oS;\":\"Ⓢ\",\"Oscr;\":\"𝒪\",\"oscr;\":\"ℴ\",\"Oslash;\":\"Ø\",Oslash:\"Ø\",\"oslash;\":\"ø\",oslash:\"ø\",\"osol;\":\"⊘\",\"Otilde;\":\"Õ\",Otilde:\"Õ\",\"otilde;\":\"õ\",otilde:\"õ\",\"Otimes;\":\"⨷\",\"otimes;\":\"⊗\",\"otimesas;\":\"⨶\",\"Ouml;\":\"Ö\",Ouml:\"Ö\",\"ouml;\":\"ö\",ouml:\"ö\",\"ovbar;\":\"⌽\",\"OverBar;\":\"‾\",\"OverBrace;\":\"⏞\",\"OverBracket;\":\"⎴\",\"OverParenthesis;\":\"⏜\",\"par;\":\"∥\",\"para;\":\"¶\",para:\"¶\",\"parallel;\":\"∥\",\"parsim;\":\"⫳\",\"parsl;\":\"⫽\",\"part;\":\"∂\",\"PartialD;\":\"∂\",\"Pcy;\":\"П\",\"pcy;\":\"п\",\"percnt;\":\"%\",\"period;\":\".\",\"permil;\":\"‰\",\"perp;\":\"⊥\",\"pertenk;\":\"‱\",\"Pfr;\":\"𝔓\",\"pfr;\":\"𝔭\",\"Phi;\":\"Φ\",\"phi;\":\"φ\",\"phiv;\":\"ϕ\",\"phmmat;\":\"ℳ\",\"phone;\":\"☎\",\"Pi;\":\"Π\",\"pi;\":\"π\",\"pitchfork;\":\"⋔\",\"piv;\":\"ϖ\",\"planck;\":\"ℏ\",\"planckh;\":\"ℎ\",\"plankv;\":\"ℏ\",\"plus;\":\"+\",\"plusacir;\":\"⨣\",\"plusb;\":\"⊞\",\"pluscir;\":\"⨢\",\"plusdo;\":\"∔\",\"plusdu;\":\"⨥\",\"pluse;\":\"⩲\",\"PlusMinus;\":\"±\",\"plusmn;\":\"±\",plusmn:\"±\",\"plussim;\":\"⨦\",\"plustwo;\":\"⨧\",\"pm;\":\"±\",\"Poincareplane;\":\"ℌ\",\"pointint;\":\"⨕\",\"Popf;\":\"ℙ\",\"popf;\":\"𝕡\",\"pound;\":\"£\",pound:\"£\",\"Pr;\":\"⪻\",\"pr;\":\"≺\",\"prap;\":\"⪷\",\"prcue;\":\"≼\",\"prE;\":\"⪳\",\"pre;\":\"⪯\",\"prec;\":\"≺\",\"precapprox;\":\"⪷\",\"preccurlyeq;\":\"≼\",\"Precedes;\":\"≺\",\"PrecedesEqual;\":\"⪯\",\"PrecedesSlantEqual;\":\"≼\",\"PrecedesTilde;\":\"≾\",\"preceq;\":\"⪯\",\"precnapprox;\":\"⪹\",\"precneqq;\":\"⪵\",\"precnsim;\":\"⋨\",\"precsim;\":\"≾\",\"Prime;\":\"″\",\"prime;\":\"′\",\"primes;\":\"ℙ\",\"prnap;\":\"⪹\",\"prnE;\":\"⪵\",\"prnsim;\":\"⋨\",\"prod;\":\"∏\",\"Product;\":\"∏\",\"profalar;\":\"⌮\",\"profline;\":\"⌒\",\"profsurf;\":\"⌓\",\"prop;\":\"∝\",\"Proportion;\":\"∷\",\"Proportional;\":\"∝\",\"propto;\":\"∝\",\"prsim;\":\"≾\",\"prurel;\":\"⊰\",\"Pscr;\":\"𝒫\",\"pscr;\":\"𝓅\",\"Psi;\":\"Ψ\",\"psi;\":\"ψ\",\"puncsp;\":\" \",\"Qfr;\":\"𝔔\",\"qfr;\":\"𝔮\",\"qint;\":\"⨌\",\"Qopf;\":\"ℚ\",\"qopf;\":\"𝕢\",\"qprime;\":\"⁗\",\"Qscr;\":\"𝒬\",\"qscr;\":\"𝓆\",\"quaternions;\":\"ℍ\",\"quatint;\":\"⨖\",\"quest;\":\"?\",\"questeq;\":\"≟\",\"QUOT;\":'\"',QUOT:'\"',\"quot;\":'\"',quot:'\"',\"rAarr;\":\"⇛\",\"race;\":\"∽̱\",\"Racute;\":\"Ŕ\",\"racute;\":\"ŕ\",\"radic;\":\"√\",\"raemptyv;\":\"⦳\",\"Rang;\":\"⟫\",\"rang;\":\"⟩\",\"rangd;\":\"⦒\",\"range;\":\"⦥\",\"rangle;\":\"⟩\",\"raquo;\":\"»\",raquo:\"»\",\"Rarr;\":\"↠\",\"rArr;\":\"⇒\",\"rarr;\":\"→\",\"rarrap;\":\"⥵\",\"rarrb;\":\"⇥\",\"rarrbfs;\":\"⤠\",\"rarrc;\":\"⤳\",\"rarrfs;\":\"⤞\",\"rarrhk;\":\"↪\",\"rarrlp;\":\"↬\",\"rarrpl;\":\"⥅\",\"rarrsim;\":\"⥴\",\"Rarrtl;\":\"⤖\",\"rarrtl;\":\"↣\",\"rarrw;\":\"↝\",\"rAtail;\":\"⤜\",\"ratail;\":\"⤚\",\"ratio;\":\"∶\",\"rationals;\":\"ℚ\",\"RBarr;\":\"⤐\",\"rBarr;\":\"⤏\",\"rbarr;\":\"⤍\",\"rbbrk;\":\"❳\",\"rbrace;\":\"}\",\"rbrack;\":\"]\",\"rbrke;\":\"⦌\",\"rbrksld;\":\"⦎\",\"rbrkslu;\":\"⦐\",\"Rcaron;\":\"Ř\",\"rcaron;\":\"ř\",\"Rcedil;\":\"Ŗ\",\"rcedil;\":\"ŗ\",\"rceil;\":\"⌉\",\"rcub;\":\"}\",\"Rcy;\":\"Р\",\"rcy;\":\"р\",\"rdca;\":\"⤷\",\"rdldhar;\":\"⥩\",\"rdquo;\":\"”\",\"rdquor;\":\"”\",\"rdsh;\":\"↳\",\"Re;\":\"ℜ\",\"real;\":\"ℜ\",\"realine;\":\"ℛ\",\"realpart;\":\"ℜ\",\"reals;\":\"ℝ\",\"rect;\":\"▭\",\"REG;\":\"®\",REG:\"®\",\"reg;\":\"®\",reg:\"®\",\"ReverseElement;\":\"∋\",\"ReverseEquilibrium;\":\"⇋\",\"ReverseUpEquilibrium;\":\"⥯\",\"rfisht;\":\"⥽\",\"rfloor;\":\"⌋\",\"Rfr;\":\"ℜ\",\"rfr;\":\"𝔯\",\"rHar;\":\"⥤\",\"rhard;\":\"⇁\",\"rharu;\":\"⇀\",\"rharul;\":\"⥬\",\"Rho;\":\"Ρ\",\"rho;\":\"ρ\",\"rhov;\":\"ϱ\",\"RightAngleBracket;\":\"⟩\",\"RightArrow;\":\"→\",\"Rightarrow;\":\"⇒\",\"rightarrow;\":\"→\",\"RightArrowBar;\":\"⇥\",\"RightArrowLeftArrow;\":\"⇄\",\"rightarrowtail;\":\"↣\",\"RightCeiling;\":\"⌉\",\"RightDoubleBracket;\":\"⟧\",\"RightDownTeeVector;\":\"⥝\",\"RightDownVector;\":\"⇂\",\"RightDownVectorBar;\":\"⥕\",\"RightFloor;\":\"⌋\",\"rightharpoondown;\":\"⇁\",\"rightharpoonup;\":\"⇀\",\"rightleftarrows;\":\"⇄\",\"rightleftharpoons;\":\"⇌\",\"rightrightarrows;\":\"⇉\",\"rightsquigarrow;\":\"↝\",\"RightTee;\":\"⊢\",\"RightTeeArrow;\":\"↦\",\"RightTeeVector;\":\"⥛\",\"rightthreetimes;\":\"⋌\",\"RightTriangle;\":\"⊳\",\"RightTriangleBar;\":\"⧐\",\"RightTriangleEqual;\":\"⊵\",\"RightUpDownVector;\":\"⥏\",\"RightUpTeeVector;\":\"⥜\",\"RightUpVector;\":\"↾\",\"RightUpVectorBar;\":\"⥔\",\"RightVector;\":\"⇀\",\"RightVectorBar;\":\"⥓\",\"ring;\":\"˚\",\"risingdotseq;\":\"≓\",\"rlarr;\":\"⇄\",\"rlhar;\":\"⇌\",\"rlm;\":\"‏\",\"rmoust;\":\"⎱\",\"rmoustache;\":\"⎱\",\"rnmid;\":\"⫮\",\"roang;\":\"⟭\",\"roarr;\":\"⇾\",\"robrk;\":\"⟧\",\"ropar;\":\"⦆\",\"Ropf;\":\"ℝ\",\"ropf;\":\"𝕣\",\"roplus;\":\"⨮\",\"rotimes;\":\"⨵\",\"RoundImplies;\":\"⥰\",\"rpar;\":\")\",\"rpargt;\":\"⦔\",\"rppolint;\":\"⨒\",\"rrarr;\":\"⇉\",\"Rrightarrow;\":\"⇛\",\"rsaquo;\":\"›\",\"Rscr;\":\"ℛ\",\"rscr;\":\"𝓇\",\"Rsh;\":\"↱\",\"rsh;\":\"↱\",\"rsqb;\":\"]\",\"rsquo;\":\"’\",\"rsquor;\":\"’\",\"rthree;\":\"⋌\",\"rtimes;\":\"⋊\",\"rtri;\":\"▹\",\"rtrie;\":\"⊵\",\"rtrif;\":\"▸\",\"rtriltri;\":\"⧎\",\"RuleDelayed;\":\"⧴\",\"ruluhar;\":\"⥨\",\"rx;\":\"℞\",\"Sacute;\":\"Ś\",\"sacute;\":\"ś\",\"sbquo;\":\"‚\",\"Sc;\":\"⪼\",\"sc;\":\"≻\",\"scap;\":\"⪸\",\"Scaron;\":\"Š\",\"scaron;\":\"š\",\"sccue;\":\"≽\",\"scE;\":\"⪴\",\"sce;\":\"⪰\",\"Scedil;\":\"Ş\",\"scedil;\":\"ş\",\"Scirc;\":\"Ŝ\",\"scirc;\":\"ŝ\",\"scnap;\":\"⪺\",\"scnE;\":\"⪶\",\"scnsim;\":\"⋩\",\"scpolint;\":\"⨓\",\"scsim;\":\"≿\",\"Scy;\":\"С\",\"scy;\":\"с\",\"sdot;\":\"⋅\",\"sdotb;\":\"⊡\",\"sdote;\":\"⩦\",\"searhk;\":\"⤥\",\"seArr;\":\"⇘\",\"searr;\":\"↘\",\"searrow;\":\"↘\",\"sect;\":\"§\",sect:\"§\",\"semi;\":\";\",\"seswar;\":\"⤩\",\"setminus;\":\"∖\",\"setmn;\":\"∖\",\"sext;\":\"✶\",\"Sfr;\":\"𝔖\",\"sfr;\":\"𝔰\",\"sfrown;\":\"⌢\",\"sharp;\":\"♯\",\"SHCHcy;\":\"Щ\",\"shchcy;\":\"щ\",\"SHcy;\":\"Ш\",\"shcy;\":\"ш\",\"ShortDownArrow;\":\"↓\",\"ShortLeftArrow;\":\"←\",\"shortmid;\":\"∣\",\"shortparallel;\":\"∥\",\"ShortRightArrow;\":\"→\",\"ShortUpArrow;\":\"↑\",\"shy;\":\"­\",shy:\"­\",\"Sigma;\":\"Σ\",\"sigma;\":\"σ\",\"sigmaf;\":\"ς\",\"sigmav;\":\"ς\",\"sim;\":\"∼\",\"simdot;\":\"⩪\",\"sime;\":\"≃\",\"simeq;\":\"≃\",\"simg;\":\"⪞\",\"simgE;\":\"⪠\",\"siml;\":\"⪝\",\"simlE;\":\"⪟\",\"simne;\":\"≆\",\"simplus;\":\"⨤\",\"simrarr;\":\"⥲\",\"slarr;\":\"←\",\"SmallCircle;\":\"∘\",\"smallsetminus;\":\"∖\",\"smashp;\":\"⨳\",\"smeparsl;\":\"⧤\",\"smid;\":\"∣\",\"smile;\":\"⌣\",\"smt;\":\"⪪\",\"smte;\":\"⪬\",\"smtes;\":\"⪬︀\",\"SOFTcy;\":\"Ь\",\"softcy;\":\"ь\",\"sol;\":\"/\",\"solb;\":\"⧄\",\"solbar;\":\"⌿\",\"Sopf;\":\"𝕊\",\"sopf;\":\"𝕤\",\"spades;\":\"♠\",\"spadesuit;\":\"♠\",\"spar;\":\"∥\",\"sqcap;\":\"⊓\",\"sqcaps;\":\"⊓︀\",\"sqcup;\":\"⊔\",\"sqcups;\":\"⊔︀\",\"Sqrt;\":\"√\",\"sqsub;\":\"⊏\",\"sqsube;\":\"⊑\",\"sqsubset;\":\"⊏\",\"sqsubseteq;\":\"⊑\",\"sqsup;\":\"⊐\",\"sqsupe;\":\"⊒\",\"sqsupset;\":\"⊐\",\"sqsupseteq;\":\"⊒\",\"squ;\":\"□\",\"Square;\":\"□\",\"square;\":\"□\",\"SquareIntersection;\":\"⊓\",\"SquareSubset;\":\"⊏\",\"SquareSubsetEqual;\":\"⊑\",\"SquareSuperset;\":\"⊐\",\"SquareSupersetEqual;\":\"⊒\",\"SquareUnion;\":\"⊔\",\"squarf;\":\"▪\",\"squf;\":\"▪\",\"srarr;\":\"→\",\"Sscr;\":\"𝒮\",\"sscr;\":\"𝓈\",\"ssetmn;\":\"∖\",\"ssmile;\":\"⌣\",\"sstarf;\":\"⋆\",\"Star;\":\"⋆\",\"star;\":\"☆\",\"starf;\":\"★\",\"straightepsilon;\":\"ϵ\",\"straightphi;\":\"ϕ\",\"strns;\":\"¯\",\"Sub;\":\"⋐\",\"sub;\":\"⊂\",\"subdot;\":\"⪽\",\"subE;\":\"⫅\",\"sube;\":\"⊆\",\"subedot;\":\"⫃\",\"submult;\":\"⫁\",\"subnE;\":\"⫋\",\"subne;\":\"⊊\",\"subplus;\":\"⪿\",\"subrarr;\":\"⥹\",\"Subset;\":\"⋐\",\"subset;\":\"⊂\",\"subseteq;\":\"⊆\",\"subseteqq;\":\"⫅\",\"SubsetEqual;\":\"⊆\",\"subsetneq;\":\"⊊\",\"subsetneqq;\":\"⫋\",\"subsim;\":\"⫇\",\"subsub;\":\"⫕\",\"subsup;\":\"⫓\",\"succ;\":\"≻\",\"succapprox;\":\"⪸\",\"succcurlyeq;\":\"≽\",\"Succeeds;\":\"≻\",\"SucceedsEqual;\":\"⪰\",\"SucceedsSlantEqual;\":\"≽\",\"SucceedsTilde;\":\"≿\",\"succeq;\":\"⪰\",\"succnapprox;\":\"⪺\",\"succneqq;\":\"⪶\",\"succnsim;\":\"⋩\",\"succsim;\":\"≿\",\"SuchThat;\":\"∋\",\"Sum;\":\"∑\",\"sum;\":\"∑\",\"sung;\":\"♪\",\"Sup;\":\"⋑\",\"sup;\":\"⊃\",\"sup1;\":\"¹\",sup1:\"¹\",\"sup2;\":\"²\",sup2:\"²\",\"sup3;\":\"³\",sup3:\"³\",\"supdot;\":\"⪾\",\"supdsub;\":\"⫘\",\"supE;\":\"⫆\",\"supe;\":\"⊇\",\"supedot;\":\"⫄\",\"Superset;\":\"⊃\",\"SupersetEqual;\":\"⊇\",\"suphsol;\":\"⟉\",\"suphsub;\":\"⫗\",\"suplarr;\":\"⥻\",\"supmult;\":\"⫂\",\"supnE;\":\"⫌\",\"supne;\":\"⊋\",\"supplus;\":\"⫀\",\"Supset;\":\"⋑\",\"supset;\":\"⊃\",\"supseteq;\":\"⊇\",\"supseteqq;\":\"⫆\",\"supsetneq;\":\"⊋\",\"supsetneqq;\":\"⫌\",\"supsim;\":\"⫈\",\"supsub;\":\"⫔\",\"supsup;\":\"⫖\",\"swarhk;\":\"⤦\",\"swArr;\":\"⇙\",\"swarr;\":\"↙\",\"swarrow;\":\"↙\",\"swnwar;\":\"⤪\",\"szlig;\":\"ß\",szlig:\"ß\",\"Tab;\":\"\\t\",\"target;\":\"⌖\",\"Tau;\":\"Τ\",\"tau;\":\"τ\",\"tbrk;\":\"⎴\",\"Tcaron;\":\"Ť\",\"tcaron;\":\"ť\",\"Tcedil;\":\"Ţ\",\"tcedil;\":\"ţ\",\"Tcy;\":\"Т\",\"tcy;\":\"т\",\"tdot;\":\"⃛\",\"telrec;\":\"⌕\",\"Tfr;\":\"𝔗\",\"tfr;\":\"𝔱\",\"there4;\":\"∴\",\"Therefore;\":\"∴\",\"therefore;\":\"∴\",\"Theta;\":\"Θ\",\"theta;\":\"θ\",\"thetasym;\":\"ϑ\",\"thetav;\":\"ϑ\",\"thickapprox;\":\"≈\",\"thicksim;\":\"∼\",\"ThickSpace;\":\"  \",\"thinsp;\":\" \",\"ThinSpace;\":\" \",\"thkap;\":\"≈\",\"thksim;\":\"∼\",\"THORN;\":\"Þ\",THORN:\"Þ\",\"thorn;\":\"þ\",thorn:\"þ\",\"Tilde;\":\"∼\",\"tilde;\":\"˜\",\"TildeEqual;\":\"≃\",\"TildeFullEqual;\":\"≅\",\"TildeTilde;\":\"≈\",\"times;\":\"×\",times:\"×\",\"timesb;\":\"⊠\",\"timesbar;\":\"⨱\",\"timesd;\":\"⨰\",\"tint;\":\"∭\",\"toea;\":\"⤨\",\"top;\":\"⊤\",\"topbot;\":\"⌶\",\"topcir;\":\"⫱\",\"Topf;\":\"𝕋\",\"topf;\":\"𝕥\",\"topfork;\":\"⫚\",\"tosa;\":\"⤩\",\"tprime;\":\"‴\",\"TRADE;\":\"™\",\"trade;\":\"™\",\"triangle;\":\"▵\",\"triangledown;\":\"▿\",\"triangleleft;\":\"◃\",\"trianglelefteq;\":\"⊴\",\"triangleq;\":\"≜\",\"triangleright;\":\"▹\",\"trianglerighteq;\":\"⊵\",\"tridot;\":\"◬\",\"trie;\":\"≜\",\"triminus;\":\"⨺\",\"TripleDot;\":\"⃛\",\"triplus;\":\"⨹\",\"trisb;\":\"⧍\",\"tritime;\":\"⨻\",\"trpezium;\":\"⏢\",\"Tscr;\":\"𝒯\",\"tscr;\":\"𝓉\",\"TScy;\":\"Ц\",\"tscy;\":\"ц\",\"TSHcy;\":\"Ћ\",\"tshcy;\":\"ћ\",\"Tstrok;\":\"Ŧ\",\"tstrok;\":\"ŧ\",\"twixt;\":\"≬\",\"twoheadleftarrow;\":\"↞\",\"twoheadrightarrow;\":\"↠\",\"Uacute;\":\"Ú\",Uacute:\"Ú\",\"uacute;\":\"ú\",uacute:\"ú\",\"Uarr;\":\"↟\",\"uArr;\":\"⇑\",\"uarr;\":\"↑\",\"Uarrocir;\":\"⥉\",\"Ubrcy;\":\"Ў\",\"ubrcy;\":\"ў\",\"Ubreve;\":\"Ŭ\",\"ubreve;\":\"ŭ\",\"Ucirc;\":\"Û\",Ucirc:\"Û\",\"ucirc;\":\"û\",ucirc:\"û\",\"Ucy;\":\"У\",\"ucy;\":\"у\",\"udarr;\":\"⇅\",\"Udblac;\":\"Ű\",\"udblac;\":\"ű\",\"udhar;\":\"⥮\",\"ufisht;\":\"⥾\",\"Ufr;\":\"𝔘\",\"ufr;\":\"𝔲\",\"Ugrave;\":\"Ù\",Ugrave:\"Ù\",\"ugrave;\":\"ù\",ugrave:\"ù\",\"uHar;\":\"⥣\",\"uharl;\":\"↿\",\"uharr;\":\"↾\",\"uhblk;\":\"▀\",\"ulcorn;\":\"⌜\",\"ulcorner;\":\"⌜\",\"ulcrop;\":\"⌏\",\"ultri;\":\"◸\",\"Umacr;\":\"Ū\",\"umacr;\":\"ū\",\"uml;\":\"¨\",uml:\"¨\",\"UnderBar;\":\"_\",\"UnderBrace;\":\"⏟\",\"UnderBracket;\":\"⎵\",\"UnderParenthesis;\":\"⏝\",\"Union;\":\"⋃\",\"UnionPlus;\":\"⊎\",\"Uogon;\":\"Ų\",\"uogon;\":\"ų\",\"Uopf;\":\"𝕌\",\"uopf;\":\"𝕦\",\"UpArrow;\":\"↑\",\"Uparrow;\":\"⇑\",\"uparrow;\":\"↑\",\"UpArrowBar;\":\"⤒\",\"UpArrowDownArrow;\":\"⇅\",\"UpDownArrow;\":\"↕\",\"Updownarrow;\":\"⇕\",\"updownarrow;\":\"↕\",\"UpEquilibrium;\":\"⥮\",\"upharpoonleft;\":\"↿\",\"upharpoonright;\":\"↾\",\"uplus;\":\"⊎\",\"UpperLeftArrow;\":\"↖\",\"UpperRightArrow;\":\"↗\",\"Upsi;\":\"ϒ\",\"upsi;\":\"υ\",\"upsih;\":\"ϒ\",\"Upsilon;\":\"Υ\",\"upsilon;\":\"υ\",\"UpTee;\":\"⊥\",\"UpTeeArrow;\":\"↥\",\"upuparrows;\":\"⇈\",\"urcorn;\":\"⌝\",\"urcorner;\":\"⌝\",\"urcrop;\":\"⌎\",\"Uring;\":\"Ů\",\"uring;\":\"ů\",\"urtri;\":\"◹\",\"Uscr;\":\"𝒰\",\"uscr;\":\"𝓊\",\"utdot;\":\"⋰\",\"Utilde;\":\"Ũ\",\"utilde;\":\"ũ\",\"utri;\":\"▵\",\"utrif;\":\"▴\",\"uuarr;\":\"⇈\",\"Uuml;\":\"Ü\",Uuml:\"Ü\",\"uuml;\":\"ü\",uuml:\"ü\",\"uwangle;\":\"⦧\",\"vangrt;\":\"⦜\",\"varepsilon;\":\"ϵ\",\"varkappa;\":\"ϰ\",\"varnothing;\":\"∅\",\"varphi;\":\"ϕ\",\"varpi;\":\"ϖ\",\"varpropto;\":\"∝\",\"vArr;\":\"⇕\",\"varr;\":\"↕\",\"varrho;\":\"ϱ\",\"varsigma;\":\"ς\",\"varsubsetneq;\":\"⊊︀\",\"varsubsetneqq;\":\"⫋︀\",\"varsupsetneq;\":\"⊋︀\",\"varsupsetneqq;\":\"⫌︀\",\"vartheta;\":\"ϑ\",\"vartriangleleft;\":\"⊲\",\"vartriangleright;\":\"⊳\",\"Vbar;\":\"⫫\",\"vBar;\":\"⫨\",\"vBarv;\":\"⫩\",\"Vcy;\":\"В\",\"vcy;\":\"в\",\"VDash;\":\"⊫\",\"Vdash;\":\"⊩\",\"vDash;\":\"⊨\",\"vdash;\":\"⊢\",\"Vdashl;\":\"⫦\",\"Vee;\":\"⋁\",\"vee;\":\"∨\",\"veebar;\":\"⊻\",\"veeeq;\":\"≚\",\"vellip;\":\"⋮\",\"Verbar;\":\"‖\",\"verbar;\":\"|\",\"Vert;\":\"‖\",\"vert;\":\"|\",\"VerticalBar;\":\"∣\",\"VerticalLine;\":\"|\",\"VerticalSeparator;\":\"❘\",\"VerticalTilde;\":\"≀\",\"VeryThinSpace;\":\" \",\"Vfr;\":\"𝔙\",\"vfr;\":\"𝔳\",\"vltri;\":\"⊲\",\"vnsub;\":\"⊂⃒\",\"vnsup;\":\"⊃⃒\",\"Vopf;\":\"𝕍\",\"vopf;\":\"𝕧\",\"vprop;\":\"∝\",\"vrtri;\":\"⊳\",\"Vscr;\":\"𝒱\",\"vscr;\":\"𝓋\",\"vsubnE;\":\"⫋︀\",\"vsubne;\":\"⊊︀\",\"vsupnE;\":\"⫌︀\",\"vsupne;\":\"⊋︀\",\"Vvdash;\":\"⊪\",\"vzigzag;\":\"⦚\",\"Wcirc;\":\"Ŵ\",\"wcirc;\":\"ŵ\",\"wedbar;\":\"⩟\",\"Wedge;\":\"⋀\",\"wedge;\":\"∧\",\"wedgeq;\":\"≙\",\"weierp;\":\"℘\",\"Wfr;\":\"𝔚\",\"wfr;\":\"𝔴\",\"Wopf;\":\"𝕎\",\"wopf;\":\"𝕨\",\"wp;\":\"℘\",\"wr;\":\"≀\",\"wreath;\":\"≀\",\"Wscr;\":\"𝒲\",\"wscr;\":\"𝓌\",\"xcap;\":\"⋂\",\"xcirc;\":\"◯\",\"xcup;\":\"⋃\",\"xdtri;\":\"▽\",\"Xfr;\":\"𝔛\",\"xfr;\":\"𝔵\",\"xhArr;\":\"⟺\",\"xharr;\":\"⟷\",\"Xi;\":\"Ξ\",\"xi;\":\"ξ\",\"xlArr;\":\"⟸\",\"xlarr;\":\"⟵\",\"xmap;\":\"⟼\",\"xnis;\":\"⋻\",\"xodot;\":\"⨀\",\"Xopf;\":\"𝕏\",\"xopf;\":\"𝕩\",\"xoplus;\":\"⨁\",\"xotime;\":\"⨂\",\"xrArr;\":\"⟹\",\"xrarr;\":\"⟶\",\"Xscr;\":\"𝒳\",\"xscr;\":\"𝓍\",\"xsqcup;\":\"⨆\",\"xuplus;\":\"⨄\",\"xutri;\":\"△\",\"xvee;\":\"⋁\",\"xwedge;\":\"⋀\",\"Yacute;\":\"Ý\",Yacute:\"Ý\",\"yacute;\":\"ý\",yacute:\"ý\",\"YAcy;\":\"Я\",\"yacy;\":\"я\",\"Ycirc;\":\"Ŷ\",\"ycirc;\":\"ŷ\",\"Ycy;\":\"Ы\",\"ycy;\":\"ы\",\"yen;\":\"¥\",yen:\"¥\",\"Yfr;\":\"𝔜\",\"yfr;\":\"𝔶\",\"YIcy;\":\"Ї\",\"yicy;\":\"ї\",\"Yopf;\":\"𝕐\",\"yopf;\":\"𝕪\",\"Yscr;\":\"𝒴\",\"yscr;\":\"𝓎\",\"YUcy;\":\"Ю\",\"yucy;\":\"ю\",\"Yuml;\":\"Ÿ\",\"yuml;\":\"ÿ\",yuml:\"ÿ\",\"Zacute;\":\"Ź\",\"zacute;\":\"ź\",\"Zcaron;\":\"Ž\",\"zcaron;\":\"ž\",\"Zcy;\":\"З\",\"zcy;\":\"з\",\"Zdot;\":\"Ż\",\"zdot;\":\"ż\",\"zeetrf;\":\"ℨ\",\"ZeroWidthSpace;\":\"​\",\"Zeta;\":\"Ζ\",\"zeta;\":\"ζ\",\"Zfr;\":\"ℨ\",\"zfr;\":\"𝔷\",\"ZHcy;\":\"Ж\",\"zhcy;\":\"ж\",\"zigrarr;\":\"⇝\",\"Zopf;\":\"ℤ\",\"zopf;\":\"𝕫\",\"Zscr;\":\"𝒵\",\"zscr;\":\"𝓏\",\"zwj;\":\"‍\",\"zwnj;\":\"‌\"};","var punycode = require('punycode');\nvar entities = require('./entities.json');\n\nmodule.exports = decode;\n\nfunction decode (str) {\n    if (typeof str !== 'string') {\n        throw new TypeError('Expected a String');\n    }\n\n    return str.replace(/&(#?[^;\\W]+;?)/g, function (_, match) {\n        var m;\n        if (m = /^#(\\d+);?$/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 10) ]);\n        } else if (m = /^#[Xx]([A-Fa-f0-9]+);?/.exec(match)) {\n            return punycode.ucs2.encode([ parseInt(m[1], 16) ]);\n        } else {\n            // named entity\n            var hasSemi = /;$/.test(match);\n            var withoutSemi = hasSemi ? match.replace(/;$/, '') : match;\n            var target = entities[withoutSemi] || (hasSemi && entities[match]);\n\n            if (typeof target === 'number') {\n                return punycode.ucs2.encode([ target ]);\n            } else if (typeof target === 'string') {\n                return target;\n            } else {\n                return '&' + match;\n            }\n        }\n    });\n}\n","exports.encode = require('./encode');\nexports.decode = require('./decode');\n","import unfetch from 'unfetch'\nimport { decode } from 'ent'\n\nconst RX_HTML_TAGS = /<\\/?[^>]+(>|$)/g\nconst RX_BASIC_ASCII = /[^\\x20-\\xFF]/g\nconst WIKI_ROOT = 'https://en.wikipedia.org/w/api.php?action=query'\nconst WIKI_RANDOM_PATH = [\n  'generator=random',\n  'grnnamespace=0',\n  'prop=extracts',\n  'exchars=500',\n  'format=json',\n  'origin=*',\n].join('&')\n\ntype WikipediaQuery = {\n  query: {\n    pages: {\n      [id: string]: {\n        extract: string\n      }\n    }\n  }\n}\n\n/**\n * Transform the response's chunks into a JSON and then\n * strip the HTML tags, HTML entities (decode) and non-basic-ascii\n * code (accents allowed) from the payload's extract attr.\n */\nconst parse = (payload: WikipediaQuery) => {\n  const { pages } = payload.query\n  const { extract } = pages[Object.keys(pages)[0]]\n\n  return decode(extract.replace(RX_HTML_TAGS, '').replace(RX_BASIC_ASCII, ''))\n}\n\nexport default async function request() {\n  const response = await unfetch(`${WIKI_ROOT}&${WIKI_RANDOM_PATH}`)\n  if (response.status >= 400) {\n    new Error(\n      `Request failed. Code: ${response.status}. Text: ${response.statusText}`,\n    )\n  }\n\n  const payload = await response.json()\n\n  return parse(payload)\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat,\n    freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","const MIN_PASSWORD_LENGTH = 8\n\nexport const getMaxLength = (sentences: string[]) => {\n  return sentences.reduce((memo, { length }) => {\n    return length > memo ? length : memo\n  }, Number.MIN_SAFE_INTEGER)\n}\n\nexport const getMinLength = (inputLength: number) => {\n  return Math.max(inputLength, MIN_PASSWORD_LENGTH)\n}\n\nexport const getLength = (inputLength: number, maxLength: number) => {\n  return Math.min(getMinLength(inputLength), maxLength)\n}\n","import nlp from 'compromise'\n\n/**\n * Remove non latin chars, etc. That'll cause problems with non-specific\n * keyboard layouts.\n */\nexport default () => {\n  return function transformNormalize(base: string): string {\n    // @ts-ignore The compromise normalize() signature is not correct on @types\n    return nlp(base).normalize().out()\n  }\n}\n","const DEFAULT_WORD_MAP = [0, 0]\n\n/**\n * Given a desired length break the sentence with the minimum required words.\n */\nexport default (length: number) => {\n  return function transformLength(base: string) {\n    const words = base.split(' ')\n    const breakingWord = words\n      .map<[string, number]>((word) => [word, word.length])\n      .reduce((memo, [word, wordLength]) => {\n        const lastWordMap = memo[memo.length - 1] || DEFAULT_WORD_MAP\n        return memo.concat([[word, wordLength + lastWordMap[1]]])\n      }, [])\n      .filter(([_, stack]) => stack < length).length\n\n    return words.slice(0, breakingWord + 1).join(' ')\n  }\n}\n","const MAX = 100\nconst DEFAULT_RATIO = MAX / 2\n\n/**\n * Given a probabilistic ratio match against a random number to get a true/false.\n * Default value is half the max (50); simulating a flipping coin.\n */\nconst shall = (ratio = DEFAULT_RATIO) => {\n  return Math.random() * MAX < Math.min(ratio, MAX)\n}\n\n/**\n * Expose 4 common probabilistic types. For 10%, 25%, 50%, 75% and 90%\n */\nexport const weird = () => shall(10)\nexport const low = () => shall(25)\nexport const regular = () => shall()\nexport const high = () => shall(75)\nexport const common = () => shall(90)\n","import * as shall from '../shall'\n\nconst LEET_DICT = {\n  a: 4,\n  b: 8,\n  e: 3,\n  g: 9,\n  l: 1,\n  o: 0,\n  s: 5,\n  t: 7,\n  z: 2,\n}\n\n/**\n * Randomly replace some char by the leet equivalent if any.\n */\nexport default () => {\n  return function transformLeet(base: string) {\n    return base\n      .split('')\n      .map((char) => [char, LEET_DICT[char.toLowerCase()]])\n      .map(([char, leet]) => (leet && shall.weird() ? leet : char))\n      .join('')\n  }\n}\n","import * as shall from '../shall'\n\n/**\n * Randomly transform to upper case some chars. It assumes that most\n * of the base chars are lower case.\n */\nexport default () => {\n  return function transformCase(base: string) {\n    return base\n      .split('')\n      .map((char) => (shall.low() ? char.toUpperCase() : char))\n      .join('')\n  }\n}\n","import random from 'lodash.random'\nimport * as shall from '../shall'\n\nconst ASCII_LOWER = 37\nconst ASCII_HIGHER = 126\nconst EMPTY_CHAR = ''\n\nconst addRandomChar = () => {\n  if (shall.common()) return EMPTY_CHAR\n  return String.fromCharCode(random(ASCII_LOWER, ASCII_HIGHER))\n}\n\n/**\n * Randomly add some ASCII safe chars either at the beginning, the end or both\n * sides of each word.\n */\nexport default () => {\n  return function transformRandom(base: string) {\n    return base\n      .split(' ')\n      .map((word) => `${addRandomChar()}${word}${addRandomChar()}`)\n      .join(' ')\n  }\n}\n","import random from 'lodash.random'\nimport * as shall from '../shall'\n\nconst DEFAULT_SYMBOL = '.'\nconst SYMBOLS = `@#$%{}[]()/~,;:><${DEFAULT_SYMBOL}`.split('')\nconst EMPTY_CHAR = ''\nconst RX_WHITE_SPACE = / /g\n\n/**\n * Replace white spaces either by a random symbol or an empty char (remove).\n * Note that this transformer gets rid of the white spaces. Hence has to be\n * the last one always.\n * If it's disabled always return the DEFAULT_SYMBOL\n */\nexport default (isEnabled: boolean) => {\n  return function transformSymbols(base: string) {\n    return base.replace(RX_WHITE_SPACE, () => {\n      if (!isEnabled) return DEFAULT_SYMBOL\n\n      return shall.regular() ? SYMBOLS[random(SYMBOLS.length - 1)] : EMPTY_CHAR\n    })\n  }\n}\n","import random from 'lodash.random'\nimport isNumber from 'lodash.isnumber'\nimport identity from 'lodash.identity'\nimport * as password from './password'\nimport transformNormalize from './transform/normalize'\nimport transformLength from './transform/length'\nimport transformLeet from './transform/leet'\nimport transformCase from './transform/case'\nimport transformRandom from './transform/random'\nimport transformSymbols from './transform/symbols'\n\nconst DEFAULT_SENTENCES = [''] // allows init of all methods\nconst DEFAULT_ARGS = {\n  case: false,\n  length: 24,\n  leet: false,\n  random: false,\n  symbols: false,\n}\ntype Args = number | typeof DEFAULT_ARGS\n\nconst sanitizeOptions = (args: Args = {} as Args): typeof DEFAULT_ARGS => {\n  return {\n    ...DEFAULT_ARGS,\n    ...(isNumber(args) ? { length: args } : args),\n  }\n}\n\nexport default function createGenerator(sentences = DEFAULT_SENTENCES) {\n  const maxLength = password.getMaxLength(sentences)\n\n  return function generator(args?: Args) {\n    const options = sanitizeOptions(args)\n    const length = password.getLength(options.length, maxLength)\n    const data = sentences.filter((x) => x.length >= length)\n    const base = data[random(data.length - 1)]\n\n    if (!base) return null\n\n    return [\n      transformNormalize(),\n      transformLength(length),\n      options.leet && transformLeet(),\n      options.case && transformCase(),\n      options.random && transformRandom(),\n      transformSymbols(options.symbols),\n    ]\n      .map((fn) => fn || identity)\n      .reduce((memo, fn) => fn(memo), base)\n  }\n}\n","import nlp from 'compromise'\nimport request from './request'\nimport generator from './generator'\n\nexport default async function spg() {\n  const article = await request()\n  const doc = nlp(article)\n  const sentences = doc.sentences().out('array')\n\n  return generator(sentences)\n}\n","import spg from 'semantic-password-generator'\nimport {\n  $password,\n  $renew,\n  $slider,\n  $hint,\n  $case,\n  $leet,\n  $random,\n  $symbols,\n} from './elements'\n\nconst updateHint = (password: string) => {\n  const length = password.length - 8\n\n  if (length < 18) return ($hint.innerText = 'Weak')\n  if (length < 24) return ($hint.innerText = 'Good')\n  return ($hint.innerText = 'Strong 💪')\n}\n\nexport const addGenerator = async () => {\n  let generator = await spg()\n\n  const update = () => {\n    const password = generator({\n      length: Number($slider.value),\n      case: $case.checked,\n      leet: $leet.checked,\n      random: $random.checked,\n      symbols: $symbols.checked,\n    })\n\n    updateHint(password)\n    $password.innerText = password\n  }\n\n  update()\n\n  $renew.addEventListener('click', async () => {\n    generator = await spg()\n    update()\n  })\n  ;[$case, $leet, $random, $symbols, $slider].forEach(($) => {\n    $.addEventListener('change', update)\n  })\n}\n","import { addClipboard } from './clipboard'\nimport { addGenerator } from './generator'\n\naddClipboard()\naddGenerator()\n"]}