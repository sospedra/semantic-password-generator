{"version":3,"sources":["js/elements.ts","js/clipboard.ts","../src/index.mjs","../../../node_modules/semantic-password-generator/src/request.ts","../../../node_modules/wink-porter2-stemmer/src/wink-porter2-stemmer.js","../../../node_modules/wink-nlp-utils/src/helper-return-words-filter.js","../../../node_modules/wink-nlp-utils/src/helper-return-indexer.js","../../../node_modules/wink-nlp-utils/src/helper-return-quoted-text-extractor.js","../../../node_modules/wink-nlp-utils/src/string-lower-case.js","../../../node_modules/wink-nlp-utils/src/string-upper-case.js","../../../node_modules/wink-nlp-utils/src/string-trim.js","../../../node_modules/wink-nlp-utils/src/util_regexes.js","../../../node_modules/wink-nlp-utils/src/string-remove-extra-spaces.js","../../../node_modules/wink-nlp-utils/src/string-retain-alpha-nums.js","../../../node_modules/wink-nlp-utils/src/name_cleaner_regexes.js","../../../node_modules/wink-nlp-utils/src/string-extract-persons-name.js","../../../node_modules/wink-nlp-utils/src/string-extract-run-of-capital-words.js","../../../node_modules/wink-nlp-utils/src/string-remove-punctuations.js","../../../node_modules/wink-nlp-utils/src/string-remove-spl-chars.js","../../../node_modules/wink-nlp-utils/src/string-remove-html-tags.js","../../../node_modules/wink-nlp-utils/src/string-remove-elisions.js","../../../node_modules/wink-nlp-utils/src/string-split-elisions.js","../../../node_modules/wink-nlp-utils/src/string-amplify-not-elision.js","../../../node_modules/wink-nlp-utils/src/string-marker.js","../../../node_modules/wink-nlp-utils/src/string-soc.js","../../../node_modules/wink-nlp-utils/src/string-ngram.js","../../../node_modules/wink-nlp-utils/src/string-edge-ngrams.js","../../../node_modules/wink-nlp-utils/src/string-bong.js","../../../node_modules/wink-nlp-utils/src/string-song.js","../../../node_modules/wink-nlp-utils/src/string-sentences.js","../../../node_modules/wink-helpers/src/wink-helpers.js","../../../node_modules/wink-nlp-utils/src/string-compose-corpus.js","../../../node_modules/wink-nlp-utils/src/string-tokenize0.js","../../../node_modules/wink-tokenizer/node_modules/emoji-regex/index.js","../../../node_modules/wink-tokenizer/src/eng-contractions.js","../../../node_modules/wink-tokenizer/src/wink-tokenizer.js","../../../node_modules/wink-nlp-utils/src/string-tokenize.js","../../../node_modules/wink-nlp-utils/src/phonetize_regexes.js","../../../node_modules/wink-nlp-utils/src/string-phonetize.js","../../../node_modules/wink-distance/src/soundex.js","../../../node_modules/wink-nlp-utils/src/string-soundex.js","../../../node_modules/wink-nlp-utils/src/tokens-stem.js","../../../node_modules/wink-nlp-utils/src/tokens-phonetize.js","../../../node_modules/wink-nlp-utils/src/tokens-soundex.js","../../../node_modules/wink-nlp-utils/src/dictionaries/stop_words.json","../../../node_modules/wink-nlp-utils/src/tokens-remove-words.js","../../../node_modules/wink-nlp-utils/src/tokens-bow.js","../../../node_modules/wink-nlp-utils/src/tokens-sow.js","../../../node_modules/wink-nlp-utils/src/tokens-propagate-negations.js","../../../node_modules/wink-nlp-utils/src/tokens-bigrams.js","../../../node_modules/wink-nlp-utils/src/tokens-append-bigrams.js","../../../node_modules/wink-nlp-utils/src/wink-nlp-utils.js","../../../node_modules/lodash.deburr/index.js","../../../node_modules/semantic-password-generator/src/semantic.ts","../../../node_modules/lodash.random/index.js","../../../node_modules/lodash.isnumber/index.js","../../../node_modules/lodash.identity/index.js","../../../node_modules/semantic-password-generator/src/password.ts","../../../node_modules/semantic-password-generator/src/transform/length.ts","../../../node_modules/semantic-password-generator/src/shall.ts","../../../node_modules/semantic-password-generator/src/transform/leet.ts","../../../node_modules/semantic-password-generator/src/transform/case.ts","../../../node_modules/semantic-password-generator/src/transform/random.ts","../../../node_modules/semantic-password-generator/src/transform/symbols.ts","../../../node_modules/semantic-password-generator/src/generator.ts","../../../node_modules/semantic-password-generator/src/index.ts","js/generator.ts","js/index.ts"],"names":["url","options","Promise","resolve","reject","request","XMLHttpRequest","keys","all","headers","response","ok","status","statusText","responseURL","text","responseText","json","JSON","parse","blob","Blob","clone","entries","get","n","toLowerCase","has","const","i","open","method","onload","getAllResponseHeaders","replace","m","key","value","push","onerror","withCredentials","credentials","setRequestHeader","send","body"],"mappings":"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IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,KAAA,IAAA,KACA,IAAA,KAAA,IAAA,KACA,IAAA,KAEA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IAAA,IACA,IAAA,IAAA,IAAA,IAAA,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","file":"js.a7f93530.js","sourceRoot":"../src","sourcesContent":["export const $renew = document.querySelector<HTMLButtonElement>('#js-renew')\nexport const $toast = document.querySelector<HTMLDivElement>('#js-toast')\nexport const $slider = document.querySelector<HTMLInputElement>('#js-slider')\nexport const $hint = document.querySelector<HTMLParagraphElement>('#js-hint')\nexport const $case = document.querySelector<HTMLInputElement>('#js-case')\nexport const $leet = document.querySelector<HTMLInputElement>('#js-leet')\nexport const $random = document.querySelector<HTMLInputElement>('#js-random')\nexport const $symbols = document.querySelector<HTMLInputElement>('#js-symbols')\nexport const $password = document.querySelector<HTMLInputElement>(\n  '#js-password',\n)\n","import { $password, $toast } from './elements'\n\nexport const addClipboard = async () => {\n  $password.addEventListener('click', async () => {\n    $password.select()\n\n    if (document.queryCommandSupported('copy')) {\n      document.execCommand('copy')\n\n      $toast.style.animation = 'fadein 4s'\n      $toast.addEventListener('animationend', () => {\n        $toast.style.animation = ''\n      })\n    }\n  })\n}\n","export default function(url, options) {\n\toptions = options || {};\n\treturn new Promise( (resolve, reject) => {\n\t\tconst request = new XMLHttpRequest();\n\t\tconst keys = [];\n\t\tconst all = [];\n\t\tconst headers = {};\n\n\t\tconst response = () => ({\n\t\t\tok: (request.status/100|0) == 2,\t\t// 200-299\n\t\t\tstatusText: request.statusText,\n\t\t\tstatus: request.status,\n\t\t\turl: request.responseURL,\n\t\t\ttext: () => Promise.resolve(request.responseText),\n\t\t\tjson: () => Promise.resolve(JSON.parse(request.responseText)),\n\t\t\tblob: () => Promise.resolve(new Blob([request.response])),\n\t\t\tclone: response,\n\t\t\theaders: {\n\t\t\t\tkeys: () => keys,\n\t\t\t\tentries: () => all,\n\t\t\t\tget: n => headers[n.toLowerCase()],\n\t\t\t\thas: n => n.toLowerCase() in headers\n\t\t\t}\n\t\t});\n\n\t\trequest.open(options.method || 'get', url, true);\n\n\t\trequest.onload = () => {\n\t\t\trequest.getAllResponseHeaders().replace(/^(.*?):[^\\S\\n]*([\\s\\S]*?)$/gm, (m, key, value) => {\n\t\t\t\tkeys.push(key = key.toLowerCase());\n\t\t\t\tall.push([key, value]);\n\t\t\t\theaders[key] = headers[key] ? `${headers[key]},${value}` : value;\n\t\t\t});\n\t\t\tresolve(response());\n\t\t};\n\n\t\trequest.onerror = reject;\n\n\t\trequest.withCredentials = options.credentials=='include';\n\n\t\tfor (const i in options.headers) {\n\t\t\trequest.setRequestHeader(i, options.headers[i]);\n\t\t}\n\n\t\trequest.send(options.body || null);\n\t});\n}\n","import unfetch from 'unfetch'\n\nconst WIKI_ROOT = 'https://en.wikipedia.org/w/api.php?action=query'\nconst WIKI_RANDOM_PATH = [\n  'generator=random',\n  'grnnamespace=0',\n  'prop=extracts',\n  'exchars=500',\n  'format=json',\n  'origin=*',\n].join('&')\n\ntype WikipediaQuery = {\n  query: {\n    pages: {\n      [id: string]: {\n        extract: string\n      }\n    }\n  }\n}\n\nexport default async function request() {\n  const response = await unfetch(`${WIKI_ROOT}&${WIKI_RANDOM_PATH}`)\n\n  if (response.status >= 400) {\n    new Error(\n      `Request failed. Code: ${response.status}. Text: ${response.statusText}`,\n    )\n  }\n\n  const {\n    query: { pages },\n  }: WikipediaQuery = await response.json()\n\n  return pages[Object.keys(pages)[0]].extract\n}\n","//     wink-porter2-stemmer\n//     Implementation of Porter Stemmer Algorithm V2 by Dr Martin F Porter\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-porter2-stemmer”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n// Implements the Porter Stemmer Algorithm V2 by Dr Martin F Porter.\n// Reference: https://snowballstem.org/algorithms/english/stemmer.html\n\n// ## Regex Definitions\n\n// Regex definition of `double`.\nvar rgxDouble = /(bb|dd|ff|gg|mm|nn|pp|rr|tt)$/;\n// Definition for Step Ia suffixes.\nvar rgxSFXsses = /(.+)(sses)$/;\nvar rgxSFXiedORies2 = /(.{2,})(ied|ies)$/;\nvar rgxSFXiedORies1 = /(.{1})(ied|ies)$/;\nvar rgxSFXusORss = /(.+)(us|ss)$/;\nvar rgxSFXs = /(.+)(s)$/;\n// Definition for Step Ib suffixes.\nvar rgxSFXeedlyOReed = /(.*)(eedly|eed)$/;\nvar rgxSFXedORedlyORinglyORing = /([aeiouy].*)(ed|edly|ingly|ing)$/;\nvar rgxSFXatORblORiz = /(at|bl|iz)$/;\n// Definition for Step Ic suffixes.\nvar rgxSFXyOR3 = /(.+[^aeiouy])([y3])$/;\n// Definition for Step II suffixes; note we have spot the longest suffix.\nvar rgxSFXstep2 = /(ization|ational|fulness|ousness|iveness|tional|biliti|lessli|entli|ation|alism|aliti|ousli|iviti|fulli|enci|anci|abli|izer|ator|alli|bli|ogi|li)$/;\nvar rgxSFXstep2WithReplacements = [\n  // Length 7.\n  { rgx: /ational$/, replacement: 'ate' },\n  { rgx: /ization$/, replacement: 'ize' },\n  { rgx: /fulness$/, replacement: 'ful' },\n  { rgx: /ousness$/, replacement: 'ous' },\n  { rgx: /iveness$/, replacement: 'ive' },\n  // Length 6.\n  { rgx: /tional$/, replacement: 'tion' },\n  { rgx: /biliti$/, replacement: 'ble' },\n  { rgx: /lessli$/, replacement: 'less' },\n  // Length 5.\n  { rgx: /iviti$/, replacement: 'ive' },\n  { rgx: /ousli$/, replacement: 'ous' },\n  { rgx: /ation$/, replacement: 'ate' },\n  { rgx: /entli$/, replacement: 'ent' },\n  { rgx: /(.*)(alism|aliti)$/, replacement: '$1al' },\n  { rgx: /fulli$/, replacement: 'ful' },\n  // Length 4.\n  { rgx: /alli$/, replacement: 'al' },\n  { rgx: /ator$/, replacement: 'ate' },\n  { rgx: /izer$/, replacement: 'ize' },\n  { rgx: /enci$/, replacement: 'ence' },\n  { rgx: /anci$/, replacement: 'ance' },\n  { rgx: /abli$/, replacement: 'able' },\n  // Length 3.\n  { rgx: /bli$/, replacement: 'ble' },\n  { rgx: /(.*)(l)(ogi)$/, replacement: '$1$2og' },\n  // Length 2.\n  { rgx: /(.*)([cdeghkmnrt])(li)$/, replacement: '$1$2' }\n];\n// Definition for Step III suffixes; once again spot the longest one first!\nvar rgxSFXstep3 = /(ational|tional|alize|icate|iciti|ative|ical|ness|ful)$/;\nvar rgxSFXstep3WithReplacements = [\n  { rgx: /ational$/, replacement: 'ate' },\n  { rgx: /tional$/, replacement: 'tion' },\n  { rgx: /alize$/, replacement: 'al' },\n  { rgx: /(.*)(icate|iciti|ical)$/, replacement: '$1ic' },\n  { rgx: /(ness|ful)$/, replacement: '' },\n];\n// Definition for Step IV suffixes.\nvar rgxSFXstep4 = /(ement|ance|ence|able|ible|ment|ant|ent|ism|ate|iti|ous|ive|ize|al|er|ic)$/;\nvar rgxSFXstep4Full = /(ement|ance|ence|able|ible|ment|ant|ent|ism|ate|iti|ous|ive|ize|ion|al|er|ic)$/;\nvar rgxSFXstep4ion = /(.*)(s|t)(ion)$/;\n// Exceptions Set I.\nvar exceptions1 = Object.create( null );\n// Mapped!\nexceptions1.skis = 'ski';\nexceptions1.skies = 'sky';\nexceptions1.dying = 'die';\nexceptions1.lying = 'lie';\nexceptions1.tying = 'tie';\nexceptions1.idly = 'idl';\nexceptions1.gently = 'gentl';\nexceptions1.ugly = 'ugli';\nexceptions1.early = 'earli';\nexceptions1.only = 'onli';\nexceptions1.singly = 'singl';\n// Invariants!\nexceptions1.sky = 'sky';\nexceptions1.news = 'news';\nexceptions1.atlas = 'atlas';\nexceptions1.cosmos = 'cosmos';\nexceptions1.bias = 'bias';\nexceptions1.andes = 'andes';\n\n// Exceptions Set II.\n// Note, these are to be treated as full words.\nvar rgxException2 = /^(inning|outing|canning|herring|proceed|exceed|succeed|earring)$/;\n\n// ## Private functions\n\n// ### prelude\n/**\n * Performs initial pre-processing by transforming the input string `s` as\n * per the replacements.\n *\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar prelude = function ( s ) {\n  return ( s\n            // Handle `y`'s.\n            .replace( /^y/, '3' )\n            .replace( /([aeiou])y/, '$13' )\n            // Handle apostrophe.\n            .replace( /\\’s$|\\'s$/, '' )\n            .replace( /s\\’$|s\\'$/, '' )\n            .replace( /[\\’\\']$/, '' )\n         );\n}; // prelude()\n\n// ### isShort\n/**\n * @param {String} s Input string\n * @return {Boolean} `true` if `s` is a short syllable, `false` otherwise\n * @private\n */\nvar isShort = function ( s ) {\n  // (a) a vowel followed by a non-vowel other than w, x or 3 and\n  // preceded by a non-vowel, **or** (b) a vowel at the beginning of the word\n  // followed by a non-vowel.\n  return (\n    (\n      (\n        ( /[^aeiouy][aeiouy][^aeiouywx3]$/ ).test( s ) ||\n        ( /^[aeiouy][^aeiouy]{0,1}$/ ).test( s ) // Removed this new changed??\n      )\n    )\n  );\n}; // isShort()\n\n// ### markRegions\n/**\n * @param {String} s Input string\n * @return {Object} the `R1` and `R2` regions as an object from the input string `s`.\n * @private\n */\nvar markRegions = function ( s ) {\n  // Matches of `R1` and `R2`.\n  var m1, m2;\n  // To detect regions i.e. `R1` and `R2`.\n  var rgxRegions = /[aeiouy]+([^aeiouy]{1}.+)/;\n  m1 = rgxRegions.exec( s );\n  if ( !m1 ) return ( { r1: '', r2: '' } );\n  m1 = m1[ 1 ].slice( 1 );\n  // Handle exceptions here to prevent over stemming.\n  m1 = ( ( /^(gener|commun|arsen)/ ).test( s ) ) ? s.replace( /^(gener|commun|arsen)(.*)/, '$2') : m1;\n  m2 = rgxRegions.exec( m1 );\n  if ( !m2 ) return ( { r1: m1, r2: '' } );\n  m2 = m2[ 1 ].slice( 1 );\n  return ( { r1: m1, r2: m2 } );\n}; // markRegions()\n\n// ### step1a\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step1a = function ( s ) {\n  var wordPart;\n  if ( rgxSFXsses.test( s ) ) return ( s.replace( rgxSFXsses, '$1ss' ) );\n  if ( rgxSFXiedORies2.test( s ) ) return ( s.replace( rgxSFXiedORies2, '$1i' ) );\n  if ( rgxSFXiedORies1.test( s ) ) return ( s.replace( rgxSFXiedORies1, '$1ie' ) );\n  if ( rgxSFXusORss.test( s ) ) return ( s );\n  wordPart = s.replace( rgxSFXs, '$1' );\n  if ( ( /[aeiuouy](.+)$/ ).test( wordPart ) ) return ( s.replace( rgxSFXs, '$1' ) );\n  return ( s );\n}; // step1a()\n\n// ### step1b\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step1b = function ( s ) {\n  var rgn = markRegions( s ),\n  sd;\n  // Search for the longest among the `eedly|eed` suffixes.\n  if ( rgxSFXeedlyOReed.test( s ) )\n    // Replace by ee if in R1.\n    return ( rgxSFXeedlyOReed.test( rgn.r1 ) ? s.replace( rgxSFXeedlyOReed, '$1ee' ) : s );\n  // Delete `ed|edly|ingly|ing` if the preceding word part contains a vowel.\n  if ( rgxSFXedORedlyORinglyORing.test( s ) ) {\n    sd = s.replace( rgxSFXedORedlyORinglyORing, '$1' );\n    rgn = markRegions( sd );\n    // And after deletion, return either\n    return ( rgxSFXatORblORiz.test( sd ) ) ? ( sd + 'e' ) :\n            // or\n            ( rgxDouble.test( sd ) ) ? ( sd.replace( /.$/, '' ) ) :\n              // or\n              ( ( isShort( sd ) ) && ( rgn.r1 === '' ) ) ? ( sd + 'e' ) :\n                // or\n                sd;\n  }\n  return ( s );\n}; // step1b()\n\n// ### step1c\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step1c = function ( s ) {\n  return ( s.replace( rgxSFXyOR3, '$1i') );\n}; // step1c()\n\n// ### step2\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step2 = function ( s ) {\n  var i, imax,\n      rgn = markRegions( s ),\n      us; // updated s.\n  var match = s.match( rgxSFXstep2 );\n  match = ( match === null ) ? '$$$$$' : match[ 1 ];\n  if ( rgn.r1.indexOf( match ) !== -1 ) {\n    for ( i = 0, imax = rgxSFXstep2WithReplacements.length; i < imax; i += 1 ) {\n      us = s.replace( rgxSFXstep2WithReplacements[ i ].rgx, rgxSFXstep2WithReplacements[ i ].replacement );\n      if ( s !== us ) return ( us );\n    }\n  }\n  return ( s );\n}; // step2()\n\n// ### step3\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step3 = function ( s ) {\n  var i, imax,\n      rgn = markRegions( s ),\n      us; // updated s.\n  var match = s.match( rgxSFXstep3 );\n  match = ( match === null ) ? '$$$$$' : match[ 1 ];\n\n  if ( rgn.r1.indexOf( match ) !== -1 ) {\n    for ( i = 0, imax = rgxSFXstep3WithReplacements.length; i < imax; i += 1 ) {\n      us = s.replace( rgxSFXstep3WithReplacements[ i ].rgx, rgxSFXstep3WithReplacements[ i ].replacement );\n      if ( s !== us ) return ( us );\n    }\n    if ( ( /ative/ ).test( rgn.r2 ) ) return s.replace( /ative$/, '' );\n  }\n  return ( s );\n}; // step3()\n\n// ### step4\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step4 = function ( s ) {\n  var rgn = markRegions( s );\n  var match = s.match( rgxSFXstep4Full );\n  match = ( match === null ) ? '$$$$$' : match[ 1 ];\n  if ( rgxSFXstep4Full.test( s ) &&  rgn.r2.indexOf( match ) !== -1 ) {\n    return rgxSFXstep4.test( s ) ? s.replace( rgxSFXstep4, '' ) :\n    (\n      rgxSFXstep4ion.test( s ) ?\n      s.replace( rgxSFXstep4ion, '$1$2') :\n      s\n    );\n  }\n  return ( s );\n}; // step4()\n\n// ### step5\n/**\n * @param {String} s Input string\n * @return {String} Processed string\n * @private\n */\nvar step5 = function ( s ) {\n  var preceding, rgn;\n  // Search for the `e` suffixes.\n  rgn = markRegions( s );\n  if ( ( /e$/i ).test( s ) ) {\n    preceding = s.replace( /e$/, '' );\n    return (\n              // Found: delete if in R2, or in R1 and not preceded by a short syllable\n              ( /e/ ).test( rgn.r2 ) || ( ( /e/ ).test( rgn.r1 ) && !isShort( preceding ) ) ?\n              preceding : s\n           );\n  }\n  // Search for the `l` suffixes.\n  if ( ( /l$/ ).test( s ) ) {\n    rgn = markRegions( s );\n    // Found: delete if in R2\n    return ( rgn.r2 && ( /l$/ ).test( rgn.r2 ) ? s.replace( ( /ll$/ ), 'l' ) : s );\n  }\n  // If nothing happens, must return the string!\n  return ( s );\n}; // step5()\n\n// ## Public functions\n// ### stem\n/**\n *\n * Stems an inflected `word` using Porter2 stemming algorithm.\n *\n * @param {string} word — word to be stemmed.\n * @return {string} — the stemmed word.\n *\n * @example\n * stem( 'consisting' );\n * // -> consist\n */\nvar stem = function ( word ) {\n  var str = word.toLowerCase();\n  if ( str.length < 3 ) return ( str );\n  if ( exceptions1[ str ] ) return ( exceptions1[ str ] );\n  str = prelude( str );\n  str = step1a( str );\n\n  if ( !rgxException2.test( str ) ) {\n    str = step1b( str );\n    str = step1c( str );\n    str = step2( str );\n    str = step3( str );\n    str = step4( str );\n    str = step5( str );\n  }\n\n  str = str.replace( /3/g , 'y' );\n  return ( str );\n}; // stem()\n\n// Export stem function.\nmodule.exports = stem;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### returnWordsFilter\n\n/**\n *\n * Returns an object containing the following functions: (a) `set()`, which returns\n * a set of mapped words given in the input array `words`. (b) `exclude()` that\n * is suitable for array filtering operations.\n *\n * If the second argument `mappers` is provided as an array of maping functions\n * then these are applied on the input array before converting into a set. A\n * mapper function must accept a string as argument and return a string as the result.\n * Examples of mapper functions are typically **string** functionss of **`wink-nlp-utils`**\n * such as `string.lowerCase()`, `string.stem()` and\n * `string.soundex()`.\n *\n * @alias helper#returnWordsFilter\n * @param {string[]} words that can be filtered using the returned wordsFilter.\n * @param {function[]} [mappers=undefined] optionally used to map each word before creating\n * the wordsFilter.\n * @return {wordsFilter} object containg `set()` and `exclude()` functions for `words`.\n * @example\n * var stopWords = [ 'This', 'That', 'Are', 'Is', 'Was', 'Will', 'a' ];\n * var myFilter = returnWordsFilter( stopWords, [ string.lowerCase ] );\n * [ 'this', 'is', 'a', 'cat' ].filter( myFilter.exclude );\n * // -> [ 'cat' ]\n */\nvar returnWordsFilter = function ( words, mappers ) {\n  var mappedWords = words;\n  var givenMappers = mappers || [];\n  givenMappers.forEach( function ( m ) {\n    mappedWords = mappedWords.map( m );\n  } );\n\n  mappedWords = new Set( mappedWords );\n\n  var exclude = function ( t ) {\n    return ( !( mappedWords.has( t ) ) );\n  }; // exclude()\n\n  var set = function () {\n    return mappedWords;\n  }; // set()\n\n  return {\n    set: set,\n    exclude: exclude\n  };\n}; // returnWordsFilter()\n\nmodule.exports = returnWordsFilter;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### returnIndexer\n\n/**\n *\n * Returns an Indexer object that contains two functions. The first function `build()`\n * incrementally builds an index for each `element` using `itsIndex` — both passed as\n * parameters to it. The second function — `result()` allows accessing the index anytime.\n *\n * It is typically used with [string.soc](#stringsoc), [string.bong](#stringbong),\n * [string.song](#stringsong), and [tokens.sow](#tokenssow).\n *\n * @alias helper#returnIndexer\n * @return {indexer} used to build and access the index.\n * @example\n * var indexer = returnIndexer();\n * // -> { build: [function], result: [function] }\n */\nvar returnIndexer = function () {\n  var theIndex = Object.create( null );\n  var methods = Object.create( null );\n\n  // Builds index by adding the `element` and `itsIndex`. The `itsIndex` should\n  // be a valid JS array index; no validation checks are performed while building\n  // index.\n  var build = function ( element, itsIndex ) {\n    theIndex[ element ] = theIndex[ element ] || [];\n    theIndex[ element ].push( itsIndex );\n    return true;\n  }; // build()\n\n  // Returns the index built so far.\n  var result = function () {\n    return theIndex;\n  }; // result()\n\n  methods.build = build;\n  methods.result = result;\n\n  return methods;\n}; // index()\n\nmodule.exports = returnIndexer;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### returnQuotedTextExtractor\n\n/**\n *\n * Returns a function that extracts all occurrences of every quoted text\n * between the `lq` and the `rq` characters from its argument. This argument\n * must be of type string.\n *\n * @alias helper#returnQuotedTextExtractor\n * @param {string} [lq='\"'] the left quote character.\n * @param {string} [rq='\"'] the right quote character.\n * @return {function} that will accept an input string argument and return an\n * array of all substrings that are quoted between `lq` and `rq`.\n * @example\n * var extractQuotedText = returnQuotedTextExtractor();\n * extractQuotedText( 'Raise 2 issues - \"fix a bug\" & \"run tests\"' );\n * // -> [ 'fix a bug', 'run tests' ]\n */\nvar returnQuotedTextExtractor = function ( lq, rq ) {\n  var // Index variable for *for-loop*\n      i,\n      // Set defaults for left quote, if required.\n      lq1 = ( ( lq && ( typeof lq === 'string' ) ) ? lq : '\"' ),\n      // Extracts its length\n      lqLen = lq1.length,\n      // The regular expression is created here.\n      regex = null,\n      // The string containing the regular expression builds here.\n      rgxStr = '',\n      // Set defaults for right quote, if required.\n      rq1 = ( ( rq && ( typeof rq === 'string' ) ) ? rq : lq1 ),\n      // Extract its length.\n      rqLen = rq1.length;\n\n  // Build `rgxStr`\n  for ( i = 0; i < lqLen; i += 1 ) rgxStr += '\\\\' + lq1.charAt( i );\n  rgxStr += '.*?';\n  for ( i = 0; i < rqLen; i += 1 ) rgxStr += '\\\\' + rq1.charAt( i );\n  // Create regular expression.\n  regex = new RegExp( rgxStr, 'g' );\n  // Return the extractor function.\n  return ( function ( s ) {\n    if ( !s || ( typeof s !== 'string' ) ) return null;\n    var // Extracted elements are captured here.\n        elements = [],\n        // Extract matches with quotes\n        matches = s.match( regex );\n    if ( !matches || ( matches.length === 0 ) ) return null;\n    // Collect elements after removing the quotes.\n    for ( var k = 0, kmax = matches.length; k < kmax; k += 1 ) {\n      elements.push( matches[ k ].substr( lqLen, matches[ k ].length - ( rqLen + lqLen ) ) );\n    }\n    return ( elements );\n  } );\n}; // returnQuotedTextExtractor()\n\nmodule.exports = returnQuotedTextExtractor;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### lowerCase\n/**\n *\n * Converts the input string to lower case.\n *\n * @alias string#lowerCase\n * @param {string} str the input string.\n * @return {string} input string in lower case.\n * @example\n * lowerCase( 'Lower Case' );\n * // -> 'lower case'\n */\nvar lowerCase = function ( str ) {\n  return ( str.toLowerCase() );\n}; // lowerCase()\n\nmodule.exports = lowerCase;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### upperCase\n/**\n *\n * Converts the input string to upper case.\n *\n * @alias string#upperCase\n * @param {string} str the input string.\n * @return {string} input string in upper case.\n * @example\n * upperCase( 'Upper Case' );\n * // -> 'UPPER CASE'\n */\nvar upperCase = function ( str ) {\n  return ( str.toUpperCase() );\n}; // upperCase()\n\nmodule.exports = upperCase;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### trim\n/**\n *\n * Trims leading and trailing whitespaces from the input string.\n *\n * @alias string#trim\n * @param {string} str the input string.\n * @return {string} input string with leading & trailing whitespaces removed.\n * @example\n * trim( '  Padded   ' );\n * // -> 'Padded'\n */\nvar trim = function ( str ) {\n  return ( str.trim() );\n}; // trim()\n\nmodule.exports = trim;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = Object.create( null );\n\n// Matches standard english punctuations in a text.\nrgx.punctuations = /[\\’\\'\\‘\\’\\`\\“\\”\\\"\\[\\]\\(\\)\\{\\}\\…\\,\\.\\!\\;\\?\\/\\-\\:]/ig;\n// End Of Sentence Punctuations - useful for splitting text into sentences.\nrgx.eosPunctuations = /([\\.\\?\\!])\\s*(?=[a-z]|\\s+\\d)/gi;\n\n// Matches special characters: `* + % # @ ^ = ~ | \\` in a text.\nrgx.splChars = /[\\*\\+\\%\\#\\@\\^\\=\\~\\|\\\\]/ig;\n\n// Matches common english elisions including n't.\n// These are special ones as 's otherwise may be apostrophe!\nrgx.elisionsSpl = /(\\b)(it|let|that|who|what|here|there|when|where|why|how)(\\'s)\\b/gi;\n// Single (1) character elisions.\nrgx.elisions1 = /([a-z])(\\'d|\\'m)\\b/gi;\n// Two (2) character elisions.\nrgx.elisions2 = /([a-z])(\\'ll|\\'ve|\\'re|n\\'t)\\b/gi;\n// Sperate not elision 'nt.\nrgx.notElision = /([a-z])(n\\'t)\\b/gi;\n// Specially handle cannot\nrgx.cannot = /\\b(can)(not)\\b/gi;\n\n// Matches space, tab, or new line characters in text.\nrgx.spaces = /\\s+/ig;\n// Matches anything other than space, tab, or new line characters.\nrgx.notSpace = /\\S/g;\n// Matches alpha and space characters in a text.\nrgx.alphaSpace = /[a-z\\s]/ig;\n// Matches alphanumerals and space characters in a text.\nrgx.alphaNumericSpace = /[a-z0-9\\s]/ig;\n// Matches non alpha characters in a text.\nrgx.notAlpha = /[^a-z]/ig;\n// Matches non alphanumerals in a text.\nrgx.notAlphaNumeric = /[^a-z0-9]/ig;\n// Matches one or more non-words characters.\nrgx.nonWords = /\\W+/ig;\n// Matches complete negation token\nrgx.negations = /^(never|none|not|no)$/i;\n\n// Matches run of capital words in a text.\nrgx.rocWords = /(?:\\b[A-Z][A-Za-z]*\\s*){2,}/g;\n\n// Matches integer, decimal, JS floating point numbers in a text.\nrgx.number = /[0-9]*\\.[0-9]+e[\\+\\-]{1}[0-9]+|[0-9]*\\.[0-9]+|[0-9]+/ig;\n\n// Matches time in 12 hour am/pm format in a text.\nrgx.timeIn12HrAMPM = /(?:[0-9]|0[0-9]|1[0-2])((:?:[0-5][0-9])){0,1}\\s?(?:[aApP][mM])/ig;\n\n// Matches HTML tags - in fact any thing enclosed in angular brackets including\n// the brackets.\nrgx.htmlTags = /(?:<[^>]*>)/g;\n// Matches the HTML Esc Sequences\n// Esc Seq of type `&lt;` or `&nbsp;`\nrgx.htmlEscSeq1 = /(?:&[a-z]{2,6};)/gi;\n// Esc Seq of type `&#32;`\nrgx.htmlEscSeq2 = /(?:&#[0-9]{2,4};)/gi;\n\n// Tests if a given string is possibly in the Indian mobile telephone number format.\nrgx.mobileIndian = /^(0|\\+91)?[789]\\d{9}$/;\n// Tests if a given string is in the valid email format.\nrgx.email = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n\n// Extracts any number and text from a <number><text> format text.\n// Useful in extracting value and UoM from strings like `2.7 Kgs`.\nrgx.separateNumAndText = /([0-9]*\\.[0-9]+e[\\+\\-]{1}[0-9]+|[0-9]*\\.[0-9]+|[0-9]+)[\\s]*(.*)/i;\n\n// Crude date parser for a string containg date in a valid format.\n// > TODO: Need to improve this one!\nrgx.date = /(\\d+)/ig;\n\n// Following 3 regexes are specially coded for `tokenize()` in prepare_text.\n// Matches punctuations that are not a part of a number.\nrgx.nonNumPunctuations = /[\\.\\,\\-](?=\\D)/gi;\nrgx.otherPunctuations = /[\\’\\'\\‘\\’\\`\\“\\”\\\"\\[\\]\\(\\)\\{\\}\\…\\!\\;\\?\\/\\:]/ig;\n// > TODO: Add more currency symbols here.\nrgx.currency = /[\\$\\£\\¥\\€]/ig;\n\n//\nmodule.exports = rgx;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### removeExtraSpaces\n/**\n *\n * Removes leading, trailing and any extra in-between whitespaces from the input\n * string.\n *\n * @alias string#removeExtraSpaces\n * @param {string} str the input string.\n * @return {string} input string after removal of leading, trailing and extra\n * whitespaces.\n * @example\n * removeExtraSpaces( '   Padded   Text    ' );\n * // -> 'Padded Text'\n */\nvar removeExtraSpaces = function ( str ) {\n  return ( str\n            .trim()\n            .replace( rgx.spaces, ' ')\n         );\n}; // removeExtraSpaces()\n\nmodule.exports = removeExtraSpaces;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### retainAlphaNums\n/**\n *\n * Retains only apha, numerals, and removes all other characters from\n * the input string, including leading, trailing and extra in-between\n * whitespaces.\n *\n * @alias string#retainAlphaNums\n * @param {string} str the input string.\n * @return {string} input string after removal of non-alphanumeric characters,\n * leading, trailing and extra whitespaces.\n * @example\n * retainAlphaNums( ' This, text here, has  (other) chars_! ' );\n * // -> 'This text here has other chars'\n */\nvar retainAlphaNums = function ( str ) {\n  return ( str\n            .replace( rgx.notAlphaNumeric, ' ')\n            .replace( rgx.spaces, ' ')\n            .trim()\n          );\n}; // retainAlphaNums()\n\nmodule.exports = retainAlphaNums;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar degrees = [\n  /\\bm\\.?\\s*a\\b/i,\n  /\\bb\\.?\\s*a\\b/i,\n  /\\bb\\.?\\s*tech\\b/i,\n  /\\bm\\.?\\s*tech\\b/i,\n  /\\bb\\.?\\s*des\\b/i,\n  /\\bm\\.?\\s*des\\b/i,\n  /\\bm\\.?\\s*b\\.?\\s*a\\b/i,\n  /\\bm\\.?\\s*c\\.?\\s*a\\b/i,\n  /\\bb\\.?\\s*c\\.?\\s*a\\b/i,\n  /\\bl\\.?\\s*l\\.?\\s*b\\b/i,\n  /\\bl\\.?\\s*l\\.?\\s*m\\b/i,\n  /\\bm\\.?\\s*b\\.?\\s*b\\.?\\s*s\\b/i,\n  /\\bm\\.?\\s*d\\b/i,\n  /\\bd\\.?\\s*m\\b/i,\n  /\\bm\\.?\\s*s\\b/i,\n  /\\bd\\.?\\s*n\\.?\\s*b\\b/i,\n  /\\bd\\.?\\s*g\\.?\\s*o\\b/i,\n  /\\bd\\.?\\s*l\\.?\\s*o\\b/i,\n  /\\bb\\.?\\s*d\\.?\\s*s\\b/i,\n  /\\bb\\.?\\s*h\\.?\\s*m\\.?\\s*s\\b/i,\n  /\\bb\\.?\\s*a\\.?\\s*m\\.?\\s*s\\b/i,\n  /\\bf\\.?\\s*i\\.?\\s*c\\.?\\s*s\\b/i,\n  /\\bm\\.?\\s*n\\.?\\s*a\\.?\\s*m\\.?\\s*s\\b/i,\n  /\\bb\\.?\\s*e\\.?\\s*m\\.?\\s*s\\b/i,\n  /\\bd\\.?\\s*c\\.?\\s*h\\b/i,\n  /\\bm\\.?\\s*c\\.?\\s*h\\b/i,\n  /\\bf\\.?\\s*r\\.?\\s*c\\.?\\s*s\\b/i,\n  /\\bm\\.?\\s*r\\.?\\s*c\\.?\\s*p\\b/i,\n  /\\bf\\.?\\s*i\\.?\\s*a\\.?\\s*c\\.?\\s*m\\b/i,\n  /\\bf\\.?\\s*i\\.?\\s*m\\.?\\s*s\\.?\\s*a\\b/i,\n  /\\bp\\.?\\s*h\\.?\\s*d\\b/i,\n ];\n\nvar titleNames = [ 'mr', 'mrs', 'miss', 'ms', 'master', 'er', 'dr', 'shri', 'shrimati', 'sir' ];\n\nvar titles = new RegExp( '^(?:' + titleNames.join( '|' ) + ')$', 'i' );\n\nmodule.exports = {\n  degrees: degrees,\n  titles: titles\n};\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\nvar ncrgx = require( './name_cleaner_regexes.js' );\n\n// ## string\n\n// ### extractPersonsName\n/**\n *\n * Attempts to extract person's name from input string.\n * It assmues the following name format:<br/>\n * `[<salutations>] <name part as FN [MN] [LN]> [<degrees>]`<br/>\n * Entities in square brackets are optional.\n *\n * @alias string#extractPersonsName\n * @param {string} str the input string.\n * @return {string} extracted name.\n * @example\n * extractPersonsName( 'Dr. Sarah Connor M. Tech., PhD. - AI' );\n * // -> 'Sarah Connor'\n */\nvar extractPersonsName = function ( str ) {\n  // Remove Degrees by making the list of indexes of each degree and subsequently\n  // finding the minimum and slicing from there!\n  var indexes = ncrgx.degrees.map( function ( r ) {\n    var m = r.exec( str );\n    return ( m ) ? m.index : 999999;\n  } );\n  var sp = Math.min.apply( null, indexes );\n\n  // Generate an Array of Every Elelemnt of Name (e.g. title, first name,\n  // sir name, honours, etc)\n  var aeen = str.slice( 0, sp ).replace( rgx.notAlpha, ' ').replace( rgx.spaces, ' ').trim().split(' ');\n  // Remove titles from the beginning.\n  while ( aeen.length && ncrgx.titles.test( aeen[0] ) ) aeen.shift();\n  return aeen.join(' ');\n}; // extractPersonsName()\n\nmodule.exports = extractPersonsName;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\nvar trim = require( './string-trim.js' );\n// ## string\n\n// ### extractRunOfCapitalWords\n/**\n *\n * Extracts the array of text appearing as Title Case or in ALL CAPS from the\n * input string.\n *\n * @alias string#extractRunOfCapitalWords\n * @param {string} str the input string.\n * @return {string[]} of text appearing in Title Case or in ALL CAPS; if no such\n * text is found then `null` is returned.\n * @example\n * extractRunOfCapitalWords( 'In The Terminator, Sarah Connor is in Los Angeles' );\n * // -> [ 'In The Terminator', 'Sarah Connor', 'Los Angeles' ]\n */\nvar extractRunOfCapitalWords = function ( str ) {\n  var m = str.match( rgx.rocWords );\n  return ( ( m ) ? m.map( trim ) : m );\n}; // extractRunOfCapitalWords()\n\nmodule.exports = extractRunOfCapitalWords;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### removePunctuations\n/**\n *\n * Removes each punctuation mark by replacing it with a whitespace. It looks for\n * the following punctuations — `.,;!?:\"!'... - () [] {}`.\n *\n * Extra spaces, if required, may be removed using [string.removeExtraSpaces](#stringremoveextraspaces)\n * function.\n *\n * @alias string#removePunctuations\n * @param {string} str the input string.\n * @return {string} input string after removal of punctuations.\n * @example\n * removePunctuations( 'Punctuations like \"\\'\\',;!?:\"!... are removed' );\n * // -> 'Punctuations like               are removed'\n */\nvar removePunctuations = function ( str ) {\n  return str.replace( rgx.punctuations, ' ' );\n}; // removePunctuations()\n\nmodule.exports = removePunctuations;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### removeSplChars\n/**\n *\n * Removes each special character by replacing it with a whitespace. It looks for\n * the following special characters — `~@#%^*+=`.\n *\n * Extra spaces, if required, may be removed using [string.removeExtraSpaces](#stringremoveextraspaces)\n * function.\n *\n * @alias string#removeSplChars\n * @param {string} str the input string.\n * @return {string} input string after removal of special characters.\n * @example\n * removeSplChars( '4 + 4*2 = 12' );\n * // -> '4   4 2   12'\n */\nvar removeSplChars = function ( str ) {\n  return str.replace( rgx.splChars, ' ' );\n}; // removeSplChars()\n\nmodule.exports = removeSplChars;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### removeHTMLTags\n/**\n *\n * Removes each HTML tag by replacing it with a whitespace.\n *\n * Extra spaces, if required, may be removed using [string.removeExtraSpaces](#stringremoveextraspaces)\n * function.\n *\n * @alias string#removeHTMLTags\n * @param {string} str the input string.\n * @return {string} input string after removal of HTML tags.\n * @example\n * removeHTMLTags( '<p>Vive la France&nbsp;&#160;!</p>' );\n * // -> ' Vive la France  ! '\n */\nvar removeHTMLTags = function ( str ) {\n  return ( str\n            .replace( rgx.htmlTags, ' ' )\n            .replace( rgx.htmlEscSeq1, ' ' )\n            .replace( rgx.htmlEscSeq2, ' ' )\n         );\n}; // removeHTMLTags()\n\nmodule.exports = removeHTMLTags;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### removeElisions\n/**\n *\n * Removes basic elisions found in the input string. Typical example of elisions\n * are `it's, let's, where's, I'd, I'm, I'll, I've, and Isn't` etc. Note it retains\n * apostrophe used to indicate possession.\n *\n * @alias string#removeElisions\n * @param {string} str the input string.\n * @return {string} input string after removal of elisions.\n * @example\n * removeElisions( \"someone's wallet, isn't it?\" );\n * // -> \"someone's wallet, is it?\"\n */\nvar removeElisions = function ( str ) {\n  return ( str\n            .replace( rgx.elisionsSpl, '$2' )\n            .replace( rgx.elisions1, '$1' )\n            .replace( rgx.elisions2, '$1' )\n         );\n}; // removeElisions()\n\nmodule.exports = removeElisions;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### splitElisions\n/**\n *\n * Splits basic elisions found in the input string. Typical example of elisions\n * are `it's, let's, where's, I'd, I'm, I'll, I've, and Isn't` etc. Note it does\n * not touch apostrophe used to indicate possession.\n *\n * @alias string#splitElisions\n * @param {string} str the input string.\n * @return {string} input string after splitting of elisions.\n * @example\n * splitElisions( \"someone's wallet, isn't it?\" );\n * // -> \"someone's wallet, is n't it?\"\n */\nvar splitElisions = function ( str ) {\n  return ( str\n            .replace( rgx.elisionsSpl, '$2 $3' )\n            .replace( rgx.elisions1, '$1 $2' )\n            .replace( rgx.elisions2, '$1 $2' )\n         );\n}; // splitElisions()\n\nmodule.exports = splitElisions;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### amplifyNotElision\n/**\n *\n * Amplifies the not elision by converting it into not; for example `isn't`\n * becomes `is not`.\n *\n * @alias string#amplifyNotElision\n * @param {string} str the input string.\n * @return {string} input string after not elision amplification.\n * @example\n * amplifyNotElision( \"someone's wallet, isn't it?\" );\n * // -> \"someone's wallet, is not it?\"\n */\nvar amplifyNotElision = function ( str ) {\n  return str.replace( rgx.notElision, '$1 not' );\n}; // amplifyNotElision()\n\nmodule.exports = amplifyNotElision;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### marker\n/**\n *\n * Generates `marker` of the input string; it is defined as 1-gram, sorted\n * and joined back as a string again. Marker is a quick and aggressive way\n * to detect similarity between short strings. Its aggression may lead to more\n * false positives such as `Meter` and `Metre` or `no melon` and `no lemon`.\n *\n * @alias string#marker\n * @param {string} str the input string.\n * @return {string} the marker.\n * @example\n * marker( 'the quick brown fox jumps over the lazy dog' );\n * // -> ' abcdefghijklmnopqrstuvwxyz'\n */\nvar marker = function ( str ) {\n  var uniqChars = Object.create( null );\n  for ( var i = 0, imax = str.length; i < imax; i += 1 ) {\n    uniqChars[ str[ i ] ] = true;\n  }\n  return ( Object.keys( uniqChars ).sort().join('') );\n}; // marker()\n\nmodule.exports = marker;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### setOfChars\n/**\n *\n * Creates a set of chars from the input string `s`. This is useful\n * in even more aggressive string matching using Jaccard or Tversky compared to\n * `marker()`. It also has an alias **`soc()`**.\n *\n * @alias string#setOfChars\n * @param {string} str the input string.\n * @param {function} [ifn=undefined] a function to build index; it receives the first\n * character of `str` and the `idx` as input arguments. The `build()` function of\n * [helper.returnIndexer](#helperreturnindexer) may be used as `ifn`. If `undefined`\n * then index is not built.\n * @param {number} [idx=undefined] the index; passed as the second argument to the `ifn`\n * function.\n * @return {string} the soc.\n * @example\n * setOfChars( 'the quick brown fox jumps over the lazy dog' );\n * // -> ' abcdefghijklmnopqrstuvwxyz'\n */\nvar setOfChars = function ( str, ifn, idx ) {\n  var cset = new Set( str );\n  if ( typeof ifn === 'function' ) {\n      ifn( str[ 0 ], idx );\n  }\n  return ( cset );\n}; // soc()\n\nmodule.exports = setOfChars;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### ngram\n/**\n *\n * Generates an array of ngrams of a specified size from the input string. The\n * default size is 2, which means it will generate bigrams by default.\n *\n * @alias string#ngram\n * @param {string} str the input string.\n * @param {number} [size=2] ngram's size.\n * @return {string[]} ngrams of `size` from `str`.\n * @example\n * ngram( 'FRANCE' );\n * // -> [ 'FR', 'RA', 'AN', 'NC', 'CE' ]\n * ngram( 'FRENCH' );\n * // -> [ 'FR', 'RE', 'EN', 'NC', 'CH' ]\n * ngram( 'FRANCE', 3 );\n * // -> [ 'FRA', 'RAN', 'ANC', 'NCE' ]\n */\nvar ngram = function ( str, size ) {\n  var ng = ( size || 2 ),\n      ngramz = [],\n      tg;\n  for ( var i = 0, imax = str.length; i < imax; i += 1 ) {\n    tg = str.slice( i, i + ng );\n    if ( tg.length === ng ) ngramz.push( tg );\n  }\n  return ( ngramz );\n}; // ngram()\n\nmodule.exports = ngram;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### edgeNGrams\n/**\n *\n * Generates the edge ngrams from the input string.\n *\n * @alias string#edgeNGrams\n * @param {string} str the input string.\n * @param {number} [min=2] size of ngram generated.\n * @param {number} [max=8] size of ngram is generated.\n * @param {number} [delta=2] edge ngrams are generated in increments of this value.\n * @param {function} [ifn=undefined] a function to build index; it is called for\n * every edge ngram of `str`; and it receives the edge ngram and the `idx`\n * as input arguments. The `build()` function of [helper.returnIndexer](#helperreturnindexer)\n * may be used as `ifn`. If `undefined` then index is not built.\n * @param {number} [idx=undefined] the index; passed as the second argument to the `ifn`\n * function.\n * @return {string[]} of edge ngrams.\n * @example\n * edgeNGrams( 'decisively' );\n * // -> [ 'de', 'deci', 'decisi', 'decisive' ]\n * edgeNGrams( 'decisively', 8, 10, 1 );\n * // -> [ 'decisive', 'decisivel', 'decisively' ]\n */\nvar edgeNGrams = function ( str, min, max, delta, ifn, idx ) {\n  var dlta = ( delta || 2 ),\n      eg,\n      egs = [],\n      imax = Math.min( ( max || 8 ), str.length ) + 1,\n      start = ( min || 2 );\n\n  // Generate edge ngrams\n  for ( var i = start; i < imax; i += dlta ) {\n    eg = str.slice( 0, i );\n    egs.push( eg );\n    if ( typeof ifn === 'function' ) {\n        ifn( eg, idx );\n    }\n  }\n  return ( egs );\n}; // edgeNGrams()\n\nmodule.exports = edgeNGrams;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### bagOfNGrams\n/**\n *\n * Generates the bag of ngrams of `size` from the input string. The\n * default size is 2, which means it will generate bag of bigrams by default. It\n * also has an alias **`bong()`**.\n *\n * @alias string#bagOfNGrams\n * @param {string} str the input string.\n * @param {number} [size=2] ngram size.\n * @param {function} [ifn=undefined] a function to build index; it is called for\n * every **unique occurrence of ngram** of `str`; and it receives the ngram and the `idx`\n * as input arguments. The `build()` function of [helper.returnIndexer](#helperreturnindexer)\n * may be used as `ifn`. If `undefined` then index is not built.\n * @param {number} [idx=undefined] the index; passed as the second argument to the `ifn`\n * function.\n * @return {object} bag of ngrams of `size` from `str`.\n * @example\n * bagOfNGrams( 'mama' );\n * // -> { ma: 2, am: 1 }\n * bong( 'mamma' );\n * // -> { ma: 2, am: 1, mm: 1 }\n */\nvar bagOfNGrams = function ( str, size, ifn, idx ) {\n  var ng = ( size || 2 ),\n      ngBOW = Object.create( null ),\n      tg;\n  for ( var i = 0, imax = str.length; i < imax; i += 1 ) {\n    tg = str.slice( i, i + ng );\n    if ( tg.length === ng ) {\n      // Call `ifn` iff its defined and `tg` is appearing for the first time;\n      // this avoids multiple calls to `ifn`. Strategy applies to `song()`,\n      // and `bow()`.\n      if ( ( typeof ifn === 'function' ) && !ngBOW[ tg ] ) {\n          ifn( tg, idx );\n      }\n      // Now define, if required and then update counts.\n      ngBOW[ tg ] = 1 + ( ngBOW[ tg ] || 0 );\n    }\n  }\n  return ( ngBOW );\n}; // bong()\n\nmodule.exports = bagOfNGrams;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### setOfNGrams\n/**\n *\n * Generates the set of ngrams of `size` from the input string. The\n * default size is 2, which means it will generate set of bigrams by default.\n * It also has an alias **`song()`**.\n *\n * @alias string#setOfNGrams\n * @param {string} str the input string.\n * @param {number} [size=2] ngram size.\n * @param {function} [ifn=undefined] a function to build index; it is called for\n * every **unique occurrence of ngram** of `str`; and it receives the ngram and the `idx`\n * as input arguments. The `build()` function of [helper.returnIndexer](#helperreturnindexer)\n * may be used as `ifn`. If `undefined` then index is not built.\n * @param {number} [idx=undefined] the index; passed as the second argument to the `ifn`\n * function.\n * @return {set} of ngrams of `size` of `str`.\n * @example\n * setOfNGrams( 'mama' );\n * // -> Set { 'ma', 'am' }\n * song( 'mamma' );\n * // -> Set { 'ma', 'am', 'mm' }\n */\nvar setOfNGrams = function ( str, size, ifn, idx ) {\n  var ng = ( size || 2 ),\n      ngSet = new Set(),\n      tg;\n  for ( var i = 0, imax = str.length; i < imax; i += 1 ) {\n    tg = str.slice( i, i + ng );\n    if ( tg.length === ng ) {\n      if ( ( typeof ifn === 'function' ) && !ngSet.has( tg ) ) {\n          ifn( tg, idx );\n      }\n      ngSet.add( tg );\n    }\n  }\n  return ( ngSet );\n}; // song()\n\nmodule.exports = setOfNGrams;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n// Abbreviations with `.` but are never are EOS.\nconst abbrvNoEOS = Object.create( null );\nabbrvNoEOS[ 'mr.' ] = true;\nabbrvNoEOS[ 'mrs.' ] = true;\nabbrvNoEOS[ 'ms.' ] = true;\nabbrvNoEOS[ 'er.' ] = true;\nabbrvNoEOS[ 'dr.' ] = true;\nabbrvNoEOS[ 'miss.' ] = true;\nabbrvNoEOS[ 'shri.' ] = true;\nabbrvNoEOS[ 'smt.' ] = true;\nabbrvNoEOS[ 'i.e.' ] = true;\nabbrvNoEOS[ 'ie.' ] = true;\nabbrvNoEOS[ 'e.g.' ] = true;\nabbrvNoEOS[ 'eg.' ] = true;\nabbrvNoEOS[ 'viz.' ] = true;\nabbrvNoEOS[ 'pvt.' ] = true;\n// et al.\nabbrvNoEOS[ 'et.' ] = true;\nabbrvNoEOS[ 'al.' ] = true;\n// Mount Kailash!\nabbrvNoEOS[ 'mt.' ] = true;\n// Pages!\nabbrvNoEOS[ 'pp.' ] = true;\n\nconst abbrvMayBeEOS = Object.create( null );\nabbrvMayBeEOS[ 'inc.' ] = true;\nabbrvMayBeEOS[ 'ltd.' ] = true;\nabbrvMayBeEOS[ 'al.' ] = true;\n// Regex to test potential End-Of-Sentence.\nconst rgxPotentialEOS = /\\.$|\\!$|\\?$/;\n// Regex to test special cases of \"I\" at eos.\nconst rgxSplI = /i\\?$|i\\!$/;\n// Regex to test first char as alpha only\nconst rgxAlphaAt0 = /^[^a-z]/i;\n\n// ## string\n\n// ### sentences\n/**\n *\n * Detects the sentence boundaries in the input `paragraph` and splits it into\n * an array of sentence(s).\n *\n * @alias string#sentences\n * @param {string} paragraph the input string.\n * @return {string[]} of sentences.\n * @example\n * sentences( 'AI Inc. is focussing on AI. I work for AI Inc. My mail is r2d2@yahoo.com' );\n * // -> [ 'AI Inc. is focussing on AI.',\n * //      'I work for AI Inc.',\n * //      'My mail is r2d2@yahoo.com' ]\n *\n * sentences( 'U.S.A is my birth place. I was born on 06.12.1924. I climbed Mt. Everest.' );\n * // -> [ 'U.S.A is my birth place.',\n * //      'I was born on 06.12.1924.',\n * //      'I climbed Mt. Everest.' ]\n */\nvar punkt = function ( paragraph ) {\n  // The basic idea is to split the paragraph on `spaces` and thereafter\n  // examine each word ending with an EOS punctuation for a possible EOS.\n\n  // Split on **space** to obtain all the `tokens` in the `para`.\n  const paraTokens = paragraph.split( ' ' );\n  var sentenceTokens = [];\n  var sentences = [];\n\n  for ( let k = 0; k < paraTokens.length; k += 1 ) {\n    // A para token.\n    const pt = paraTokens[ k ];\n    // A lower cased para token.\n    const lcpt = pt.toLowerCase();\n    if ( ( rgxPotentialEOS.test( pt ) ) && !abbrvNoEOS[ lcpt ] && ( pt.length !== 2 || rgxAlphaAt0.test( pt ) || rgxSplI.test( lcpt ) ) ) {\n      // Next para token that is non-blank.\n      let nextpt;\n      // Append this token to the current sentence tokens.\n      sentenceTokens.push( pt );\n      // If the current token is one of the abbreviations that may also mean EOS.\n      if ( abbrvMayBeEOS[ lcpt ] ) {\n        for ( let j = k + 1; j < paraTokens.length && !nextpt; j += 1 ) {\n          nextpt = paraTokens[ j ];\n        }\n      }\n      // If no next para token or if present then starts from a Cap Letter then\n      // only complete sentence and start a new one!\n      if ( nextpt === undefined || ( /^[A-Z]/ ).test( nextpt ) ) {\n        sentences.push( sentenceTokens.join( ' ' ) );\n        sentenceTokens = [];\n      }\n    } else sentenceTokens.push( pt );\n  }\n\n  if ( sentenceTokens.length > 0 ) sentences.push( sentenceTokens.join( ' ' ) );\n\n  return sentences;\n}; // punkt()\n\nmodule.exports = punkt;\n","//     wink-helpers\n//     Functions for cross validation, shuffle, cartesian product and more\n//\n//     Copyright (C) 2017-18  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-helpers”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar helpers = Object.create( null );\n\n// ### Private Functions\n\n// #### Product Reducer (Callback)\n\n// Callback function used by `reduce` inside the `product()` function.\n// Follows the standard guidelines of `reduce()` callback function.\nvar productReducer = function ( prev, curr ) {\n  var c,\n      cmax = curr.length;\n  var p,\n      pmax = prev.length;\n  var result = [];\n\n  for ( p = 0; p < pmax; p += 1 ) {\n    for ( c = 0; c < cmax; c += 1 ) {\n      result.push( prev[ p ].concat( curr[ c ] ) );\n    }\n  }\n  return ( result );\n}; // productReducer()\n\n// ### Public Function\n\n// ### Array Helpers\n\nhelpers.array = Object.create( null);\n\n// #### is Array\n\n// Tests if argument `v` is a JS array; returns `true` if it is, otherwise returns `false`.\nhelpers.array.isArray = function ( v ) {\n  return ( ( v !== undefined ) && ( v !== null ) && ( Object.prototype.toString.call( v ) === '[object Array]' ) );\n}; // isArray()\n\n\n// #### sorting helpers\n\n// Set of helpers to sort either numbers or strings. For key/value pairs,\n// the format for each element must be `[ key, value ]`.\n// Sort helper to sort an array in ascending order.\nhelpers.array.ascending = function ( a, b ) {\n  return ( a > b ) ? 1 :\n            ( a === b ) ? 0 : -1;\n}; // ascending()\n\n// Sort helper to sort an array in descending order.\nhelpers.array.descending = function ( a, b ) {\n  return ( b > a ) ? 1 :\n            ( b === a ) ? 0 : -1;\n}; // descending()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **key**.\nhelpers.array.ascendingOnKey = function ( a, b ) {\n  return ( a[ 0 ] > b[ 0 ] ) ? 1 :\n            ( a[ 0 ] === b[ 0 ] ) ? 0 : -1;\n}; // ascendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **key**.\nhelpers.array.descendingOnKey = function ( a, b ) {\n  return ( b[ 0 ] > a[ 0 ] ) ? 1 :\n            ( b[ 0 ] === a[ 0 ] ) ? 0 : -1;\n}; // descendingOnKey()\n\n// Sort helper to sort an array of `[ key, value ]` in ascending order by **value**.\nhelpers.array.ascendingOnValue = function ( a, b ) {\n  return ( a[ 1 ] > b[ 1 ] ) ? 1 :\n            ( a[ 1 ] === b[ 1 ] ) ? 0 : -1;\n}; // ascendingOnValue()\n\n// Sort helper to sort an array of `[ key, value ]` in descending order by **value**.\nhelpers.array.descendingOnValue = function ( a, b ) {\n  return ( b[ 1 ] > a[ 1 ] ) ? 1 :\n            ( b[ 1 ] === a[ 1 ] ) ? 0 : -1;\n}; // descendingOnValue()\n\n// The following two functions generate a suitable function for sorting on a single\n// key or on a composite keys (max 2 only). Just a remider, the generated function\n// does not sort on two keys; instead it will sort on a key composed of the two\n// accessors.\n// Sorts in ascending order on `accessor1` & `accessor2` (optional).\nhelpers.array.ascendingOn = function ( accessor1, accessor2 ) {\n  if ( accessor2 ) {\n    return ( function ( a, b ) {\n      return ( a[ accessor1 ][ accessor2 ] > b[ accessor1 ][ accessor2 ] ) ? 1 :\n              ( a[ accessor1 ][ accessor2 ] === b[ accessor1 ][ accessor2 ] ) ? 0 : -1;\n    } );\n  }\n  return ( function ( a, b ) {\n    return ( a[ accessor1 ] > b[ accessor1 ] ) ? 1 :\n            ( a[ accessor1 ] === b[ accessor1 ] ) ? 0 : -1;\n  } );\n}; // ascendingOn()\n\n// Sorts in descending order on `accessor1` & `accessor2` (optional).\nhelpers.array.descendingOn = function ( accessor1, accessor2 ) {\n  if ( accessor2 ) {\n    return ( function ( a, b ) {\n      return ( b[ accessor1 ][ accessor2 ] > a[ accessor1 ][ accessor2 ] ) ? 1 :\n              ( b[ accessor1 ][ accessor2 ] === a[ accessor1 ][ accessor2 ] ) ? 0 : -1;\n    } );\n  }\n  return ( function ( a, b ) {\n    return ( b[ accessor1 ] > a[ accessor1 ] ) ? 1 :\n            ( b[ accessor1 ] === a[ accessor1 ] ) ? 0 : -1;\n  } );\n}; // descendingOn()\n\n// #### pluck\n\n// Plucks specified element from each element of an **array of array**, and\n// returns the resultant array. The element is specified by `i` (default `0`) and\n// number of elements to pluck are defined by `limit` (default `a.length`).\nhelpers.array.pluck = function ( a, key, limit ) {\n  var k, plucked;\n  k = a.length;\n  var i = key || 0;\n  var lim = limit || k;\n  if ( lim > k ) lim = k;\n  plucked = new Array( lim );\n  for ( k = 0; k < lim; k += 1 ) plucked[ k ] = a[ k ][ i ];\n  return plucked;\n}; // pluck()\n\n// #### product\n\n// Finds the Cartesian Product of arrays present inside the array `a`. Therefore\n// the array `a` must be an array of 1-dimensional arrays. For example,\n// `product( [ [ 9, 8 ], [ 1, 2 ] ] )`\n// will produce `[ [ 9, 1 ], [ 9, 2 ], [ 8, 1 ], [ 8, 2 ] ]`.\nhelpers.array.product = function ( a ) {\n  return (\n    a.reduce( productReducer, [ [] ] )\n  );\n};\n\n// #### shuffle\n\n// Randomly shuffles the elements of an array and returns the same.\n// Reference: Chapter on Random Numbers/Shuffling in Seminumerical algorithms.\n// The Art of Computer Programming Volume II by Donald E Kunth\nhelpers.array.shuffle = function ( array ) {\n  var a = array;\n  var balance = a.length;\n  var candidate;\n  var temp;\n\n  while ( balance ) {\n    candidate = Math.floor( Math.random() * balance );\n    balance -= 1;\n\n    temp = a[ balance ];\n    a[ balance ] = a[ candidate ];\n    a[ candidate ] = temp;\n  }\n\n  return ( a );\n};\n\n\n// ### Object Helpers\n\nvar objectKeys = Object.keys;\nvar objectCreate = Object.create;\n\nhelpers.object = Object.create( null );\n\n// #### is Object\n\n// Tests if argument `v` is a JS object; returns `true` if it is, otherwise returns `false`.\nhelpers.object.isObject = function ( v ) {\n  return ( v && ( Object.prototype.toString.call( v ) === '[object Object]' ) ) ? true : false; // eslint-disable-line no-unneeded-ternary\n\n}; // isObject()\n\n// #### keys\n\n// Returns keys of the `obj` in an array.\nhelpers.object.keys = function ( obj ) {\n  return ( objectKeys( obj ) );\n}; // keys()\n\n// #### size\n\n// Returns the number of keys of the `obj`.\nhelpers.object.size = function ( obj ) {\n  return ( ( objectKeys( obj ) ).length );\n}; // size()\n\n// #### values\n\n// Returns all values from each key/value pair of the `obj` in an array.\nhelpers.object.values = function ( obj ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var values = new Array( length );\n  for ( var i = 0; i < length; i += 1 ) {\n    values[ i ] = obj[ keys[ i ] ];\n  }\n  return values;\n}; // values()\n\n// #### value Freq\n\n// Returns the frequency of each unique value present in the `obj`, where the\n// **key** is the *value* and **value** is the *frequency*.\nhelpers.object.valueFreq = function ( obj ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var val;\n  var vf = objectCreate( null );\n  for ( var i = 0; i < length; i += 1 ) {\n    val = obj[ keys[ i ] ];\n    vf[ val ] = 1 + ( vf[ val ] || 0 );\n  }\n  return vf;\n}; // valueFreq()\n\n// #### table\n\n// Converts the `obj` in to an array of `[ key, value ]` pairs in form of a table.\n// Second argument - `f` is optional and it is a function, which is called with\n// each `value`.\nhelpers.object.table = function ( obj, f ) {\n  var keys = helpers.object.keys( obj );\n  var length = keys.length;\n  var pairs = new Array( length );\n  var ak, av;\n  for ( var i = 0; i < length; i += 1 ) {\n    ak = keys[ i ];\n    av = obj[ ak ];\n    if ( typeof f === 'function' ) f( av );\n    pairs[ i ] = [ ak, av ];\n  }\n  return pairs;\n}; // table()\n\n// ### Validation Helpers\n\nhelpers.validate = Object.create( null );\n\n// Create aliases for isObject and isArray.\nhelpers.validate.isObject = helpers.object.isObject;\nhelpers.validate.isArray = helpers.array.isArray;\n\n// #### isFiniteInteger\n\n// Validates if `n` is a finite integer.\nhelpers.validate.isFiniteInteger = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n ) &&\n    ( n === Math.round( n ) )\n  );\n}; // isFiniteInteger()\n\n// #### isFiniteNumber\n\n// Validates if `n` is a valid number.\nhelpers.validate.isFiniteNumber = function ( n ) {\n  return (\n    ( typeof n === 'number' ) &&\n    !isNaN( n ) &&\n    isFinite( n )\n  );\n}; // isFiniteNumber()\n\n// ### cross validation\n/**\n *\n * Creates an instance of cross validator useful for machine learning tasks.\n *\n * @param {string[]} classLabels - array containing all the class labels.\n * @return {methods} object conatining set of API methods for tasks like evalutaion,\n * reset and metrics generation.\n*/\nhelpers.validate.cross = function ( classLabels ) {\n  // wink's const for unknown predictions!\n  const unknown = 'unknown';\n  // To ensure that metrics is not computed prior to evaluation.\n  var evaluated = false;\n  // The confusion matrix.\n  var cm;\n  var precision;\n  var recall;\n  var fmeasure;\n\n  // The class labels is assigned to this variable.\n  var labels;\n  // The length of `labels` array.\n  var labelCount;\n  var labelsObj = Object.create( null );\n\n  // Returned!\n  var methods = Object.create( null );\n\n\n  /**\n   *\n   * Resets the current instance for another round of evaluation; the class\n   * labels defined at instance creation time are not touched.\n   *\n   * @return {undefined} nothing!\n  */\n  var reset = function ( ) {\n    evaluated = false;\n    cm = Object.create( null );\n    precision = Object.create( null );\n    recall = Object.create( null );\n    fmeasure = Object.create( null );\n\n    // Initialize confusion matrix and metrics.\n    for ( let i = 0; i < labelCount; i += 1 ) {\n      const row = labels[ i ];\n      labelsObj[ row ] = true;\n      cm[ row ] = Object.create( null );\n      precision[ row ] = 0;\n      recall[ row ] = 0;\n      fmeasure[ row ] = 0;\n      for ( let j = 0; j < labelCount; j += 1 ) {\n        const col = labels[ j ];\n        cm[ row ][ col ] = 0;\n      }\n    }\n  }; // reset()\n\n  /**\n   *\n   * Creates an instance of cross validator useful for machine learning tasks.\n   *\n   * @param {string} truth - the actual class label.\n   * @param {string} guess - the predicted class label.\n   * @return {boolean} returns true if the evaluation is successful. The evaluation\n   * may fail if `truth` or `guess` is not in the array `classLabels` provided at\n   * instance creation time; or if guess is equal to `unknown`.\n  */\n  var evaluate = function ( truth, guess ) {\n    // If prediction failed then return false!\n    if ( guess === unknown || !labelsObj[ truth ] || !labelsObj[ guess ] ) return false;\n    // Update confusion matrix.\n    if ( guess === truth ) {\n      cm[ truth ][ guess ] += 1;\n    } else {\n      cm[ guess ][ truth ] += 1;\n    }\n    evaluated = true;\n    return true;\n  }; // evaluate()\n\n  /**\n   *\n   * It computes a detailed metrics consisting of macro-averaged precision,\n   * recall and f-measure along with their label-wise values and the confusion\n   * matrix.\n   *\n   * @return {object} object containing macro-averaged `avgPrecision`, `avgRecall`,\n   * `avgFMeasure` values along with other details such as label-wise values\n   * and the confusion matrix. A value of `null` is returned if no evaluate()\n   * has been called before.\n  */\n  var metrics = function ( ) {\n    if ( !evaluated ) return null;\n    // Numerators for every label; they are same for precision & recall both.\n    var n = Object.create( null );\n    // Only denominators differs for precision & recall\n    var pd = Object.create( null );\n    var rd = Object.create( null );\n    // `row` and `col` of confusion matrix.\n    var col, row;\n    var i, j;\n    // Macro average values for metrics.\n    var avgPrecision = 0;\n    var avgRecall = 0;\n    var avgFMeasure = 0;\n\n    // Compute label-wise numerators & denominators!\n    for ( i = 0; i < labelCount; i += 1 ) {\n      row = labels[ i ];\n      for ( j = 0; j < labelCount; j += 1 ) {\n        col = labels[ j ];\n        if ( row === col ) {\n          n[ row ] = cm[ row ][ col ];\n        }\n        pd[ row ] = cm[ row ][ col ] + ( pd[ row ] || 0 );\n        rd[ row ] = cm[ col ][ row ] + ( rd[ row ] || 0 );\n      }\n    }\n    // Ready to compute metrics.\n    for ( i = 0; i < labelCount; i += 1 ) {\n      row = labels[ i ];\n      precision[ row ] = +( n[ row ] / pd[ row ] ).toFixed( 4 );\n      // NaN can occur if a label has not been encountered.\n      if ( isNaN( precision[ row ] ) ) precision[ row ] = 0;\n\n      recall[ row ] = +( n[ row ] / rd[ row ] ).toFixed( 4 );\n      if ( isNaN( recall[ row ] ) ) recall[ row ] = 0;\n\n      fmeasure[ row ] = +( 2 * precision[ row ] * recall[ row ] / ( precision[ row ] + recall[ row ] ) ).toFixed( 4 );\n      if ( isNaN( fmeasure[ row ] ) ) fmeasure[ row ] = 0;\n    }\n    // Compute thier averages, note they will be macro avegages.\n    for ( i = 0; i < labelCount; i += 1 ) {\n      avgPrecision += ( precision[ labels[ i ] ] / labelCount );\n      avgRecall += ( recall[ labels[ i ] ] / labelCount );\n      avgFMeasure += ( fmeasure[ labels[ i ] ] / labelCount );\n    }\n    // Return metrics.\n    return (\n      {\n        // Macro-averaged metrics.\n        avgPrecision: +avgPrecision.toFixed( 4 ),\n        avgRecall: +avgRecall.toFixed( 4 ),\n        avgFMeasure: +avgFMeasure.toFixed( 4 ),\n        details: {\n          // Confusion Matrix.\n          confusionMatrix: cm,\n          // Label wise metrics details, from those averages were computed.\n          precision: precision,\n          recall: recall,\n          fmeasure: fmeasure\n        }\n      }\n    );\n  }; // metrics()\n\n  if ( !helpers.validate.isArray( classLabels ) ) {\n    throw Error( 'cross validate: class labels must be an array.' );\n  }\n  if ( classLabels.length < 2 ) {\n    throw Error( 'cross validate: at least 2 class labels are required.' );\n  }\n  labels = classLabels;\n  labelCount = labels.length;\n\n  reset();\n\n  methods.reset = reset;\n  methods.evaluate = evaluate;\n  methods.metrics = metrics;\n\n  return methods;\n}; // cross()\n\n// ### Object Helpers\n\nhelpers.string = Object.create( null );\n\n// Regex for [diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) removal.\nvar rgxDiacritical = /[\\u0300-\\u036f]/g;\n\n/**\n *\n * Normalizes the token's value by converting it to lower case and stripping\n * the diacritical marks (if any).\n *\n * @param {string} str — that needs to be normalized.\n * @return {string} the normalized value.\n * @example\n * normalize( 'Nestlé' );\n * // -> nestle\n*/\nhelpers.string.normalize = function ( str ) {\n  return (\n    str.toLowerCase().normalize( 'NFD' ).replace( rgxDiacritical, '' )\n  );\n}; // normalize()\n\nmodule.exports = helpers;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar helpers = require( 'wink-helpers' );\nvar returnQuotedTextExtractor = require( './helper-return-quoted-text-extractor.js' );\nvar extractQuotedText = returnQuotedTextExtractor( '[', ']' );\n// ## string\n\n// ### composeCorpus\n/**\n *\n * Generates all possible sentences from the input argument string.\n * The string s must follow a special syntax as illustrated in the\n * example below:<br/>\n * `'[I] [am having|have] [a] [problem|question]'`<br/>\n *\n * Each phrase must be quoted between `[ ]` and each possible option of phrases\n * (if any) must be separated by a `|` character. The corpus is composed by\n * computing the cartesian product of all the phrases.\n *\n * @alias string#composeCorpus\n * @param {string} str the input string.\n * @return {string[]} of all possible sentences.\n * @example\n * composeCorpus( '[I] [am having|have] [a] [problem|question]' );\n * // -> [ 'I am having a problem',\n * //      'I am having a question',\n * //      'I have a problem',\n * //      'I have a question' ]\n */\nvar composeCorpus = function ( str ) {\n  if ( !str || ( typeof str !== 'string' ) ) return [];\n\n  var quotedTextElems = extractQuotedText( str );\n  var corpus = [];\n  var finalCorpus = [];\n\n  if ( !quotedTextElems ) return [];\n  quotedTextElems.forEach( function ( e ) {\n    corpus.push( e.split( '|' ) );\n  } );\n\n  helpers.array.product( corpus ).forEach( function ( e ) {\n    finalCorpus.push( e.join( ' ' ) );\n  } );\n  return ( finalCorpus );\n}; // composeCorpus()\n\nmodule.exports = composeCorpus;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar removeElisions = require( './string-remove-elisions.js' );\nvar amplifyNotElision = require( './string-amplify-not-elision.js' );\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### tokenize0\n/**\n *\n * Tokenizes by splitting the input string on **non-words**. This means tokens would\n * consists of only alphas, numerals and underscores; all other characters will\n * be stripped as they are treated as separators. It also removes all elisions;\n * however negations are retained and amplified.\n *\n * @alias string#tokenize0\n * @param {string} str the input string.\n * @return {string[]} of tokens.\n * @example\n * tokenize0( \"someone's wallet, isn't it?\" );\n * // -> [ 'someone', 's', 'wallet', 'is', 'not', 'it' ]\n */\nvar tokenize0 = function ( str ) {\n  var tokens = removeElisions( amplifyNotElision( str ) )\n                .replace( rgx.cannot, '$1 $2' )\n                .split( rgx.nonWords );\n  // Check the 0th and last element of array for empty string because if\n  // fisrt/last characters are non-words then these will be empty stings!\n  if ( tokens[ 0 ] === '' ) tokens.shift();\n  if ( tokens[ tokens.length - 1 ] === '' ) tokens.pop();\n  return tokens;\n}; // tokenize0()\n\nmodule.exports = tokenize0;\n","\"use strict\";\n\nmodule.exports = function () {\n  // https://mths.be/emoji\n  return /\\uD83C\\uDFF4\\uDB40\\uDC67\\uDB40\\uDC62(?:\\uDB40\\uDC77\\uDB40\\uDC6C\\uDB40\\uDC73|\\uDB40\\uDC73\\uDB40\\uDC63\\uDB40\\uDC74|\\uDB40\\uDC65\\uDB40\\uDC6E\\uDB40\\uDC67)\\uDB40\\uDC7F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC68(?:\\uD83C\\uDFFF\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83D\\uDC68(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D)?\\uD83D\\uDC68|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67]))|\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D[\\uDC68\\uDC69])\\u200D(?:\\uD83D[\\uDC66\\uDC67])|[\\u2695\\u2696\\u2708]\\uFE0F|\\uD83D[\\uDC66\\uDC67]|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708])\\uFE0F|\\uD83C[\\uDFFB-\\uDFFF])|\\uD83E\\uDDD1(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\u200D(?:\\uD83E\\uDD1D\\u200D\\uD83E\\uDDD1|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF84\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69(?:\\u200D(?:\\u2764\\uFE0F\\u200D(?:\\uD83D\\uDC8B\\u200D(?:\\uD83D[\\uDC68\\uDC69])|\\uD83D[\\uDC68\\uDC69])|\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFF\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFE\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFD\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFC\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD])|\\uD83C\\uDFFB\\u200D(?:\\uD83C[\\uDF3E\\uDF73\\uDF7C\\uDF93\\uDFA4\\uDFA8\\uDFEB\\uDFED]|\\uD83D[\\uDCBB\\uDCBC\\uDD27\\uDD2C\\uDE80\\uDE92]|\\uD83E[\\uDDAF-\\uDDB3\\uDDBC\\uDDBD]))|\\uD83D\\uDC69\\uD83C\\uDFFF\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB-\\uDFFE])|\\uD83D\\uDC69\\uD83C\\uDFFE\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB-\\uDFFD\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFD\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB\\uDFFC\\uDFFE\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFC\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFB\\uDFFD-\\uDFFF])|\\uD83D\\uDC69\\uD83C\\uDFFB\\u200D\\uD83E\\uDD1D\\u200D(?:\\uD83D[\\uDC68\\uDC69])(?:\\uD83C[\\uDFFC-\\uDFFF])|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66\\u200D\\uD83D\\uDC66|\\uD83D\\uDC69\\u200D\\uD83D\\uDC69\\u200D(?:\\uD83D[\\uDC66\\uDC67])|(?:\\uD83D\\uDC41\\uFE0F\\u200D\\uD83D\\uDDE8|\\uD83D\\uDC69(?:\\uD83C\\uDFFF\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFE\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFD\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFC\\u200D[\\u2695\\u2696\\u2708]|\\uD83C\\uDFFB\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83C\\uDFF3\\uFE0F\\u200D\\u26A7|\\uD83E\\uDDD1(?:(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2695\\u2696\\u2708]|\\u200D[\\u2695\\u2696\\u2708])|\\uD83D\\uDC3B\\u200D\\u2744|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642]|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uFE0F\\u200D[\\u2640\\u2642]|(?:\\uD83C[\\uDFFB-\\uDFFF])\\u200D[\\u2640\\u2642])|\\uD83C\\uDFF4\\u200D\\u2620|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E-\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3C-\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDF])\\u200D[\\u2640\\u2642])\\uFE0F|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67\\u200D(?:\\uD83D[\\uDC66\\uDC67])|\\uD83C\\uDFF3\\uFE0F\\u200D\\uD83C\\uDF08|\\uD83D\\uDC69\\u200D\\uD83D\\uDC67|\\uD83D\\uDC69\\u200D\\uD83D\\uDC66|\\uD83D\\uDC15\\u200D\\uD83E\\uDDBA|\\uD83C\\uDDFD\\uD83C\\uDDF0|\\uD83C\\uDDF6\\uD83C\\uDDE6|\\uD83C\\uDDF4\\uD83C\\uDDF2|\\uD83D\\uDC08\\u200D\\u2B1B|\\uD83E\\uDDD1(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83D\\uDC69(?:\\uD83C[\\uDFFB-\\uDFFF])|\\uD83C\\uDDFF(?:\\uD83C[\\uDDE6\\uDDF2\\uDDFC])|\\uD83C\\uDDFE(?:\\uD83C[\\uDDEA\\uDDF9])|\\uD83C\\uDDFC(?:\\uD83C[\\uDDEB\\uDDF8])|\\uD83C\\uDDFB(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDEE\\uDDF3\\uDDFA])|\\uD83C\\uDDFA(?:\\uD83C[\\uDDE6\\uDDEC\\uDDF2\\uDDF3\\uDDF8\\uDDFE\\uDDFF])|\\uD83C\\uDDF9(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDED\\uDDEF-\\uDDF4\\uDDF7\\uDDF9\\uDDFB\\uDDFC\\uDDFF])|\\uD83C\\uDDF8(?:\\uD83C[\\uDDE6-\\uDDEA\\uDDEC-\\uDDF4\\uDDF7-\\uDDF9\\uDDFB\\uDDFD-\\uDDFF])|\\uD83C\\uDDF7(?:\\uD83C[\\uDDEA\\uDDF4\\uDDF8\\uDDFA\\uDDFC])|\\uD83C\\uDDF5(?:\\uD83C[\\uDDE6\\uDDEA-\\uDDED\\uDDF0-\\uDDF3\\uDDF7-\\uDDF9\\uDDFC\\uDDFE])|\\uD83C\\uDDF3(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA-\\uDDEC\\uDDEE\\uDDF1\\uDDF4\\uDDF5\\uDDF7\\uDDFA\\uDDFF])|\\uD83C\\uDDF2(?:\\uD83C[\\uDDE6\\uDDE8-\\uDDED\\uDDF0-\\uDDFF])|\\uD83C\\uDDF1(?:\\uD83C[\\uDDE6-\\uDDE8\\uDDEE\\uDDF0\\uDDF7-\\uDDFB\\uDDFE])|\\uD83C\\uDDF0(?:\\uD83C[\\uDDEA\\uDDEC-\\uDDEE\\uDDF2\\uDDF3\\uDDF5\\uDDF7\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDEF(?:\\uD83C[\\uDDEA\\uDDF2\\uDDF4\\uDDF5])|\\uD83C\\uDDEE(?:\\uD83C[\\uDDE8-\\uDDEA\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9])|\\uD83C\\uDDED(?:\\uD83C[\\uDDF0\\uDDF2\\uDDF3\\uDDF7\\uDDF9\\uDDFA])|\\uD83C\\uDDEC(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEE\\uDDF1-\\uDDF3\\uDDF5-\\uDDFA\\uDDFC\\uDDFE])|\\uD83C\\uDDEB(?:\\uD83C[\\uDDEE-\\uDDF0\\uDDF2\\uDDF4\\uDDF7])|\\uD83C\\uDDEA(?:\\uD83C[\\uDDE6\\uDDE8\\uDDEA\\uDDEC\\uDDED\\uDDF7-\\uDDFA])|\\uD83C\\uDDE9(?:\\uD83C[\\uDDEA\\uDDEC\\uDDEF\\uDDF0\\uDDF2\\uDDF4\\uDDFF])|\\uD83C\\uDDE8(?:\\uD83C[\\uDDE6\\uDDE8\\uDDE9\\uDDEB-\\uDDEE\\uDDF0-\\uDDF5\\uDDF7\\uDDFA-\\uDDFF])|\\uD83C\\uDDE7(?:\\uD83C[\\uDDE6\\uDDE7\\uDDE9-\\uDDEF\\uDDF1-\\uDDF4\\uDDF6-\\uDDF9\\uDDFB\\uDDFC\\uDDFE\\uDDFF])|\\uD83C\\uDDE6(?:\\uD83C[\\uDDE8-\\uDDEC\\uDDEE\\uDDF1\\uDDF2\\uDDF4\\uDDF6-\\uDDFA\\uDDFC\\uDDFD\\uDDFF])|[#\\*0-9]\\uFE0F\\u20E3|(?:\\uD83C[\\uDFC3\\uDFC4\\uDFCA]|\\uD83D[\\uDC6E\\uDC70\\uDC71\\uDC73\\uDC77\\uDC81\\uDC82\\uDC86\\uDC87\\uDE45-\\uDE47\\uDE4B\\uDE4D\\uDE4E\\uDEA3\\uDEB4-\\uDEB6]|\\uD83E[\\uDD26\\uDD35\\uDD37-\\uDD39\\uDD3D\\uDD3E\\uDDB8\\uDDB9\\uDDCD-\\uDDCF\\uDDD6-\\uDDDD])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:\\u26F9|\\uD83C[\\uDFCB\\uDFCC]|\\uD83D\\uDD75)(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u261D\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2\\uDFC7]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66\\uDC67\\uDC6B-\\uDC6D\\uDC72\\uDC74-\\uDC76\\uDC78\\uDC7C\\uDC83\\uDC85\\uDCAA\\uDD74\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE4C\\uDE4F\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1C\\uDD1E\\uDD1F\\uDD30-\\uDD34\\uDD36\\uDD77\\uDDB5\\uDDB6\\uDDBB\\uDDD2-\\uDDD5])(?:\\uD83C[\\uDFFB-\\uDFFF])|(?:[\\u231A\\u231B\\u23E9-\\u23EC\\u23F0\\u23F3\\u25FD\\u25FE\\u2614\\u2615\\u2648-\\u2653\\u267F\\u2693\\u26A1\\u26AA\\u26AB\\u26BD\\u26BE\\u26C4\\u26C5\\u26CE\\u26D4\\u26EA\\u26F2\\u26F3\\u26F5\\u26FA\\u26FD\\u2705\\u270A\\u270B\\u2728\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2795-\\u2797\\u27B0\\u27BF\\u2B1B\\u2B1C\\u2B50\\u2B55]|\\uD83C[\\uDC04\\uDCCF\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE1A\\uDE2F\\uDE32-\\uDE36\\uDE38-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF20\\uDF2D-\\uDF35\\uDF37-\\uDF7C\\uDF7E-\\uDF93\\uDFA0-\\uDFCA\\uDFCF-\\uDFD3\\uDFE0-\\uDFF0\\uDFF4\\uDFF8-\\uDFFF]|\\uD83D[\\uDC00-\\uDC3E\\uDC40\\uDC42-\\uDCFC\\uDCFF-\\uDD3D\\uDD4B-\\uDD4E\\uDD50-\\uDD67\\uDD7A\\uDD95\\uDD96\\uDDA4\\uDDFB-\\uDE4F\\uDE80-\\uDEC5\\uDECC\\uDED0-\\uDED2\\uDED5-\\uDED7\\uDEEB\\uDEEC\\uDEF4-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])|(?:[#\\*0-9\\xA9\\xAE\\u203C\\u2049\\u2122\\u2139\\u2194-\\u2199\\u21A9\\u21AA\\u231A\\u231B\\u2328\\u23CF\\u23E9-\\u23F3\\u23F8-\\u23FA\\u24C2\\u25AA\\u25AB\\u25B6\\u25C0\\u25FB-\\u25FE\\u2600-\\u2604\\u260E\\u2611\\u2614\\u2615\\u2618\\u261D\\u2620\\u2622\\u2623\\u2626\\u262A\\u262E\\u262F\\u2638-\\u263A\\u2640\\u2642\\u2648-\\u2653\\u265F\\u2660\\u2663\\u2665\\u2666\\u2668\\u267B\\u267E\\u267F\\u2692-\\u2697\\u2699\\u269B\\u269C\\u26A0\\u26A1\\u26A7\\u26AA\\u26AB\\u26B0\\u26B1\\u26BD\\u26BE\\u26C4\\u26C5\\u26C8\\u26CE\\u26CF\\u26D1\\u26D3\\u26D4\\u26E9\\u26EA\\u26F0-\\u26F5\\u26F7-\\u26FA\\u26FD\\u2702\\u2705\\u2708-\\u270D\\u270F\\u2712\\u2714\\u2716\\u271D\\u2721\\u2728\\u2733\\u2734\\u2744\\u2747\\u274C\\u274E\\u2753-\\u2755\\u2757\\u2763\\u2764\\u2795-\\u2797\\u27A1\\u27B0\\u27BF\\u2934\\u2935\\u2B05-\\u2B07\\u2B1B\\u2B1C\\u2B50\\u2B55\\u3030\\u303D\\u3297\\u3299]|\\uD83C[\\uDC04\\uDCCF\\uDD70\\uDD71\\uDD7E\\uDD7F\\uDD8E\\uDD91-\\uDD9A\\uDDE6-\\uDDFF\\uDE01\\uDE02\\uDE1A\\uDE2F\\uDE32-\\uDE3A\\uDE50\\uDE51\\uDF00-\\uDF21\\uDF24-\\uDF93\\uDF96\\uDF97\\uDF99-\\uDF9B\\uDF9E-\\uDFF0\\uDFF3-\\uDFF5\\uDFF7-\\uDFFF]|\\uD83D[\\uDC00-\\uDCFD\\uDCFF-\\uDD3D\\uDD49-\\uDD4E\\uDD50-\\uDD67\\uDD6F\\uDD70\\uDD73-\\uDD7A\\uDD87\\uDD8A-\\uDD8D\\uDD90\\uDD95\\uDD96\\uDDA4\\uDDA5\\uDDA8\\uDDB1\\uDDB2\\uDDBC\\uDDC2-\\uDDC4\\uDDD1-\\uDDD3\\uDDDC-\\uDDDE\\uDDE1\\uDDE3\\uDDE8\\uDDEF\\uDDF3\\uDDFA-\\uDE4F\\uDE80-\\uDEC5\\uDECB-\\uDED2\\uDED5-\\uDED7\\uDEE0-\\uDEE5\\uDEE9\\uDEEB\\uDEEC\\uDEF0\\uDEF3-\\uDEFC\\uDFE0-\\uDFEB]|\\uD83E[\\uDD0C-\\uDD3A\\uDD3C-\\uDD45\\uDD47-\\uDD78\\uDD7A-\\uDDCB\\uDDCD-\\uDDFF\\uDE70-\\uDE74\\uDE78-\\uDE7A\\uDE80-\\uDE86\\uDE90-\\uDEA8\\uDEB0-\\uDEB6\\uDEC0-\\uDEC2\\uDED0-\\uDED6])\\uFE0F|(?:[\\u261D\\u26F9\\u270A-\\u270D]|\\uD83C[\\uDF85\\uDFC2-\\uDFC4\\uDFC7\\uDFCA-\\uDFCC]|\\uD83D[\\uDC42\\uDC43\\uDC46-\\uDC50\\uDC66-\\uDC78\\uDC7C\\uDC81-\\uDC83\\uDC85-\\uDC87\\uDC8F\\uDC91\\uDCAA\\uDD74\\uDD75\\uDD7A\\uDD90\\uDD95\\uDD96\\uDE45-\\uDE47\\uDE4B-\\uDE4F\\uDEA3\\uDEB4-\\uDEB6\\uDEC0\\uDECC]|\\uD83E[\\uDD0C\\uDD0F\\uDD18-\\uDD1F\\uDD26\\uDD30-\\uDD39\\uDD3C-\\uDD3E\\uDD77\\uDDB5\\uDDB6\\uDDB8\\uDDB9\\uDDBB\\uDDCD-\\uDDCF\\uDDD1-\\uDDDD])/g;\n};\n","//     wink-tokenizer\n//     Multilingual tokenizer that automatically tags each token with its type.\n//\n//     Copyright (C) 2017-20  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-tokenizer”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\nvar contractions = Object.create( null );\n\n// Tag - word.\nvar word = 'word';\n// Verbs.\ncontractions[ 'can\\'t' ] = [ { value: 'ca', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'CAN\\'T' ] = [ { value: 'CA', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Can\\'t' ] = [ { value: 'Ca', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'Couldn\\'t' ] = [ { value: 'could', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'COULDN\\'T' ] = [ { value: 'COULD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Couldn\\'t' ] = [ { value: 'Could', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'don\\'t' ] = [ { value: 'do', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DON\\'T' ] = [ { value: 'DO', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Don\\'t' ] = [ { value: 'Do', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'doesn\\'t' ] = [ { value: 'does', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DOESN\\'T' ] = [ { value: 'DOES', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Doesn\\'t' ] = [ { value: 'Does', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'didn\\'t' ] = [ { value: 'did', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DIDN\\'T' ] = [ { value: 'DID', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Didn\\'t' ] = [ { value: 'Did', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'hadn\\'t' ] = [ { value: 'had', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'HADN\\'T' ] = [ { value: 'HAD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Hadn\\'t' ] = [ { value: 'Had', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'mayn\\'t' ] = [ { value: 'may', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'MAYN\\'T' ] = [ { value: 'MAY', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Mayn\\'t' ] = [ { value: 'May', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'mightn\\'t' ] = [ { value: 'might', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'MIGHTN\\'T' ] = [ { value: 'MIGHT', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Mightn\\'t' ] = [ { value: 'Might', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'mustn\\'t' ] = [ { value: 'must', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'MUSTN\\'T' ] = [ { value: 'MUST', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Mustn\\'t' ] = [ { value: 'Must', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'needn\\'t' ] = [ { value: 'need', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'NEEDN\\'T' ] = [ { value: 'NEED', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Needn\\'t' ] = [ { value: 'Need', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'oughtn\\'t' ] = [ { value: 'ought', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'OUGHTN\\'T' ] = [ { value: 'OUGHT', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Oughtn\\'t' ] = [ { value: 'Ought', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'shan\\'t' ] = [ { value: 'sha', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'SHAN\\'T' ] = [ { value: 'SHA', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Shan\\'t' ] = [ { value: 'Sha', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'shouldn\\'t' ] = [ { value: 'should', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'SHOULDN\\'T' ] = [ { value: 'SHOULD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Shouldn\\'t' ] = [ { value: 'Should', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'won\\'t' ] = [ { value: 'wo', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WON\\'T' ] = [ { value: 'WO', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Won\\'t' ] = [ { value: 'Wo', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'wouldn\\'t' ] = [ { value: 'would', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WOULDN\\'T' ] = [ { value: 'WOULD', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Wouldn\\'t' ] = [ { value: 'Would', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'ain\\'t' ] = [ { value: 'ai', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'AIN\\'T' ] = [ { value: 'AI', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Ain\\'t' ] = [ { value: 'Ai', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'aren\\'t' ] = [ { value: 'are', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'AREN\\'T' ] = [ { value: 'ARE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Aren\\'t' ] = [ { value: 'Are', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'isn\\'t' ] = [ { value: 'is', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'ISN\\'T' ] = [ { value: 'IS', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Isn\\'t' ] = [ { value: 'Is', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'wasn\\'t' ] = [ { value: 'was', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WASN\\'T' ] = [ { value: 'WAS', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Wasn\\'t' ] = [ { value: 'Was', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'weren\\'t' ] = [ { value: 'were', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'WEREN\\'T' ] = [ { value: 'WERE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Weren\\'t' ] = [ { value: 'Were', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'haven\\'t' ] = [ { value: 'have', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'HAVEN\\'T' ] = [ { value: 'HAVE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Haven\\'t' ] = [ { value: 'Have', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'hasn\\'t' ] = [ { value: 'has', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'HASN\\'T' ] = [ { value: 'HAS', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Hasn\\'t' ] = [ { value: 'Has', tag: word }, { value: 'n\\'t', tag: word } ];\n\ncontractions[ 'daren\\'t' ] = [ { value: 'dare', tag: word }, { value: 'n\\'t', tag: word } ];\ncontractions[ 'DAREN\\'T' ] = [ { value: 'DARE', tag: word }, { value: 'N\\'T', tag: word } ];\ncontractions[ 'Daren\\'t' ] = [ { value: 'Dare', tag: word }, { value: 'n\\'t', tag: word } ];\n\n\n// Pronouns like I, you, they, we, she, and he.\ncontractions[ 'i\\'m' ] = [ { value: 'i', tag: word }, { value: '\\'m', tag: word } ];\ncontractions[ 'I\\'M' ] = [ { value: 'I', tag: word }, { value: '\\'M', tag: word } ];\ncontractions[ 'I\\'m' ] = [ { value: 'I', tag: word }, { value: '\\'m', tag: word } ];\n\ncontractions[ 'i\\'ve' ] = [ { value: 'i', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'I\\'VE' ] = [ { value: 'I', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'I\\'ve' ] = [ { value: 'I', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'i\\'d' ] = [ { value: 'i', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'I\\'D' ] = [ { value: 'I', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'I\\'d' ] = [ { value: 'I', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'i\\'ll' ] = [ { value: 'i', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'I\\'LL' ] = [ { value: 'I', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'I\\'ll' ] = [ { value: 'I', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'you\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'d' ] = [ { value: 'you', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'YOU\\'D' ] = [ { value: 'YOU', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'You\\'d' ] = [ { value: 'You', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'you\\'ll' ] = [ { value: 'you', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'YOU\\'LL' ] = [ { value: 'YOU', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'You\\'ll' ] = [ { value: 'You', tag: word }, { value: '\\'ll', tag: word } ];\n\n// they - 've, 'd, 'll, 're\ncontractions[ 'they\\'ve' ] = [ { value: 'they', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THEY\\'VE' ] = [ { value: 'THEY', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'They\\'ve' ] = [ { value: 'They', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'they\\'d' ] = [ { value: 'they', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'THEY\\'D' ] = [ { value: 'THEY', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'They\\'d' ] = [ { value: 'They', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'they\\'ll' ] = [ { value: 'they', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'THEY\\'LL' ] = [ { value: 'THEY', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'They\\'ll' ] = [ { value: 'They', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'they\\'re' ] = [ { value: 'they', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'THEY\\'RE' ] = [ { value: 'THEY', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'They\\'re' ] = [ { value: 'They', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'we\\'ve' ] = [ { value: 'we', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WE\\'VE' ] = [ { value: 'WE', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'We\\'ve' ] = [ { value: 'We', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'we\\'d' ] = [ { value: 'we', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WE\\'D' ] = [ { value: 'WE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'We\\'d' ] = [ { value: 'We', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'we\\'ll' ] = [ { value: 'we', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WE\\'LL' ] = [ { value: 'WE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'We\\'ll' ] = [ { value: 'We', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'we\\'re' ] = [ { value: 'we', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WE\\'RE' ] = [ { value: 'WE', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'We\\'re' ] = [ { value: 'We', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'she\\'d' ] = [ { value: 'she', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'SHE\\'D' ] = [ { value: 'SHE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'She\\'d' ] = [ { value: 'She', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'she\\'ll' ] = [ { value: 'she', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'SHE\\'LL' ] = [ { value: 'SHE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'She\\'ll' ] = [ { value: 'She', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'she\\'s' ] = [ { value: 'she', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'SHE\\'S' ] = [ { value: 'SHE', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'She\\'s' ] = [ { value: 'She', tag: word }, { value: '\\'s', tag: word } ];\n\ncontractions[ 'he\\'d' ] = [ { value: 'he', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'HE\\'D' ] = [ { value: 'HE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'He\\'d' ] = [ { value: 'He', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'he\\'ll' ] = [ { value: 'he', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'HE\\'LL' ] = [ { value: 'HE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'He\\'ll' ] = [ { value: 'He', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'he\\'s' ] = [ { value: 'he', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'HE\\'S' ] = [ { value: 'HE', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'He\\'s' ] = [ { value: 'He', tag: word }, { value: '\\'s', tag: word } ];\n\ncontractions[ 'it\\'d' ] = [ { value: 'it', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'IT\\'D' ] = [ { value: 'IT', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'It\\'d' ] = [ { value: 'It', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'it\\'ll' ] = [ { value: 'it', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'IT\\'LL' ] = [ { value: 'IT', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'It\\'ll' ] = [ { value: 'It', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'it\\'s' ] = [ { value: 'it', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'IT\\'S' ] = [ { value: 'IT', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'It\\'s' ] = [ { value: 'It', tag: word }, { value: '\\'s', tag: word } ];\n\n// Wh Pronouns - what, who, when, where, why, how, there, that\ncontractions[ 'what\\'ve' ] = [ { value: 'what', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHAT\\'VE' ] = [ { value: 'WHAT', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'What\\'ve' ] = [ { value: 'What', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'what\\'d' ] = [ { value: 'what', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHAT\\'D' ] = [ { value: 'WHAT', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'What\\'d' ] = [ { value: 'What', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'what\\'ll' ] = [ { value: 'what', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHAT\\'LL' ] = [ { value: 'WHAT', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'What\\'ll' ] = [ { value: 'What', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'what\\'re' ] = [ { value: 'what', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHAT\\'RE' ] = [ { value: 'WHAT', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'What\\'re' ] = [ { value: 'What', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'who\\'ve' ] = [ { value: 'who', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHO\\'VE' ] = [ { value: 'WHO', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Who\\'ve' ] = [ { value: 'Who', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'who\\'d' ] = [ { value: 'who', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHO\\'D' ] = [ { value: 'WHO', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'Who\\'d' ] = [ { value: 'Who', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'who\\'ll' ] = [ { value: 'who', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHO\\'LL' ] = [ { value: 'WHO', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'Who\\'ll' ] = [ { value: 'Who', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'who\\'re' ] = [ { value: 'who', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHO\\'RE' ] = [ { value: 'WHO', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'Who\\'re' ] = [ { value: 'Who', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'when\\'ve' ] = [ { value: 'when', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHEN\\'VE' ] = [ { value: 'WHEN', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'When\\'ve' ] = [ { value: 'When', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'when\\'d' ] = [ { value: 'when', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHEN\\'D' ] = [ { value: 'WHEN', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'When\\'d' ] = [ { value: 'When', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'when\\'ll' ] = [ { value: 'when', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHEN\\'LL' ] = [ { value: 'WHEN', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'When\\'ll' ] = [ { value: 'When', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'when\\'re' ] = [ { value: 'when', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHEN\\'RE' ] = [ { value: 'WHEN', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'When\\'re' ] = [ { value: 'When', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'where\\'ve' ] = [ { value: 'where', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHERE\\'VE' ] = [ { value: 'WHERE', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Where\\'ve' ] = [ { value: 'Where', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'where\\'d' ] = [ { value: 'where', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHERE\\'D' ] = [ { value: 'WHERE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'Where\\'d' ] = [ { value: 'Where', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'where\\'ll' ] = [ { value: 'where', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHERE\\'LL' ] = [ { value: 'WHERE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'Where\\'ll' ] = [ { value: 'Where', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'where\\'re' ] = [ { value: 'where', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHERE\\'RE' ] = [ { value: 'WHERE', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'Where\\'re' ] = [ { value: 'Where', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'why\\'ve' ] = [ { value: 'why', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WHY\\'VE' ] = [ { value: 'WHY', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Why\\'ve' ] = [ { value: 'Why', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'why\\'d' ] = [ { value: 'why', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'WHY\\'D' ] = [ { value: 'WHY', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'Why\\'d' ] = [ { value: 'Why', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'why\\'ll' ] = [ { value: 'why', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'WHY\\'LL' ] = [ { value: 'WHY', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'Why\\'ll' ] = [ { value: 'Why', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'why\\'re' ] = [ { value: 'why', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'WHY\\'RE' ] = [ { value: 'WHY', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'Why\\'re' ] = [ { value: 'Why', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'how\\'ve' ] = [ { value: 'how', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'HOW\\'VE' ] = [ { value: 'HOW', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'How\\'ve' ] = [ { value: 'How', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'how\\'d' ] = [ { value: 'how', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'HOW\\'D' ] = [ { value: 'HOW', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'How\\'d' ] = [ { value: 'How', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'how\\'ll' ] = [ { value: 'how', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'HOW\\'LL' ] = [ { value: 'HOW', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'How\\'ll' ] = [ { value: 'How', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'how\\'re' ] = [ { value: 'how', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'HOW\\'RE' ] = [ { value: 'HOW', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'How\\'re' ] = [ { value: 'How', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'there\\'ve' ] = [ { value: 'there', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THERE\\'VE' ] = [ { value: 'THERE', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'There\\'ve' ] = [ { value: 'There', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'there\\'d' ] = [ { value: 'there', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'THERE\\'D' ] = [ { value: 'THERE', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'There\\'d' ] = [ { value: 'There', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'there\\'ll' ] = [ { value: 'there', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'THERE\\'LL' ] = [ { value: 'THERE', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'There\\'ll' ] = [ { value: 'There', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'there\\'re' ] = [ { value: 'there', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'THERE\\'RE' ] = [ { value: 'THERE', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'There\\'re' ] = [ { value: 'There', tag: word }, { value: '\\'re', tag: word } ];\n\ncontractions[ 'that\\'ve' ] = [ { value: 'that', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THAT\\'VE' ] = [ { value: 'THAT', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'That\\'ve' ] = [ { value: 'That', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'that\\'d' ] = [ { value: 'that', tag: word }, { value: '\\'d', tag: word } ];\ncontractions[ 'THAT\\'D' ] = [ { value: 'THAT', tag: word }, { value: '\\'D', tag: word } ];\ncontractions[ 'That\\'d' ] = [ { value: 'That', tag: word }, { value: '\\'d', tag: word } ];\n\ncontractions[ 'that\\'ll' ] = [ { value: 'that', tag: word }, { value: '\\'ll', tag: word } ];\ncontractions[ 'THAT\\'LL' ] = [ { value: 'THAT', tag: word }, { value: '\\'LL', tag: word } ];\ncontractions[ 'That\\'ll' ] = [ { value: 'That', tag: word }, { value: '\\'ll', tag: word } ];\n\ncontractions[ 'that\\'re' ] = [ { value: 'that', tag: word }, { value: '\\'re', tag: word } ];\ncontractions[ 'THAT\\'RE' ] = [ { value: 'THAT', tag: word }, { value: '\\'RE', tag: word } ];\ncontractions[ 'That\\'re' ] = [ { value: 'That', tag: word }, { value: '\\'re', tag: word } ];\n\n// Let us!\ncontractions[ 'let\\'s' ] = [ { value: 'let', tag: word }, { value: '\\'s', tag: word } ];\ncontractions[ 'LET\\'S' ] = [ { value: 'THAT', tag: word }, { value: '\\'S', tag: word } ];\ncontractions[ 'Let\\'s' ] = [ { value: 'Let', tag: word }, { value: '\\'s', tag: word } ];\n\ncontractions[ 'could\\'ve' ] = [ { value: 'could', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'COULD\\'VE' ] = [ { value: 'COULD', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Could\\'ve' ] = [ { value: 'Could', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'should\\'ve' ] = [ { value: 'should', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHOULD\\'VE' ] = [ { value: 'SHOULD', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Should\\'ve' ] = [ { value: 'Should', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'would\\'ve' ] = [ { value: 'would', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WOULD\\'VE' ] = [ { value: 'WOULD', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Would\\'ve' ] = [ { value: 'Would', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'i\\'ll\\'ve' ] = [ { value: 'i', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'I\\'LL\\'VE' ] = [ { value: 'I', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'I\\'ll\\'ve' ] = [ { value: 'I', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'ll\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'LL\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'ll\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'they\\'ll\\'ve' ] = [ { value: 'they', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THEY\\'LL\\'VE' ] = [ { value: 'THEY', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'They\\'ll\\'ve' ] = [ { value: 'They', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'it\\'ll\\'ve' ] = [ { value: 'it', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'IT\\'LL\\'VE' ] = [ { value: 'IT', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'It\\'ll\\'ve' ] = [ { value: 'It', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'he\\'ll\\'ve' ] = [ { value: 'he', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'HE\\'LL\\'VE' ] = [ { value: 'HE', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'He\\'ll\\'ve' ] = [ { value: 'He', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'she\\'ll\\'ve' ] = [ { value: 'she', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHE\\'LL\\'VE' ] = [ { value: 'SHE', tag: word }, { value: '\\'LL', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'She\\'ll\\'ve' ] = [ { value: 'She', tag: word }, { value: '\\'ll', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'shouldn\\'t\\'ve' ] = [ { value: 'should', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHOULDN\\'T\\'VE' ] = [ { value: 'SHOULD', tag: word }, { value: 'N\\'T', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Shouldn\\'t\\'ve' ] = [ { value: 'Should', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'couldn\\'t\\'ve' ] = [ { value: 'could', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'COULDN\\'T\\'VE' ] = [ { value: 'COULD', tag: word }, { value: 'N\\'T', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Couldn\\'t\\'ve' ] = [ { value: 'Could', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'wouldn\\'t\\'ve' ] = [ { value: 'would', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'WOULDN\\'T\\'VE' ] = [ { value: 'WOULD', tag: word }, { value: 'N\\'T', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'Wouldn\\'t\\'ve' ] = [ { value: 'Would', tag: word }, { value: 'n\\'t', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'i\\'d\\'ve' ] = [ { value: 'i', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'I\\'D\\'VE' ] = [ { value: 'I', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'I\\'d\\'ve' ] = [ { value: 'I', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'d\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'D\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'d\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'he\\'d\\'ve' ] = [ { value: 'he', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'HE\\'D\\'VE' ] = [ { value: 'HE', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'He\\'d\\'ve' ] = [ { value: 'He', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'she\\'d\\'ve' ] = [ { value: 'she', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'SHE\\'D\\'VE' ] = [ { value: 'SHE', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'She\\'d\\'ve' ] = [ { value: 'She', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'you\\'d\\'ve' ] = [ { value: 'you', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'YOU\\'D\\'VE' ] = [ { value: 'YOU', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'You\\'d\\'ve' ] = [ { value: 'You', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'they\\'d\\'ve' ] = [ { value: 'they', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THEY\\'D\\'VE' ] = [ { value: 'THEY', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'They\\'d\\'ve' ] = [ { value: 'They', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'there\\'d\\'ve' ] = [ { value: 'there', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'THERE\\'D\\'VE' ] = [ { value: 'THERE', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'There\\'d\\'ve' ] = [ { value: 'There', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\ncontractions[ 'it\\'d\\'ve' ] = [ { value: 'it', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\ncontractions[ 'IT\\'D\\'VE' ] = [ { value: 'IT', tag: word }, { value: '\\'D', tag: word }, { value: '\\'VE', tag: word } ];\ncontractions[ 'It\\'d\\'ve' ] = [ { value: 'It', tag: word }, { value: '\\'d', tag: word }, { value: '\\'ve', tag: word } ];\n\nmodule.exports = contractions;\n","//     wink-tokenizer\n//     Multilingual tokenizer that automatically tags each token with its type.\n//\n//     Copyright (C) 2017-20  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-tokenizer”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar emojiRegex = require( 'emoji-regex' );\nvar contractions = require( './eng-contractions.js' );\nvar rgxSpaces = /\\s+/g;\n// Ordinals only for Latin like 1st, 2nd or 12th or 33rd.\nvar rgxOrdinalL1 = /1\\dth|[04-9]th|1st|2nd|3rd|[02-9]1st|[02-9]2nd|[02-9]3rd|[02-9][04-9]th|\\d+\\d[04-9]th|\\d+\\d1st|\\d+\\d2nd|\\d+\\d3rd/g;\n// Apart from detecting pure integers or decimals, also detect numbers containing\n// `. - / ,` so that dates, ip address, fractions and things like codes or part\n// numbers are also detected as numbers only. These regex will therefore detected\n// 8.8.8.8 or 12-12-1924 or 1,1,1,1.00 or 1/4 or 1/4/66/777 as numbers.\n// Latin-1 Numbers.\nvar rgxNumberL1 = /\\d+\\/\\d+|\\d(?:[\\.,-\\/]?\\d)*(?:\\.\\d+)?/g;\n// Devanagari Numbers.\nvar rgxNumberDV = /[\\u0966-\\u096F]+\\/[\\u0966-\\u096F]+|[\\u0966-\\u096F](?:[\\.,-\\/]?[\\u0966-\\u096F])*(?:\\.[\\u0966-\\u096F]+)?/g;\nvar rgxMention = /@\\w+/g;\n// Latin-1 Hashtags.\nvar rgxHashtagL1 = /#[a-z][a-z0-9]*/gi;\n// Devanagari Hashtags; include Latin-1 as well.\nvar rgxHashtagDV = /#[\\u0900-\\u0963\\u0970-\\u097F][\\u0900-\\u0963\\u0970-\\u097F\\u0966-\\u096F0-9]*/gi;\n// EMail is EN character set.\nvar rgxEmail = /[-!#$%&'*+\\/=?^\\w{|}~](?:\\.?[-!#$%&'*+\\/=?^\\w`{|}~])*@[a-z0-9](?:-?\\.?[a-z0-9])*(?:\\.[a-z](?:-?[a-z0-9])*)+/gi;\n// Bitcoin, Ruble, Indian Rupee, Other Rupee, Dollar, Pound, Yen, Euro, Wong.\nvar rgxCurrency = /[₿₽₹₨$£¥€₩]/g;\n// These include both the punctuations: Latin-1 & Devanagari.\nvar rgxPunctuation = /[’'‘’`“”\"\\[\\]\\(\\){}…,\\.!;\\?\\-:\\u0964\\u0965]/g;\nvar rgxQuotedPhrase = /\"[^\"]*\"/g;\n// NOTE: URL will support only EN character set for now.\nvar rgxURL = /(?:https?:\\/\\/)(?:[\\da-z\\.-]+)\\.(?:[a-z\\.]{2,6})(?:[\\/\\w\\.\\-\\?#=]*)*\\/?/gi;\nvar rgxEmoji = emojiRegex();\nvar rgxEmoticon = /:-?[dps\\*\\/\\[\\]{}\\(\\)]|;-?[/(/)d]|<3/gi;\nvar rgxTime = /(?:\\d|[01]\\d|2[0-3]):?(?:[0-5][0-9])?\\s?(?:[ap]\\.?m\\.?|hours|hrs)/gi;\n// Inlcude [Latin-1 Supplement Unicode Block](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block))\nvar rgxWordL1 = /[a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF][a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u00FF']*/gi;\n// Define [Devanagari Unicode Block](https://unicode.org/charts/PDF/U0900.pdf)\nvar rgxWordDV = /[\\u0900-\\u094F\\u0951-\\u0963\\u0970-\\u097F]+/gi;\n// Symbols go here; including Om.\nvar rgxSymbol = /[\\u0950~@#%\\^\\+=\\*\\|\\/<>&]/g;\n// For detecting if the word is a potential contraction.\nvar rgxContraction = /'/;\n// Singular & Plural possessive\nvar rgxPosSingular = /([a-z]+)('s)$/i;\nvar rgxPosPlural = /([a-z]+s)(')$/i;\n// Regexes and their categories; used for tokenizing via match/split. The\n// sequence is *critical* for correct tokenization.\nvar rgxsMaster = [\n  { regex: rgxQuotedPhrase, category: 'quoted_phrase' },\n  { regex: rgxURL, category: 'url' },\n  { regex: rgxEmail, category: 'email' },\n  { regex: rgxMention, category: 'mention' },\n  { regex: rgxHashtagL1, category: 'hashtag' },\n  { regex: rgxHashtagDV, category: 'hashtag' },\n  { regex: rgxEmoji, category: 'emoji' },\n  { regex: rgxEmoticon, category: 'emoticon' },\n  { regex: rgxTime, category: 'time' },\n  { regex: rgxOrdinalL1, category: 'ordinal' },\n  { regex: rgxNumberL1, category: 'number' },\n  { regex: rgxNumberDV, category: 'number' },\n  { regex: rgxCurrency, category: 'currency' },\n  { regex: rgxWordL1, category: 'word' },\n  { regex: rgxWordDV, category: 'word' },\n  { regex: rgxPunctuation, category: 'punctuation' },\n  { regex: rgxSymbol, category: 'symbol' }\n];\n\n// Used to generate finger print from the tokens.\n// NOTE: this variable is being reset in `defineConfig()`.\nvar fingerPrintCodes = {\n  emoticon: 'c',\n  email: 'e',\n  emoji: 'j',\n  hashtag: 'h',\n  mention: 'm',\n  number: 'n',\n  ordinal: 'o',\n  quoted_phrase: 'q', // eslint-disable-line camelcase\n  currency: 'r',\n  // symbol: 's',\n  time: 't',\n  url: 'u',\n  word: 'w',\n  alien: 'z'\n};\n\n// ### tokenizer\n/**\n *\n * Creates an instance of {@link Tokenizer}.\n *\n * @return {Tokenizer} object conatining set of API methods for tokenizing a sentence\n * and defining configuration, plugin etc.\n * @example\n * // Load wink tokenizer.\n * var tokenizer = require( 'wink-tokenizer' );\n * // Create your instance of wink tokenizer.\n * var myTokenizer = tokenizer();\n*/\nvar tokenizer = function () {\n  // Default configuration: most comprehensive tokenization. Make deep copy!\n  var rgxs = rgxsMaster.slice( 0 );\n  // The result of last call to `tokenize()` is retained here.\n  var finalTokens = [];\n  // Returned!\n\n  /**\n   * @classdesc Tokenizer class\n   * @class Tokenizer\n   * @hideconstructor\n   */\n  var methods = Object.create( null );\n\n  // ### manageContraction\n  /**\n   *\n   * Splits a contractions into words by first trying a lookup in strandard\n   * `contractions`; if the lookup fails, it checks for possessive in `'s` or\n   * `s'` forms and separates the possesive part from the word. Otherwise the\n   * contraction is treated as a normal word and no splitting occurs.\n   *\n   * @param {string} word that could be a potential conraction.\n   * @param {object[]} tokens where the outcome is pushed.\n   * @return {object[]} updated tokens according to the `word.`\n   * @private\n  */\n  var manageContraction = function ( word, tokens ) {\n    var ct = contractions[ word ];\n    var matches;\n    if ( ct === undefined ) {\n      // Try possesive of sigular & plural forms\n      matches = word.match( rgxPosSingular );\n      if ( matches ) {\n        tokens.push( { value: matches[ 1 ], tag: 'word' } );\n        tokens.push( { value: matches[ 2 ], tag: 'word' } );\n      } else {\n        matches = word.match( rgxPosPlural );\n        if ( matches ) {\n          tokens.push( { value: matches[ 1 ], tag: 'word' } );\n          tokens.push( { value: matches[ 2 ], tag: 'word' } );\n        } else tokens.push( { value: word, tag: 'word' } );\n      }\n    } else {\n      // Manage via lookup; ensure cloning!\n      tokens.push( Object.assign( {}, ct[ 0 ] ) );\n      tokens.push( Object.assign( {}, ct[ 1 ] ) );\n      if ( ct[ 2 ] ) tokens.push( Object.assign( {}, ct[ 2 ] ) );\n    }\n    return tokens;\n  }; // manageContraction()\n\n  // ### tokenizeTextUnit\n  /**\n   *\n   * Attempts to tokenize the input `text` using the `rgxSplit`. The tokenization\n   * is carried out by combining the regex matches and splits in the right sequence.\n   * The matches are the *real tokens*, whereas splits are text units that are\n   * tokenized in later rounds! The real tokens (i.e. matches) are pushed as\n   * `object` and splits as `string`.\n   *\n   * @param {string} text unit that is to be tokenized.\n   * @param {object} rgxSplit object containing the regex and it's category.\n   * @return {array} of tokens.\n   * @private\n  */\n  var tokenizeTextUnit = function ( text, rgxSplit ) {\n    // Regex matches go here; note each match is a token and has the same tag\n    // as of regex's category.\n    var matches = text.match( rgxSplit.regex );\n    // Balance is \"what needs to be tokenized\".\n    var balance = text.split( rgxSplit.regex );\n    // The result, in form of combination of tokens & matches, is captured here.\n    var tokens = [];\n    // The tag;\n    var tag = rgxSplit.category;\n    // Helper variables.\n    var aword,\n        i,\n        imax,\n        k = 0,\n        t;\n\n    // Combine tokens & matches in the following pattern [ b0 m0 b1 m1 ... ]\n    matches = ( matches ) ? matches : [];\n    for ( i = 0, imax = balance.length; i < imax; i += 1 ) {\n      t = balance[ i ];\n      t = t.trim();\n      if ( t ) tokens.push( t );\n      if ( k < matches.length ) {\n        if ( tag === 'word' ) {\n          // Tag type `word` token may have a contraction.\n          aword = matches[ k ];\n          if ( rgxContraction.test( aword ) ) {\n            tokens = manageContraction( aword, tokens );\n          } else {\n            // Means there is no contraction.\n            tokens.push( { value: aword, tag: tag } );\n          }\n        } else tokens.push( { value: matches[ k ], tag: tag } );\n      }\n      k += 1;\n    }\n\n    return ( tokens );\n  }; // tokenizeTextUnit()\n\n  // ### tokenizeTextRecursively\n  /**\n   *\n   * Tokenizes the input text recursively using the array of `regexes` and then\n   * the `tokenizeTextUnit()` function. If (or whenever) the `regexes` becomes\n   * empty, it simply splits the text on non-word characters instead of using\n   * the `tokenizeTextUnit()` function.\n   *\n   * @param {string} text unit that is to be tokenized.\n   * @param {object} regexes object containing the regex and it's category.\n   * @return {undefined} nothing!\n   * @private\n  */\n  var tokenizeTextRecursively = function ( text, regexes ) {\n    var sentence = text.trim();\n    var tokens = [];\n    var i, imax;\n\n    if ( !regexes.length ) {\n      // No regex left, split on `spaces` and tag every token as **alien**.\n      text.split( rgxSpaces ).forEach( function ( tkn ) {\n        finalTokens.push( { value: tkn.trim(), tag: 'alien' } );\n      } );\n      return;\n    }\n\n    var rgx = regexes[ 0 ];\n    tokens = tokenizeTextUnit( sentence, rgx );\n\n    for ( i = 0, imax = tokens.length; i < imax; i += 1 ) {\n      if ( typeof tokens[ i ] === 'string' ) {\n        // Strings become candidates for further tokenization.\n        tokenizeTextRecursively( tokens[ i ], regexes.slice( 1 ) );\n      } else {\n        finalTokens.push( tokens[ i ] );\n      }\n    }\n  }; // tokenizeTextRecursively()\n\n  // ### defineConfig\n  /**\n   *\n   * Defines the configuration in terms of the types of token that will be\n   * extracted by [`tokenize()`](#tokenize) method. Note by default, all types\n   * of tokens will be detected and tagged automatically.\n   *\n   * @method Tokenizer#defineConfig\n   * @param {object} config It defines 0 or more properties from the list of\n   * **14** properties. A true value for a property ensures tokenization\n   * for that type of text; whereas false value will mean that the tokenization of that\n   * type of text will not be attempted. It also **resets** the effect of any previous\n   * call(s) to the [`addRegex()`](#addregex) API.\n   *\n   * *An empty config object is equivalent to splitting on spaces. Whatever tokens\n   * are created like this are tagged as **alien** and **`z`** is the\n   * [finger print](#gettokensfp) code of this token type.*\n   *\n   * The table below gives the name of each property and it's description including\n   * examples. The character with in paranthesis is the [finger print](#gettokensfp) code for the\n   * token of that type.\n   * @param {boolean} [config.currency=true] such as **$** or **£** symbols (**`r`**)\n   * @param {boolean} [config.email=true] for example **john@acme.com** or **superman1@gmail.com** (**`e`**)\n   * @param {boolean} [config.emoji=true] any standard unicode emojis e.g. 😊 or 😂 or 🎉 (**`j`**)\n   * @param {boolean} [config.emoticon=true] common emoticons such as **`:-)`** or **`:D`** (**`c`**)\n   * @param {boolean} [config.hashtag=true] hash tags such as **`#happy`** or **`#followme`** (**`h`**)\n   * @param {boolean} [config.number=true] any integer, decimal number, fractions such as **19**, **2.718**\n   * or **1/4** and numerals containing \"**`, - / .`**\", for example 12-12-1924 (**`n`**)\n   * @param {boolean} [config.ordinal=true] ordinals like **1st**, **2nd**, **3rd**, **4th** or **12th** or **91st** (**`o`**)\n   * @param {boolean} [config.punctuation=true] common punctuation such as **`?`** or **`,`**\n   * ( token becomes fingerprint )\n   * @param {boolean} [config.quoted_phrase=false] any **\"quoted text\"** in the sentence. _Note: its default value is **false**._ (**`q`**)\n   * @param {boolean} [config.symbol=true] for example **`~`** or **`+`** or **`&`** or **`%`** or **`/`** ( token becomes fingerprint )\n   * @param {boolean} [config.time=true] common representation of time such as **4pm** or **16:00 hours** (**`t`**)\n   * @param {boolean} [config.mention=true] **@mention**  as in github or twitter (**`m`**)\n   * @param {boolean} [config.url=true] URL such as **https://github.com** (**`u`**)\n   * @param {boolean} [config.word=true] word such as **faster** or **résumé** or **prévenir** (**`w`**)\n   * @return {number} number of properties set to true from the list of above 13.\n   * @example\n   * // Do not tokenize & tag @mentions.\n   * var myTokenizer.defineConfig( { mention: false } );\n   * // -> 13\n   * // Only tokenize words as defined above.\n   * var myTokenizer.defineConfig( {} );\n   * // -> 0\n  */\n  var defineConfig = function ( config ) {\n    if ( typeof config === 'object' && Object.keys( config ).length ) {\n      rgxs = rgxsMaster.filter( function ( rgx ) {\n        // Config for the Category of `rgx`.\n        var cc = config[ rgx.category ];\n        // Means `undefined` & `null` values are taken as true; otherwise\n        // standard **truthy** and **falsy** interpretation applies!!\n        return ( cc === undefined || cc === null || !!cc );\n      } );\n    } else rgxs = [];\n    // Count normalized length i.e. ignore multi-script entries.\n    const uniqueCats = Object.create( null );\n    rgxs.forEach( function ( rgx ) {\n      uniqueCats[ rgx.category ] = true;\n    } );\n    // Reset the `fingerPrintCodes` variable.\n    fingerPrintCodes = {\n      emoticon: 'c',\n      email: 'e',\n      emoji: 'j',\n      hashtag: 'h',\n      mention: 'm',\n      number: 'n',\n      ordinal: 'o',\n      quoted_phrase: 'q', // eslint-disable-line camelcase\n      currency: 'r',\n      // symbol: 's',\n      time: 't',\n      url: 'u',\n      word: 'w',\n      alien: 'z'\n    };\n    return ( ( Object.keys( uniqueCats ) ).length );\n  }; // defineConfig()\n\n  // ### tokenize\n  /**\n   *\n   * Tokenizes the input `sentence` using the configuration specified via\n   * [`defineConfig()`](#defineconfig).\n   * Common contractions and possessive nouns are split into 2 separate tokens;\n   * for example **I'll** splits as `'I'` and `'\\'ll'` or **won't** splits as\n   * `'wo'` and `'n\\'t'`.\n   *\n   * @method Tokenizer#tokenize\n   * @param {string} sentence the input sentence.\n   * @return {object[]} of tokens; each one of them is an object with 2-keys viz.\n   * `value` and its `tag` identifying the type of the token.\n   * @example\n   * var s = 'For detailed API docs, check out http://winkjs.org/wink-regression-tree/ URL!';\n   * myTokenizer.tokenize( s );\n   * // -> [ { value: 'For', tag: 'word' },\n   * //      { value: 'detailed', tag: 'word' },\n   * //      { value: 'API', tag: 'word' },\n   * //      { value: 'docs', tag: 'word' },\n   * //      { value: ',', tag: 'punctuation' },\n   * //      { value: 'check', tag: 'word' },\n   * //      { value: 'out', tag: 'word' },\n   * //      { value: 'http://winkjs.org/wink-regression-tree/', tag: 'url' },\n   * //      { value: 'URL', tag: 'word' },\n   * //      { value: '!', tag: 'punctuation' } ]\n  */\n  var tokenize = function ( sentence ) {\n    finalTokens = [];\n    tokenizeTextRecursively( sentence, rgxs );\n    return finalTokens;\n  }; // tokenize()\n\n  // ### getTokensFP\n  /**\n   *\n   * Returns the finger print of the tokens generated by the last call to\n   * [`tokenize()`](#tokenize). A finger print is a string created by sequentially\n   * joining the unique code of each token's type. Refer to table given under\n   * [`defineConfig()`](#defineconfig) for values of these codes.\n   *\n   * A finger print is extremely useful in spotting patterns present in the sentence\n   * using `regexes`, which is otherwise a complex and time consuming task.\n   *\n   * @method Tokenizer#getTokensFP\n   * @return {string} finger print of tokens generated by the last call to `tokenize()`.\n   * @example\n   * // Generate finger print of sentence given in the previous example\n   * // under tokenize().\n   * myTokenizer.getTokensFP();\n   * // -> 'wwww,wwuw!'\n  */\n  var getTokensFP = function () {\n    var fp = [];\n    finalTokens.forEach( function ( t ) {\n      fp.push( ( fingerPrintCodes[ t.tag ] ) ? fingerPrintCodes[ t.tag ] : t.value );\n    } );\n    return fp.join( '' );\n  }; // getFingerprint()\n\n  // ### addTag\n  var addTag = function (name, fingerprintCode) {\n    if (fingerPrintCodes[name]) {\n      throw new Error( 'Tag ' + name + ' already exists' );\n    }\n\n    fingerPrintCodes[name] = fingerprintCode;\n  }; // addTag()\n\n  // ### addRegex\n  /**\n   * Adds a regex for parsing a new type of token. This regex can either be mapped\n   * to an existing tag or it allows creation of a new tag along with its finger print.\n   * The uniqueness of the [finger prints](#defineconfig) have to ensured by the user.\n   *\n   * *The added regex(s) will supersede the internal parsing.*\n   *\n   * @method Tokenizer#addRegex\n   * @param {RegExp} regex the new regular expression.\n   * @param {string} tag tokens matching the `regex` will be assigned this tag.\n   * @param {string} [fingerprintCode=undefined] required if adding a new\n   * tag; ignored if using an existing tag.\n   * @return {void} nothing!\n   * @example\n   * // Adding a regex for an existing tag\n   * myTokenizer.addRegex( /\\(oo\\)/gi, 'emoticon' );\n   * myTokenizer.tokenize( '(oo) Hi!' )\n   * // -> [ { value: '(oo)', tag: 'emoticon' },\n   * //      { value: 'Hi', tag: 'word' },\n   * //      { value: '!', tag: 'punctuation' } ]\n   *\n   * // Adding a regex to parse a new token type\n   * myTokenizer.addRegex( /hello/gi, 'greeting', 'g' );\n   * myTokenizer.tokenize( 'hello, how are you?' );\n   * // -> [ { value: 'hello', tag: 'greeting' },\n   * //      { value: ',', tag: 'punctuation' },\n   * //      { value: 'how', tag: 'word' },\n   * //      { value: 'are', tag: 'word' },\n   * //      { value: 'you', tag: 'word' },\n   * //      { value: '?', tag: 'punctuation' } ]\n   * // Notice how \"hello\" is now tagged as \"greeting\" and not as \"word\".\n   *\n   * // Using definConfig will reset the above!\n   * myTokenizer.defineConfig( { word: true } );\n   * myTokenizer.tokenize( 'hello, how are you?' );\n   * // -> [ { value: 'hello', tag: 'word' },\n   * //      { value: ',', tag: 'punctuation' },\n   * //      { value: 'how', tag: 'word' },\n   * //      { value: 'are', tag: 'word' },\n   * //      { value: 'you', tag: 'word' },\n   * //      { value: '?', tag: 'punctuation' } ]\n  */\n\n  var addRegex = function (regex, tag, fingerprintCode) {\n    if (!fingerPrintCodes[tag] && !fingerprintCode) {\n      throw new Error( 'Tag ' + tag + ' doesn\\'t exist; Provide a \\'fingerprintCode\\' to add it as a tag.' );\n    } else if (!fingerPrintCodes[tag]) {\n      addTag(tag, fingerprintCode);\n    }\n\n    rgxs.unshift( { regex: regex, category: tag } );\n  }; // addRegex()\n\n  // Set quoted_phrase as false becuase mostly it is not required.\n  defineConfig( { quoted_phrase: false } ); // eslint-disable-line camelcase\n  methods.defineConfig = defineConfig;\n  methods.tokenize = tokenize;\n  methods.getTokensFP = getTokensFP;\n  methods.addTag = addTag;\n  methods.addRegex = addRegex;\n  return methods;\n};\n\nmodule.exports = tokenizer;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar winkTokenize = require( 'wink-tokenizer' )().tokenize;\n\n// ## string\n\n// ### tokenize\n/**\n *\n * Tokenizes the input `sentence` according to the value of `detailed` flag.\n * Any occurance of `...` in the `sentence` is\n * converted to ellipses. In `detailed = true` mode, it\n * tags every token with its type; the supported tags are currency, email,\n * emoji, emoticon, hashtag, number, ordinal, punctuation, quoted_phrase, symbol,\n * time, mention, url, and word.\n *\n * @alias string#tokenize\n * @param {string} sentence the input string.\n * @param {boolean} [detailed=false] if true, each token is a object cotaining\n * `value` and `tag` of each token; otherwise each token is a string. It's default\n * value of **false** ensures compatibility with previous version.\n * @return {(string[]|object[])} an array of strings if `detailed` is false otherwise\n * an array of objects.\n * @example\n * tokenize( \"someone's wallet, isn't it? I'll return!\" );\n * // -> [ 'someone', '\\'s', 'wallet', ',', 'is', 'n\\'t', 'it', '?',\n * //      'I', '\\'ll', 'return', '!' ]\n *\n * tokenize( 'For details on wink, check out http://winkjs.org/ URL!', true );\n * // -> [ { value: 'For', tag: 'word' },\n * //      { value: 'details', tag: 'word' },\n * //      { value: 'on', tag: 'word' },\n * //      { value: 'wink', tag: 'word' },\n * //      { value: ',', tag: 'punctuation' },\n * //      { value: 'check', tag: 'word' },\n * //      { value: 'out', tag: 'word' },\n * //      { value: 'http://winkjs.org/', tag: 'url' },\n * //      { value: 'URL', tag: 'word' },\n * //      { value: '!', tag: 'punctuation' } ]\n */\nvar tokenize = function ( sentence, detailed ) {\n  var tokens = winkTokenize( sentence.replace( '...', '…' ) );\n  var i;\n  if ( !detailed ) {\n    for ( i = 0; i < tokens.length; i += 1 ) tokens[ i ] = tokens[ i ].value;\n  }\n\n  return tokens;\n}; // tokenize()\n\nmodule.exports = tokenize;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n/* eslint no-underscore-dangle: \"off\" */\nvar rgx = Object.create( null );\n// Remove repeating characters.\nrgx.repeatingChars = /([^c])\\1/g;\n// Drop first character from character pairs, if found in the beginning.\nrgx.kngnPairs = /^(kn|gn|pn|ae|wr)/;\n// Drop vowels that are not found in the beginning.\nrgx.__vowels = /(?!^)[aeiou]/g;\n// Replaces `ough` in the end by 'f'\nrgx.ough = /ough$/;\n// Replace following 3 instances of `dg` by `j`.\nrgx.dge = /dge/g;\nrgx.dgi = /dgi/g;\nrgx.dgy = /dgy/g;\n// Replace `sch` by `sk`.\nrgx.sch = /sch/g;\n// Drop `c` in `sci, sce, scy`.\nrgx.sci = /sci/g;\nrgx.sce = /sce/g;\nrgx.scy = /scy/g;\n// Make 'sh' out of `tio & tia`.\nrgx.tio = /tio/g;\nrgx.tia = /tia/g;\n// `t` is silent in `tch`.\nrgx.tch = /tch/g;\n// Drop `b` in the end if preceeded by `m`.\nrgx.mb_ = /mb$/;\n// These are pronounced as `k`.\nrgx.cq = /cq/g;\nrgx.ck = /ck/g;\n// Here `c` sounds like `s`\nrgx.ce = /ce/g;\nrgx.ci = /ci/g;\nrgx.cy = /cy/g;\n// And this `f`.\nrgx.ph = /ph/g;\n// The `sh` finally replaced by `x`.\nrgx.sh = /sh|sio|sia/g;\n// This is open rgx - TODO: need to finalize.\nrgx.vrnotvy = /([aeiou])(r)([^aeiouy])/g;\n// `th` sounds like theta - make it 0.\nrgx.th = /th/g;\n// `c` sounds like `k` except when it is followed by `h`.\nrgx.cnoth = /(c)([^h])/g;\n// Even `q` sounds like `k`.\nrgx.q = /q/g;\n// The first `x` sounds like `s`.\nrgx._x = /^x/;\n// Otherwise `x` is more like `ks`.\nrgx.x = /x/g;\n// Drop `y` if not followed by a vowel or appears in the end.\nrgx.ynotv = /(y)([^aeiou])/g;\nrgx.y_ = /y$/;\n// `z` is `s`.\nrgx.z = /z/g;\n\n// Export rgx.\nmodule.exports = rgx;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar phnrgx = require( './phonetize_regexes.js' );\n/* eslint no-underscore-dangle: \"off\" */\n\n// ## string\n\n// ### phonetize\n/**\n *\n * Phonetizes the input string using an algorithmic adaptation of Metaphone; It\n * is not an exact implementation of Metaphone.\n *\n * @alias string#phonetize\n * @param {string} word the input word.\n * @return {string} phonetic code of `word`.\n * @example\n * phonetize( 'perspective' );\n * // -> 'prspktv'\n * phonetize( 'phenomenon' );\n * // -> 'fnmnn'\n */\nvar phonetize = function ( word ) {\n  var p = word.toLowerCase();\n  // Remove repeating letters.\n  p = p.replace( phnrgx.repeatingChars, '$1');\n  // Drop first character of `kgknPairs`.\n  if ( phnrgx.kngnPairs.test( p ) ) {\n    p = p.substr( 1, p.length - 1 );\n  }\n  // Run Regex Express now!\n  p = p\n      // Change `ough` in the end as `f`,\n      .replace( phnrgx.ough, 'f' )\n      // Change `dg` to `j`, in `dge, dgi, dgy`.\n      .replace( phnrgx.dge, 'je' )\n      .replace( phnrgx.dgi, 'ji' )\n      .replace( phnrgx.dgy, 'jy' )\n      // Change `c` to `k` in `sch`\n      .replace( phnrgx.sch, 'sk' )\n      // Drop `c` in `sci, sce, scy`.\n      .replace( phnrgx.sci, 'si' )\n      .replace( phnrgx.sce, 'se' )\n      .replace( phnrgx.scy, 'sy' )\n      // Drop `t` if it appears as `tch`.\n      .replace( phnrgx.tch, 'ch' )\n      // Replace `tio & tia` by `sh`.\n      .replace( phnrgx.tio, 'sh' )\n      .replace( phnrgx.tia, 'sh' )\n      // Drop `b` if it appears as `mb` in the end.\n      .replace( phnrgx.mb_, 'm' )\n      // Drop `r` if it preceeds a vowel and not followed by a vowel or `y`\n      // .replace( rgx.vrnotvy, '$1$3' )\n      // Replace `c` by `s` in `ce, ci, cy`.\n      .replace( phnrgx.ce, 'se' )\n      .replace( phnrgx.ci, 'si' )\n      .replace( phnrgx.cy, 'sy' )\n      // Replace `cq` by `q`.\n      .replace( phnrgx.cq, 'q' )\n      // Replace `ck` by `k`.\n      .replace( phnrgx.ck, 'k' )\n      // Replace `ph` by `f`.\n      .replace( phnrgx.ph, 'f' )\n      // Replace `th` by `0` (theta look alike!).\n      .replace( phnrgx.th, '0' )\n      // Replace `c` by `k` if it is not followed by `h`.\n      .replace( phnrgx.cnoth, 'k$2' )\n      // Replace `q` by `k`.\n      .replace( phnrgx.q, 'k' )\n      // Replace `x` by `s` if it appears in the beginning.\n      .replace( phnrgx._x, 's' )\n      // Other wise replace `x` by `ks`.\n      .replace( phnrgx.x, 'ks' )\n      // Replace `sh, sia, sio` by `x`. Needs to be done post `x` processing!\n      .replace( phnrgx.sh, 'x' )\n      // Drop `y` if it is now followed by a **vowel**.\n      .replace( phnrgx.ynotv, '$2' )\n      .replace( phnrgx.y_, '' )\n      // Replace `z` by `s`.\n      .replace( phnrgx.z, 's' )\n      // Drop all **vowels** excluding the first one.\n      .replace( phnrgx.__vowels, '' );\n\n      return ( p );\n}; // phonetize()\n\nmodule.exports = phonetize;\n","//     wink-distance\n//     Distance functions for Bag of Words, Strings,\n//     Vectors and more.\n//\n//     Copyright (C) 2017-18  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-distance”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n// Soundex Code for alphabets.\n/* eslint-disable object-property-newline */\nvar soundexMap = {\n  A: 0, E: 0, I: 0, O: 0, U: 0, Y: 0,\n  B: 1, F: 1, P: 1, V: 1,\n  C: 2, G: 2, J: 2, K: 2, Q: 2, S: 2, X: 2, Z: 2,\n  D: 3, T: 3,\n  L: 4,\n  M: 5, N: 5,\n  R: 6\n};\n\n// ## string\n\n// ### soundex\n/**\n *\n * Produces the soundex code from the input `word`.\n *\n * @private\n * @param {string} word the input word.\n * @param {number} [maxLength=4] of soundex code to be returned.\n * @return {string} soundex code of `word`.\n * @example\n * soundex( 'Burroughs' );\n * // -> 'B620'\n * soundex( 'Burrows' );\n * // -> 'B620'\n */\nvar soundex = function ( word, maxLength ) {\n  // Upper case right in the begining.\n  var s = ( word.length ) ? word.toUpperCase() : '?';\n  var i,\n      imax = s.length;\n  // Soundex code builds here.\n  var sound = [];\n  // Helpers - `ch` is a char from `s` and `code/prevCode` are sondex codes\n  // for consonants.\n  var ch, code,\n      prevCode = 9;\n  // Use default of 4.\n  var maxLen = maxLength || 4;\n  // Iterate through every character.\n  for ( i = 0; i < imax; i += 1 ) {\n    ch = s[ i ];\n    code = soundexMap[ ch ];\n    if ( i ) {\n      // Means i is > 0.\n      // `code` is either (a) `undefined` if an unknown character is\n      // encountered including `h & w`, or (b) `0` if it is vowel, or\n      // (c) the soundex code for a consonant.\n      if ( code && code !== prevCode ) {\n        // Consonant and not adjecant duplicates!\n        sound.push( code );\n      } else if ( code !== 0 ) {\n        // Means `h or w` or an unknown character: ensure `prevCode` is\n        // remembered so that adjecant duplicates can be handled!\n        code = prevCode;\n      }\n    } else {\n      // Retain the first letter\n      sound.push( ch );\n    }\n    prevCode = code;\n  }\n  s = sound.join( '' );\n  // Always ensure minimum length of 4 characters for maxLength > 4.\n  if ( s.length < 4 ) s += '000';\n  // Return the required length.\n  return s.substr( 0, maxLen );\n}; // soundex()\n\nmodule.exports = soundex;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar sndx = require( 'wink-distance/src/soundex.js' );\n\n// ## string\n\n// ### soundex\n/**\n *\n * Produces the soundex code from the input `word`.\n *\n * @alias string#soundex\n * @param {string} word the input word.\n * @param {number} [maxLength=4] of soundex code to be returned.\n * @return {string} soundex code of `word`.\n * @example\n * soundex( 'Burroughs' );\n * // -> 'B620'\n * soundex( 'Burrows' );\n * // -> 'B620'\n */\nvar soundex = function ( word, maxLength ) {\n  return sndx( word, maxLength );\n}; // soundex()\n\nmodule.exports = soundex;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar porter2Stemmer = require( 'wink-porter2-stemmer' );\n\n// ## tokens\n\n// ### stem\n/**\n *\n * Stems input tokens using Porter Stemming Algorithm Version 2.\n *\n * @alias tokens#stem\n * @param {string[]} tokens the input tokens.\n * @return {string[]} stemmed tokens.\n * @example\n * stem( [ 'he', 'acted', 'decisively', 'today' ] );\n * // -> [ 'he', 'act', 'decis', 'today' ]\n */\nvar stem = function ( tokens ) {\n  return tokens.map( porter2Stemmer );\n}; // stem()\n\nmodule.exports = stem;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar stringPhonetize = require( './string-phonetize.js' );\n\n// ## tokens\n\n// ### phonetize\n/**\n *\n * Phonetizes input tokens using using an algorithmic adaptation of Metaphone.\n *\n * @alias tokens#phonetize\n * @param {string[]} tokens the input tokens.\n * @return {string[]} phonetized tokens.\n * @example\n * phonetize( [ 'he', 'acted', 'decisively', 'today' ] );\n * // -> [ 'h', 'aktd', 'dssvl', 'td' ]\n */\nvar phonetize = function ( tokens ) {\n  return tokens.map( stringPhonetize );\n}; // phonetize()\n\nmodule.exports = phonetize;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar stringSoundex = require( './string-soundex.js' );\n\n// ## tokens\n\n// ### soundex\n/**\n *\n * Generates the soundex coded tokens from the input tokens.\n *\n * @alias tokens#soundex\n * @param {string[]} tokens the input tokens.\n * @return {string[]} soundex coded tokens.\n * @example\n * soundex( [ 'he', 'acted', 'decisively', 'today' ] );\n * // -> [ 'H000', 'A233', 'D221', 'T300' ]\n */\nvar soundex = function ( tokens ) {\n  // Need to send `maxLength` as `undefined`.\n  return tokens.map( ( t ) => stringSoundex( t ) );\n}; // soundex()\n\nmodule.exports = soundex;\n","module.exports=[\"i\",\"me\",\"my\",\"myself\",\"we\",\"our\",\"ours\",\"ourselves\",\"you\",\"your\",\"yours\",\"yourself\",\"yourselves\",\"he\",\"him\",\"his\",\"himself\",\"she\",\"her\",\"hers\",\"herself\",\"it\",\"its\",\"itself\",\"they\",\"them\",\"their\",\"theirs\",\"themselves\",\"what\",\"which\",\"who\",\"whom\",\"this\",\"that\",\"these\",\"those\",\"am\",\"is\",\"are\",\"was\",\"were\",\"be\",\"been\",\"being\",\"have\",\"has\",\"had\",\"having\",\"do\",\"does\",\"did\",\"doing\",\"would\",\"should\",\"could\",\"ought\",\"i'm\",\"you're\",\"he's\",\"she's\",\"it's\",\"we're\",\"they're\",\"i've\",\"you've\",\"we've\",\"they've\",\"i'd\",\"you'd\",\"he'd\",\"she'd\",\"we'd\",\"they'd\",\"i'll\",\"you'll\",\"he'll\",\"she'll\",\"we'll\",\"they'll\",\"let's\",\"that's\",\"who's\",\"what's\",\"here's\",\"there's\",\"when's\",\"where's\",\"why's\",\"how's\",\"a\",\"an\",\"the\",\"and\",\"but\",\"if\",\"or\",\"because\",\"as\",\"until\",\"while\",\"of\",\"at\",\"by\",\"for\",\"with\",\"about\",\"against\",\"between\",\"into\",\"through\",\"during\",\"before\",\"after\",\"above\",\"below\",\"to\",\"from\",\"up\",\"down\",\"in\",\"out\",\"on\",\"off\",\"over\",\"under\",\"again\",\"further\",\"then\",\"once\",\"here\",\"there\",\"when\",\"where\",\"why\",\"how\",\"all\",\"any\",\"both\",\"each\",\"few\",\"more\",\"most\",\"other\",\"some\",\"such\",\"only\",\"own\",\"same\",\"so\",\"than\",\"too\",\"very\"];","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\nvar defaultStopWords = require( './dictionaries/stop_words.json' );\nvar words = require( './helper-return-words-filter.js' );\ndefaultStopWords = words( defaultStopWords );\n\n// ## tokens\n\n// ### removeWords\n/**\n *\n * Removes the stop words from the input array of tokens.\n *\n * @alias tokens#removeWords\n * @param {string[]} tokens the input tokens.\n * @param {wordsFilter} [stopWords=defaultStopWords] default stop words are\n * loaded from `stop_words.json` located under the `src/dictionaries/` directory.\n * Custom stop words can be created using [helper.returnWordsFilter ](#helperreturnwordsfilter).\n * @return {string[]} balance tokens.\n * @example\n * removeWords( [ 'this', 'is', 'a', 'cat' ] );\n * // -> [ 'cat' ]\n */\nvar removeWords = function ( tokens, stopWords ) {\n  var givenStopWords = ( stopWords || defaultStopWords );\n  return tokens.filter( givenStopWords.exclude );\n}; // removeWords()\n\nmodule.exports = removeWords;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### bagOfWords\n/**\n *\n * Generates the bag of words from the input string. By default it\n * uses `word count` as it's frequency; but if `logCounts` parameter is set to true then\n * it will use `log2( word counts + 1 )` as it's frequency. It also has an alias **`bow()`**.\n *\n * @alias tokens#bagOfWords\n * @param {string[]} tokens the input tokens.\n * @param {number} [logCounts=false] a true value flags the use of `log2( word count + 1 )`\n * instead of just `word count` as frequency.\n * @param {function} [ifn=undefined] a function to build index; it is called for\n * every **unique occurrence of word** in `tokens`; and it receives the word and the `idx`\n * as input arguments. The `build()` function of [helper.returnIndexer](#helperreturnindexer)\n * may be used as `ifn`. If `undefined` then index is not built.\n * @param {number} [idx=undefined] the index; passed as the second argument to the `ifn`\n * function.\n * @return {object} bag of words from tokens.\n * @example\n * bagOfWords( [ 'rain', 'rain', 'go', 'away' ] );\n * // -> { rain: 2, go: 1, away: 1 }\n * bow( [ 'rain', 'rain', 'go', 'away' ], true );\n * // -> { rain: 1.584962500721156, go: 1, away: 1 }\n */\nvar bagOfWords = function ( tokens, logCounts, ifn, idx ) {\n  var bow1 = Object.create( null ),\n      i, imax,\n      token,\n      words;\n  for ( i = 0, imax = tokens.length; i < imax; i += 1 ) {\n    token = tokens[ i ];\n    if ( ( typeof ifn === 'function' ) && !bow1[ token ] ) {\n        ifn( token, idx );\n    }\n    bow1[ token ] = 1 + ( bow1[ token ] || 0 );\n  }\n  if ( !logCounts ) return ( bow1 );\n  words = Object.keys( bow1 );\n  for ( i = 0, imax = words.length; i < imax; i += 1 ) {\n    // Add `1` to ensure non-zero count! (Note: log2(1) is 0)\n    bow1[ words[ i ] ] = Math.log2( bow1[ words[ i ] ] + 1 );\n  }\n  return ( bow1 );\n}; // bow()\n\nmodule.exports = bagOfWords;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## string\n\n// ### setOfWords\n/**\n *\n * Generates the set of words from the input string. It also has an alias **`sow()`**.\n *\n * @alias tokens#setOfWords\n * @param {string[]} tokens the input tokens.\n * @param {function} [ifn=undefined] a function to build index; it is called for\n * every **member word of the set **; and it receives the word and the `idx`\n * as input arguments. The `build()` function of [helper.returnIndexer](#helperreturnindexer)\n * may be used as `ifn`. If `undefined` then index is not built.\n * @param {number} [idx=undefined] the index; passed as the second argument to the `ifn`\n * function.\n * @return {set} of words from tokens.\n * @example\n * setOfWords( [ 'rain', 'rain', 'go', 'away' ] );\n * // -> Set { 'rain', 'go', 'away' }\n */\nvar setOfWords = function ( tokens, ifn, idx ) {\n  var tset = new Set( tokens );\n  if ( typeof ifn === 'function' ) {\n    tset.forEach( function ( m ) {\n        ifn( m, idx );\n    } );\n  }\n  return ( tset );\n}; // bow()\n\nmodule.exports = setOfWords;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar rgx = require( './util_regexes.js' );\n\n// ## string\n\n// ### propagateNegations\n/**\n *\n * It looks for negation tokens in the input array of tokens and propagates\n * negation to subsequent `upto` tokens by prefixing them by a `!`. It is useful\n * in handling text containing negations during tasks like similarity detection,\n * classification or search.\n *\n * @alias tokens#propagateNegations\n * @param {string[]} tokens the input tokens.\n * @param {number} [upto=2] number of tokens to be negated after the negation\n * token. Note, tokens are only negated either `upto` tokens or up to the token\n * preceeding the **`, . ; : ! ?`** punctuations.\n * @return {string[]} tokens with negation propagated.\n * @example\n * propagateNegations( [ 'mary', 'is', 'not', 'feeling', 'good', 'today' ] );\n * // -> [ 'mary', 'is', 'not', '!feeling', '!good', 'today' ]\n */\nvar propagateNegations = function ( tokens, upto ) {\n  var i, imax, j, jmax;\n  var tkns = tokens;\n  var limit = upto || 2;\n  for ( i = 0, imax = tkns.length; i < imax; i += 1 ) {\n    if ( rgx.negations.test( tkns[ i ] ) ) {\n      for ( j = i + 1, jmax = Math.min( imax, i + limit + 1 ); j < jmax; j += 1 ) {\n        // Hit a punctuation mark, break out of the loop otherwise go *upto the limit*.\n        // > TODO: promote to utilities regex, after test cases have been added.\n        if ( ( /[\\,\\.\\;\\:\\!\\?]/ ).test( tkns[ j ] ) ) break;\n        // Propoage negation: invert the token by prefixing a `!` to it.\n        tkns[ j ] = '!' + tkns[ j ];\n      }\n      i = j;\n    }\n  }\n  return tkns;\n}; // propagateNegations()\n\nmodule.exports = propagateNegations;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## tokens\n\n// ### bigrams\n/**\n *\n * Generates bigrams from the input tokens.\n *\n * @alias tokens#bigrams\n * @param {string[]} tokens the input tokens.\n * @return {string[]} the bigrams.\n * @example\n * bigrams( [ 'he', 'acted', 'decisively', 'today' ] );\n * // -> [ [ 'he', 'acted' ],\n * //      [ 'acted', 'decisively' ],\n * //      [ 'decisively', 'today' ] ]\n */\nvar bigrams = function ( tokens ) {\n  // Bigrams will be stored here.\n  var bgs = [];\n  // Helper variables.\n  var i, imax;\n  // Create bigrams.\n  for ( i = 0, imax = tokens.length - 1; i < imax; i += 1 ) {\n    bgs.push( [ tokens[ i ], tokens[ i + 1 ] ] );\n  }\n  return bgs;\n}; // bigrams()\n\nmodule.exports = bigrams;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\n\n// ## tokens\n\n// ### appendBigrams\n/**\n *\n * Generates bigrams from the input tokens and appends them to the input tokens.\n *\n * @alias tokens#appendBigrams\n * @param {string[]} tokens the input tokens.\n * @return {string[]} the input tokens appended with their bigrams.\n * @example\n * appendBigrams( [ 'he', 'acted', 'decisively', 'today' ] );\n * // -> [ 'he',\n * //      'acted',\n * //      'decisively',\n * //      'today',\n * //      'he_acted',\n * //      'acted_decisively',\n * //      'decisively_today' ]\n */\nvar appendBigrams = function ( tokens ) {\n  var i, imax;\n  for ( i = 0, imax = tokens.length - 1; i < imax; i += 1 ) {\n    tokens.push( tokens[ i ] + '_' + tokens[ i + 1 ] );\n  }\n  return tokens;\n}; // appendBigrams()\n\nmodule.exports = appendBigrams;\n","//     wink-nlp-utils\n//     NLP Functions for amplifying negations, managing elisions,\n//     creating ngrams, stems, phonetic codes to tokens and more.\n//\n//     Copyright (C) 2017-19  GRAYPE Systems Private Limited\n//\n//     This file is part of “wink-nlp-utils”.\n//\n//     Permission is hereby granted, free of charge, to any person obtaining a\n//     copy of this software and associated documentation files (the \"Software\"),\n//     to deal in the Software without restriction, including without limitation\n//     the rights to use, copy, modify, merge, publish, distribute, sublicense,\n//     and/or sell copies of the Software, and to permit persons to whom the\n//     Software is furnished to do so, subject to the following conditions:\n//\n//     The above copyright notice and this permission notice shall be included\n//     in all copies or substantial portions of the Software.\n//\n//     THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n//     OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n//     FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n//     THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n//     LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING\n//     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER\n//     DEALINGS IN THE SOFTWARE.\n\n//\nvar porter2Stemmer = require( 'wink-porter2-stemmer' );\n\n// ### Prepare Name Space\n\n// Create prepare name space.\nvar prepare = Object.create( null );\n\n/**\n * Helper\n * @namespace helper\n */\nprepare.helper = Object.create( null );\n\n// Words\nprepare.helper.returnWordsFilter = require( './helper-return-words-filter.js' );\nprepare.helper.words = prepare.helper.returnWordsFilter;\n// Make better **alias** name for the `word()` function.\n\n// Index\nprepare.helper.index = require( './helper-return-indexer.js' );\n// Make better **alias** name for the `index()` function.\nprepare.helper.returnIndexer = prepare.helper.index;\n\n// Return Quoted Text Extractor\nprepare.helper.returnQuotedTextExtractor = require( './helper-return-quoted-text-extractor.js' );\n\n/**\n * String\n * @namespace string\n */\nprepare.string = Object.create( null );\n\n// Lower Case\nprepare.string.lowerCase = require( './string-lower-case.js' );\n// Upper Case\nprepare.string.upperCase = require( './string-upper-case.js' );\n// Trim\nprepare.string.trim = require( './string-trim.js' );\n// Remove Extra Spaces\nprepare.string.removeExtraSpaces = require( './string-remove-extra-spaces.js' );\n// Retain Alpha-numerics\nprepare.string.retainAlphaNums = require( './string-retain-alpha-nums.js' );\n// Extract Person's Name\nprepare.string.extractPersonsName = require( './string-extract-persons-name.js' );\n// Extract Run of Capital Words\nprepare.string.extractRunOfCapitalWords = require( './string-extract-run-of-capital-words.js' );\n// Remove Punctuations\nprepare.string.removePunctuations = require( './string-remove-punctuations.js' );\n// Remove Special Chars\nprepare.string.removeSplChars = require( './string-remove-spl-chars.js' );\n// Remove HTML Tags\nprepare.string.removeHTMLTags = require( './string-remove-html-tags.js' );\n// Remove Elisions\nprepare.string.removeElisions = require( './string-remove-elisions.js' );\n// Split Elisions\nprepare.string.splitElisions = require( './string-split-elisions.js' );\n// Amplify Not Elision\nprepare.string.amplifyNotElision = require( './string-amplify-not-elision' );\n// Marker\nprepare.string.marker = require( './string-marker.js' );\n// SOC\nprepare.string.soc = require( './string-soc.js' );\nprepare.string.setOfChars = require( './string-soc.js' );\n// NGrams\nprepare.string.ngram = require( './string-ngram.js' );\n// Edge NGrams\nprepare.string.edgeNGrams = require( './string-edge-ngrams.js' );\n// BONG\nprepare.string.bong = require( './string-bong.js' );\nprepare.string.bagOfNGrams = require( './string-bong.js' );\n// SONG\nprepare.string.song = require( './string-song.js' );\nprepare.string.setOfNGrams = require( './string-song.js' );\n// Sentences\nprepare.string.sentences = require( './string-sentences.js' );\n// Compose Corpus\nprepare.string.composeCorpus = require( './string-compose-corpus.js' );\n// Tokenize0\nprepare.string.tokenize0 = require( './string-tokenize0.js' );\n// Tokenize\nprepare.string.tokenize = require( './string-tokenize.js' );\n// #### Stem\nprepare.string.stem = porter2Stemmer;\n// Phonetize\nprepare.string.phonetize = require( './string-phonetize.js' );\n// Soundex\nprepare.string.soundex = require( './string-soundex.js' );\n\n/**\n * Tokens\n * @namespace tokens\n */\nprepare.tokens = Object.create( null );\n\n// Stem\nprepare.tokens.stem = require( './tokens-stem.js' );\n// Phonetize\nprepare.tokens.phonetize = require( './tokens-phonetize.js' );\n// Soundex\nprepare.tokens.soundex = require( './tokens-soundex.js' );\n// Remove Words\nprepare.tokens.removeWords = require( './tokens-remove-words.js' );\n// BOW\nprepare.tokens.bow = require( './tokens-bow.js' );\nprepare.tokens.bagOfWords = require( './tokens-bow.js' );\n// SOW\nprepare.tokens.sow = require( './tokens-sow.js' );\nprepare.tokens.setOfWords = require( './tokens-sow.js' );\n// Propagate Negations\nprepare.tokens.propagateNegations = require( './tokens-propagate-negations.js' );\n// Bigrams\nprepare.tokens.bigrams = require( './tokens-bigrams.js' );\n// Append Bigrams\nprepare.tokens.appendBigrams = require( './tokens-append-bigrams.js' );\n\n// Export prepare.\nmodule.exports = prepare;\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/** Used to match Latin Unicode letters (excluding mathematical operators). */\nvar reLatin = /[\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\xff\\u0100-\\u017f]/g;\n\n/** Used to compose unicode character classes. */\nvar rsComboMarksRange = '\\\\u0300-\\\\u036f\\\\ufe20-\\\\ufe23',\n    rsComboSymbolsRange = '\\\\u20d0-\\\\u20f0';\n\n/** Used to compose unicode capture groups. */\nvar rsCombo = '[' + rsComboMarksRange + rsComboSymbolsRange + ']';\n\n/**\n * Used to match [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks) and\n * [combining diacritical marks for symbols](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks_for_Symbols).\n */\nvar reComboMark = RegExp(rsCombo, 'g');\n\n/** Used to map Latin Unicode letters to basic Latin letters. */\nvar deburredLetters = {\n  // Latin-1 Supplement block.\n  '\\xc0': 'A',  '\\xc1': 'A', '\\xc2': 'A', '\\xc3': 'A', '\\xc4': 'A', '\\xc5': 'A',\n  '\\xe0': 'a',  '\\xe1': 'a', '\\xe2': 'a', '\\xe3': 'a', '\\xe4': 'a', '\\xe5': 'a',\n  '\\xc7': 'C',  '\\xe7': 'c',\n  '\\xd0': 'D',  '\\xf0': 'd',\n  '\\xc8': 'E',  '\\xc9': 'E', '\\xca': 'E', '\\xcb': 'E',\n  '\\xe8': 'e',  '\\xe9': 'e', '\\xea': 'e', '\\xeb': 'e',\n  '\\xcc': 'I',  '\\xcd': 'I', '\\xce': 'I', '\\xcf': 'I',\n  '\\xec': 'i',  '\\xed': 'i', '\\xee': 'i', '\\xef': 'i',\n  '\\xd1': 'N',  '\\xf1': 'n',\n  '\\xd2': 'O',  '\\xd3': 'O', '\\xd4': 'O', '\\xd5': 'O', '\\xd6': 'O', '\\xd8': 'O',\n  '\\xf2': 'o',  '\\xf3': 'o', '\\xf4': 'o', '\\xf5': 'o', '\\xf6': 'o', '\\xf8': 'o',\n  '\\xd9': 'U',  '\\xda': 'U', '\\xdb': 'U', '\\xdc': 'U',\n  '\\xf9': 'u',  '\\xfa': 'u', '\\xfb': 'u', '\\xfc': 'u',\n  '\\xdd': 'Y',  '\\xfd': 'y', '\\xff': 'y',\n  '\\xc6': 'Ae', '\\xe6': 'ae',\n  '\\xde': 'Th', '\\xfe': 'th',\n  '\\xdf': 'ss',\n  // Latin Extended-A block.\n  '\\u0100': 'A',  '\\u0102': 'A', '\\u0104': 'A',\n  '\\u0101': 'a',  '\\u0103': 'a', '\\u0105': 'a',\n  '\\u0106': 'C',  '\\u0108': 'C', '\\u010a': 'C', '\\u010c': 'C',\n  '\\u0107': 'c',  '\\u0109': 'c', '\\u010b': 'c', '\\u010d': 'c',\n  '\\u010e': 'D',  '\\u0110': 'D', '\\u010f': 'd', '\\u0111': 'd',\n  '\\u0112': 'E',  '\\u0114': 'E', '\\u0116': 'E', '\\u0118': 'E', '\\u011a': 'E',\n  '\\u0113': 'e',  '\\u0115': 'e', '\\u0117': 'e', '\\u0119': 'e', '\\u011b': 'e',\n  '\\u011c': 'G',  '\\u011e': 'G', '\\u0120': 'G', '\\u0122': 'G',\n  '\\u011d': 'g',  '\\u011f': 'g', '\\u0121': 'g', '\\u0123': 'g',\n  '\\u0124': 'H',  '\\u0126': 'H', '\\u0125': 'h', '\\u0127': 'h',\n  '\\u0128': 'I',  '\\u012a': 'I', '\\u012c': 'I', '\\u012e': 'I', '\\u0130': 'I',\n  '\\u0129': 'i',  '\\u012b': 'i', '\\u012d': 'i', '\\u012f': 'i', '\\u0131': 'i',\n  '\\u0134': 'J',  '\\u0135': 'j',\n  '\\u0136': 'K',  '\\u0137': 'k', '\\u0138': 'k',\n  '\\u0139': 'L',  '\\u013b': 'L', '\\u013d': 'L', '\\u013f': 'L', '\\u0141': 'L',\n  '\\u013a': 'l',  '\\u013c': 'l', '\\u013e': 'l', '\\u0140': 'l', '\\u0142': 'l',\n  '\\u0143': 'N',  '\\u0145': 'N', '\\u0147': 'N', '\\u014a': 'N',\n  '\\u0144': 'n',  '\\u0146': 'n', '\\u0148': 'n', '\\u014b': 'n',\n  '\\u014c': 'O',  '\\u014e': 'O', '\\u0150': 'O',\n  '\\u014d': 'o',  '\\u014f': 'o', '\\u0151': 'o',\n  '\\u0154': 'R',  '\\u0156': 'R', '\\u0158': 'R',\n  '\\u0155': 'r',  '\\u0157': 'r', '\\u0159': 'r',\n  '\\u015a': 'S',  '\\u015c': 'S', '\\u015e': 'S', '\\u0160': 'S',\n  '\\u015b': 's',  '\\u015d': 's', '\\u015f': 's', '\\u0161': 's',\n  '\\u0162': 'T',  '\\u0164': 'T', '\\u0166': 'T',\n  '\\u0163': 't',  '\\u0165': 't', '\\u0167': 't',\n  '\\u0168': 'U',  '\\u016a': 'U', '\\u016c': 'U', '\\u016e': 'U', '\\u0170': 'U', '\\u0172': 'U',\n  '\\u0169': 'u',  '\\u016b': 'u', '\\u016d': 'u', '\\u016f': 'u', '\\u0171': 'u', '\\u0173': 'u',\n  '\\u0174': 'W',  '\\u0175': 'w',\n  '\\u0176': 'Y',  '\\u0177': 'y', '\\u0178': 'Y',\n  '\\u0179': 'Z',  '\\u017b': 'Z', '\\u017d': 'Z',\n  '\\u017a': 'z',  '\\u017c': 'z', '\\u017e': 'z',\n  '\\u0132': 'IJ', '\\u0133': 'ij',\n  '\\u0152': 'Oe', '\\u0153': 'oe',\n  '\\u0149': \"'n\", '\\u017f': 'ss'\n};\n\n/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\n/**\n * The base implementation of `_.propertyOf` without support for deep paths.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyOf(object) {\n  return function(key) {\n    return object == null ? undefined : object[key];\n  };\n}\n\n/**\n * Used by `_.deburr` to convert Latin-1 Supplement and Latin Extended-A\n * letters to basic Latin letters.\n *\n * @private\n * @param {string} letter The matched letter to deburr.\n * @returns {string} Returns the deburred letter.\n */\nvar deburrLetter = basePropertyOf(deburredLetters);\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\n/**\n * Deburrs `string` by converting\n * [Latin-1 Supplement](https://en.wikipedia.org/wiki/Latin-1_Supplement_(Unicode_block)#Character_table)\n * and [Latin Extended-A](https://en.wikipedia.org/wiki/Latin_Extended-A)\n * letters to basic Latin letters and removing\n * [combining diacritical marks](https://en.wikipedia.org/wiki/Combining_Diacritical_Marks).\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category String\n * @param {string} [string=''] The string to deburr.\n * @returns {string} Returns the deburred string.\n * @example\n *\n * _.deburr('déjà vu');\n * // => 'deja vu'\n */\nfunction deburr(string) {\n  string = toString(string);\n  return string && string.replace(reLatin, deburrLetter).replace(reComboMark, '');\n}\n\nmodule.exports = deburr;\n","import nlp from 'wink-nlp-utils'\nimport deburr from 'lodash.deburr'\n\nexport default function semantic(extract: string): string[] {\n  return [\n    nlp.string.removeHTMLTags,\n    nlp.string.removeExtraSpaces,\n    deburr,\n    nlp.string.sentences,\n  ]\n    .reduce((memo, fn) => fn(memo), extract)\n    .map(nlp.string.removePunctuations)\n}\n","/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_SAFE_INTEGER = 9007199254740991,\n    MAX_INTEGER = 1.7976931348623157e+308,\n    NAN = 0 / 0;\n\n/** `Object#toString` result references. */\nvar funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    symbolTag = '[object Symbol]';\n\n/** Used to match leading and trailing whitespace. */\nvar reTrim = /^\\s+|\\s+$/g;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseFloat = parseFloat,\n    freeParseInt = parseInt;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min,\n    nativeRandom = Math.random;\n\n/**\n * The base implementation of `_.random` without support for returning\n * floating-point numbers.\n *\n * @private\n * @param {number} lower The lower bound.\n * @param {number} upper The upper bound.\n * @returns {number} Returns the random number.\n */\nfunction baseRandom(lower, upper) {\n  return lower + nativeFloor(nativeRandom() * (upper - lower + 1));\n}\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  length = length == null ? MAX_SAFE_INTEGER : length;\n  return !!length &&\n    (typeof value == 'number' || reIsUint.test(value)) &&\n    (value > -1 && value % 1 == 0 && value < length);\n}\n\n/**\n * Checks if the given arguments are from an iteratee call.\n *\n * @private\n * @param {*} value The potential iteratee value argument.\n * @param {*} index The potential iteratee index or key argument.\n * @param {*} object The potential iteratee object argument.\n * @returns {boolean} Returns `true` if the arguments are from an iteratee call,\n *  else `false`.\n */\nfunction isIterateeCall(value, index, object) {\n  if (!isObject(object)) {\n    return false;\n  }\n  var type = typeof index;\n  if (type == 'number'\n        ? (isArrayLike(object) && isIndex(index, object.length))\n        : (type == 'string' && index in object)\n      ) {\n    return eq(object[index], value);\n  }\n  return false;\n}\n\n/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 8-9 which returns 'object' for typed array and other constructors.\n  var tag = isObject(value) ? objectToString.call(value) : '';\n  return tag == funcTag || tag == genTag;\n}\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\n/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return !!value && (type == 'object' || type == 'function');\n}\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && objectToString.call(value) == symbolTag);\n}\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = value.replace(reTrim, '');\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\n/**\n * Produces a random number between the inclusive `lower` and `upper` bounds.\n * If only one argument is provided a number between `0` and the given number\n * is returned. If `floating` is `true`, or either `lower` or `upper` are\n * floats, a floating-point number is returned instead of an integer.\n *\n * **Note:** JavaScript follows the IEEE-754 standard for resolving\n * floating-point values which can produce unexpected results.\n *\n * @static\n * @memberOf _\n * @since 0.7.0\n * @category Number\n * @param {number} [lower=0] The lower bound.\n * @param {number} [upper=1] The upper bound.\n * @param {boolean} [floating] Specify returning a floating-point number.\n * @returns {number} Returns the random number.\n * @example\n *\n * _.random(0, 5);\n * // => an integer between 0 and 5\n *\n * _.random(5);\n * // => also an integer between 0 and 5\n *\n * _.random(5, true);\n * // => a floating-point number between 0 and 5\n *\n * _.random(1.2, 5.2);\n * // => a floating-point number between 1.2 and 5.2\n */\nfunction random(lower, upper, floating) {\n  if (floating && typeof floating != 'boolean' && isIterateeCall(lower, upper, floating)) {\n    upper = floating = undefined;\n  }\n  if (floating === undefined) {\n    if (typeof upper == 'boolean') {\n      floating = upper;\n      upper = undefined;\n    }\n    else if (typeof lower == 'boolean') {\n      floating = lower;\n      lower = undefined;\n    }\n  }\n  if (lower === undefined && upper === undefined) {\n    lower = 0;\n    upper = 1;\n  }\n  else {\n    lower = toFinite(lower);\n    if (upper === undefined) {\n      upper = lower;\n      lower = 0;\n    } else {\n      upper = toFinite(upper);\n    }\n  }\n  if (lower > upper) {\n    var temp = lower;\n    lower = upper;\n    upper = temp;\n  }\n  if (floating || lower % 1 || upper % 1) {\n    var rand = nativeRandom();\n    return nativeMin(lower + (rand * (upper - lower + freeParseFloat('1e-' + ((rand + '').length - 1)))), upper);\n  }\n  return baseRandom(lower, upper);\n}\n\nmodule.exports = random;\n","/**\n * lodash 3.0.3 (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright 2012-2016 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2016 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/** `Object#toString` result references. */\nvar numberTag = '[object Number]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the [`toStringTag`](http://ecma-international.org/ecma-262/6.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is classified as a `Number` primitive or object.\n *\n * **Note:** To exclude `Infinity`, `-Infinity`, and `NaN`, which are classified\n * as numbers, use the `_.isFinite` method.\n *\n * @static\n * @memberOf _\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is correctly classified, else `false`.\n * @example\n *\n * _.isNumber(3);\n * // => true\n *\n * _.isNumber(Number.MIN_VALUE);\n * // => true\n *\n * _.isNumber(Infinity);\n * // => true\n *\n * _.isNumber('3');\n * // => false\n */\nfunction isNumber(value) {\n  return typeof value == 'number' ||\n    (isObjectLike(value) && objectToString.call(value) == numberTag);\n}\n\nmodule.exports = isNumber;\n","/**\n * lodash 3.0.0 (Custom Build) <https://lodash.com/>\n * Build: `lodash modern modularize exports=\"npm\" -o ./`\n * Copyright 2012-2015 The Dojo Foundation <http://dojofoundation.org/>\n * Based on Underscore.js 1.7.0 <http://underscorejs.org/LICENSE>\n * Copyright 2009-2015 Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n * Available under MIT license <https://lodash.com/license>\n */\n\n/**\n * This method returns the first argument provided to it.\n *\n * @static\n * @memberOf _\n * @category Utility\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'user': 'fred' };\n * _.identity(object) === object;\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n","const MIN_PASSWORD_LENGTH = 8\n\nexport const getMaxLength = (sentences: string[]) => {\n  return sentences.reduce((memo, { length }) => {\n    return length > memo ? length : memo\n  }, Number.MIN_SAFE_INTEGER)\n}\n\nexport const getMinLength = (inputLength: number) => {\n  return Math.max(inputLength, MIN_PASSWORD_LENGTH)\n}\n\nexport const getLength = (inputLength: number, maxLength: number) => {\n  return Math.min(getMinLength(inputLength), maxLength)\n}\n","const DEFAULT_WORD_MAP = [0, 0]\n\n/**\n * Given a desired length break the sentence with the minimum required words.\n */\nexport default (length: number) => {\n  return function transformLength(base: string) {\n    const words = base.split(' ')\n    const breakingWord = words\n      .map<[string, number]>((word) => [word, word.length])\n      .reduce((memo, [word, wordLength]) => {\n        const lastWordMap = memo[memo.length - 1] || DEFAULT_WORD_MAP\n        return memo.concat([[word, wordLength + lastWordMap[1]]])\n      }, [])\n      .filter(([_, stack]) => stack < length).length\n\n    return words.slice(0, breakingWord + 1).join(' ')\n  }\n}\n","const MAX = 100\nconst DEFAULT_RATIO = MAX / 2\n\n/**\n * Given a probabilistic ratio match against a random number to get a true/false.\n * Default value is half the max (50); simulating a flipping coin.\n */\nconst shall = (ratio = DEFAULT_RATIO) => {\n  return Math.random() * MAX < Math.min(ratio, MAX)\n}\n\n/**\n * Expose 4 common probabilistic types. For 10%, 25%, 50%, 75% and 90%\n */\nexport const weird = () => shall(10)\nexport const low = () => shall(25)\nexport const regular = () => shall()\nexport const high = () => shall(75)\nexport const common = () => shall(90)\n","import * as shall from '../shall'\n\nconst LEET_DICT = {\n  a: 4,\n  b: 8,\n  e: 3,\n  g: 9,\n  l: 1,\n  o: 0,\n  s: 5,\n  t: 7,\n  z: 2,\n}\n\n/**\n * Randomly replace some char by the leet equivalent if any.\n */\nexport default () => {\n  return function transformLeet(base: string) {\n    return base\n      .split('')\n      .map((char) => [char, LEET_DICT[char.toLowerCase()]])\n      .map(([char, leet]) => (leet && shall.weird() ? leet : char))\n      .join('')\n  }\n}\n","import * as shall from '../shall'\n\n/**\n * Randomly transform to upper case some chars. It assumes that most\n * of the base chars are lower case.\n */\nexport default () => {\n  return function transformCase(base: string) {\n    return base\n      .split('')\n      .map((char) => (shall.low() ? char.toUpperCase() : char))\n      .join('')\n  }\n}\n","import random from 'lodash.random'\nimport * as shall from '../shall'\n\nconst ASCII_LOWER = 37\nconst ASCII_HIGHER = 126\nconst EMPTY_CHAR = ''\n\nconst addRandomChar = () => {\n  if (shall.common()) return EMPTY_CHAR\n  return String.fromCharCode(random(ASCII_LOWER, ASCII_HIGHER))\n}\n\n/**\n * Randomly add some ASCII safe chars either at the beginning, the end or both\n * sides of each word.\n */\nexport default () => {\n  return function transformRandom(base: string) {\n    return base\n      .split(' ')\n      .map((word) => `${addRandomChar()}${word}${addRandomChar()}`)\n      .join(' ')\n  }\n}\n","import random from 'lodash.random'\nimport * as shall from '../shall'\n\nconst DEFAULT_SYMBOL = '.'\nconst SYMBOLS = `@#$%{}[]()/~,;:><${DEFAULT_SYMBOL}`.split('')\nconst EMPTY_CHAR = ''\nconst RX_WHITE_SPACE = / /g\n\n/**\n * Replace white spaces either by a random symbol or an empty char (remove).\n * Note that this transformer gets rid of the white spaces. Hence has to be\n * the last one always.\n * If it's disabled always return the DEFAULT_SYMBOL\n */\nexport default (isEnabled: boolean) => {\n  return function transformSymbols(base: string) {\n    return base.replace(RX_WHITE_SPACE, () => {\n      if (!isEnabled) return DEFAULT_SYMBOL\n\n      return shall.regular() ? SYMBOLS[random(SYMBOLS.length - 1)] : EMPTY_CHAR\n    })\n  }\n}\n","import random from 'lodash.random'\nimport isNumber from 'lodash.isnumber'\nimport identity from 'lodash.identity'\nimport * as password from './password'\nimport transformLength from './transform/length'\nimport transformLeet from './transform/leet'\nimport transformCase from './transform/case'\nimport transformRandom from './transform/random'\nimport transformSymbols from './transform/symbols'\n\nconst DEFAULT_SENTENCES = [''] // allows init of all methods\nconst DEFAULT_ARGS = {\n  case: false,\n  length: 24,\n  leet: false,\n  random: false,\n  symbols: false,\n}\ntype Args = number | typeof DEFAULT_ARGS\n\nconst sanitizeOptions = (args: Args = {} as Args): typeof DEFAULT_ARGS => {\n  return {\n    ...DEFAULT_ARGS,\n    ...(isNumber(args) ? { length: args } : args),\n  }\n}\n\nexport default function createGenerator(sentences = DEFAULT_SENTENCES) {\n  const maxLength = password.getMaxLength(sentences)\n\n  return function generator(args?: Args) {\n    const options = sanitizeOptions(args)\n    const length = password.getLength(options.length, maxLength)\n    const data = sentences.filter((x) => x.length >= length)\n    const base = data[random(data.length - 1)]\n\n    if (!base) return null\n\n    return [\n      transformLength(length),\n      options.leet && transformLeet(),\n      options.case && transformCase(),\n      options.random && transformRandom(),\n      transformSymbols(options.symbols),\n    ]\n      .map((fn) => fn || identity)\n      .reduce((memo, fn) => fn(memo), base)\n  }\n}\n","import request from './request'\nimport semantic from './semantic'\nimport generator from './generator'\n\nexport default async function spg() {\n  const article = await request()\n  const sentences = semantic(article)\n\n  return generator(sentences)\n}\n","import spg from 'semantic-password-generator'\nimport {\n  $password,\n  $renew,\n  $slider,\n  $hint,\n  $case,\n  $leet,\n  $random,\n  $symbols,\n} from './elements'\n\nconst updateHint = (password: string) => {\n  const length = password.length - 8\n\n  if (length < 18) return ($hint.innerText = 'Weak')\n  if (length < 24) return ($hint.innerText = 'Good')\n  return ($hint.innerText = 'Strong 💪')\n}\n\nexport const addGenerator = async () => {\n  let generator = await spg()\n\n  const update = () => {\n    const password = generator({\n      length: Number($slider.value),\n      case: $case.checked,\n      leet: $leet.checked,\n      random: $random.checked,\n      symbols: $symbols.checked,\n    })\n\n    updateHint(password)\n    $password.value = password\n  }\n\n  update()\n\n  $renew.addEventListener('click', async () => {\n    generator = await spg()\n    update()\n  })\n  ;[$case, $leet, $random, $symbols, $slider].forEach(($) => {\n    $.addEventListener('change', update)\n  })\n}\n","import { addClipboard } from './clipboard'\nimport { addGenerator } from './generator'\n\naddClipboard()\naddGenerator()\n"]}